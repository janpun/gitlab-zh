{"version":3,"sources":["webpack:///./pages/groups/settings/ci_cd/show/index.js","webpack:///./settings_panels.js","webpack:///./create_item_dropdown.js","webpack:///./toggle_buttons.js","webpack:///./behaviors/secret_values.js","webpack:///./ci_variable_list/ci_variable_list.js","webpack:///./ci_variable_list/ajax_variable_list.js","webpack:///./lib/utils/http_status.js"],"names":["document","addEventListener","Object","_settings_panels__WEBPACK_IMPORTED_MODULE_0__","variableListEl","querySelector","_ci_variable_list_ajax_variable_list__WEBPACK_IMPORTED_MODULE_1__","container","saveButton","errorBox","saveEndpoint","dataset","expandSection","$section","find","text","off","scrollTop","addClass","hasClass","one","removeClass","toggleSection","on","closeSection","initSettingsPanels","jquery__WEBPACK_IMPORTED_MODULE_0___default","each","i","elm","window","location","hash","$target","length","CreateItemDropdown","options","_classCallCheck","this","defaultToggleLabel","fieldName","onSelect","getDataOption","getData","getDataRemote","filterRemote","createNewItemFromValueOption","createNewItemFromValue","$dropdown","$dropdownContainer","parent","$dropdownFooter","$createButton","buildDropdown","bindEvents","toggleFooter","_this","glDropdown","data","bind","filterable","search","fields","selectable","toggleLabel","selected","underscore__WEBPACK_IMPORTED_MODULE_0___default","a","escape","title","item","id","onFilter","toggleCreateNewButton","clicked","e","preventDefault","html","val","onClickCreateWildcard","refreshData","selectRowAtIndex","remote","execute","term","callback","_this2","arguments","undefined","uniqueData","selectedItem","some","concat","newValue","toggleState","toggleClass","updateToggle","toggle","isOn","classList","setupToggleButtons","clickCallback","querySelectorAll","forEach","input","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","value","previousIsOn","setAttribute","Promise","resolve","then","catch","removeAttribute","trigger","_flash__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","SecretValues","_ref","_ref$valueSelector","valueSelector","_ref$placeholderSelec","placeholderSelector","revealButton","isRevealed","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_1__","secretRevealStatus","updateDom","onRevealButtonClicked","previousIsRevealed","values","placeholder","textContent","_locale__WEBPACK_IMPORTED_MODULE_0__","ALL_ENVIRONMENTS_STRING","createEnvironmentItem","VariableList","formField","$container","environmentDropdownMap","WeakMap","inputMap","selector","default","key","secret_value","protected","environment_scope","_destroy","secretValues","_behaviors_secret_values__WEBPACK_IMPORTED_MODULE_5__","init","index","rowEl","initRow","removeRow","currentTarget","closest","inputSelector","keys","map","name","join","$row","is","checkIfRowTouched","$lastRow","last","insertRow","_toggle_buttons__WEBPACK_IMPORTED_MODULE_3__","css","$environmentSelect","createItemDropdown","_create_item_dropdown__WEBPACK_IMPORTED_MODULE_4__","getEnvironmentValues","refreshDropdownData","clearDropdown","set","_this3","$rowClone","clone","removeAttr","entry","remove","after","row","attr","hide","_this4","$el","isEnabled","_this5","toArray","slice","resultant","$input","valueMap","reduce","prevValueMap","envInput","_extends","_this6","environmentDropdown","get","AjaxVariableList","_ref$formField","variableList","_ci_variable_list__WEBPACK_IMPORTED_MODULE_6__","onSaveClicked","loadingIcon","toggleEnableRow","_lib_utils_axios_utils__WEBPACK_IMPORTED_MODULE_1__","patch","variables_attributes","getAllData","validateStatus","status","_lib_utils_http_status__WEBPACK_IMPORTED_MODULE_5__","OK","MULTIPLE_CHOICES","BAD_REQUEST","res","errors","errorList","updateRowsWithPersistedVariables","variables","hideValues","innerHTML","errorString","_flash__WEBPACK_IMPORTED_MODULE_3__","persistedVariables","persistedVariableMap","variableMap","variable","destroyInput","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_4__","persistedVariable","__webpack_require__","d","__webpack_exports__","successCodes","httpStatusCodes","ABORTED","CREATED","ACCEPTED","NON_AUTHORITATIVE_INFORMATION","NO_CONTENT","RESET_CONTENT","PARTIAL_CONTENT","MULTI_STATUS","ALREADY_REPORTED","IM_USED","NOT_FOUND"],"mappings":"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","file":"pages.groups.settings.ci_cd.show.b488c367.chunk.js","sourcesContent":["import initSettingsPanels from '~/settings_panels';\nimport AjaxVariableList from '~/ci_variable_list/ajax_variable_list';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Initialize expandable settings panels\n  initSettingsPanels();\n\n  const variableListEl = document.querySelector('.js-ci-variable-list-section');\n  // eslint-disable-next-line no-new\n  new AjaxVariableList({\n    container: variableListEl,\n    saveButton: variableListEl.querySelector('.js-secret-variables-save-button'),\n    errorBox: variableListEl.querySelector('.js-ci-variable-error-box'),\n    saveEndpoint: variableListEl.dataset.saveEndpoint,\n  });\n});\n","import $ from 'jquery';\n\nfunction expandSection($section) {\n  $section.find('.js-settings-toggle').text('Collapse');\n  $section.find('.settings-content').off('scroll.expandSection').scrollTop(0);\n  $section.addClass('expanded');\n  if (!$section.hasClass('no-animate')) {\n    $section.addClass('animating')\n      .one('animationend.animateSection', () => $section.removeClass('animating'));\n  }\n}\n\nfunction closeSection($section) {\n  $section.find('.js-settings-toggle').text('Expand');\n  $section.find('.settings-content').on('scroll.expandSection', () => expandSection($section));\n  $section.removeClass('expanded');\n  if (!$section.hasClass('no-animate')) {\n    $section.addClass('animating')\n      .one('animationend.animateSection', () => $section.removeClass('animating'));\n  }\n}\n\nfunction toggleSection($section) {\n  $section.removeClass('no-animate');\n  if ($section.hasClass('expanded')) {\n    closeSection($section);\n  } else {\n    expandSection($section);\n  }\n}\n\nexport default function initSettingsPanels() {\n  $('.settings').each((i, elm) => {\n    const $section = $(elm);\n    $section.on('click.toggleSection', '.js-settings-toggle', () => toggleSection($section));\n\n    if (!$section.hasClass('expanded')) {\n      $section.find('.settings-content').on('scroll.expandSection', () => {\n        $section.removeClass('no-animate');\n        expandSection($section);\n      });\n    }\n  });\n\n  if (window.location.hash) {\n    const $target = $(window.location.hash);\n    if ($target.length && $target.hasClass('settings')) {\n      expandSection($target);\n    }\n  }\n}\n","import _ from 'underscore';\n\nexport default class CreateItemDropdown {\n  /**\n   * @param {Object} options containing\n   *                         `$dropdown` target element\n   *                          `onSelect` event callback\n   * $dropdown must be an element created using `dropdown_tag()` rails helper\n   */\n  constructor(options) {\n    this.defaultToggleLabel = options.defaultToggleLabel;\n    this.fieldName = options.fieldName;\n    this.onSelect = options.onSelect || (() => {});\n    this.getDataOption = options.getData;\n    this.getDataRemote = !!options.filterRemote;\n    this.createNewItemFromValueOption = options.createNewItemFromValue;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$createButton = this.$dropdownContainer.find('.js-dropdown-create-new-item');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.toggleFooter(true);\n  }\n\n  buildDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.getData.bind(this),\n      filterable: true,\n      filterRemote: this.getDataRemote,\n      search: {\n        fields: ['text'],\n      },\n      selectable: true,\n      toggleLabel(selected) {\n        return (selected && 'id' in selected) ? _.escape(selected.title) : this.defaultToggleLabel;\n      },\n      fieldName: this.fieldName,\n      text(item) {\n        return _.escape(item.text);\n      },\n      id(item) {\n        return _.escape(item.id);\n      },\n      onFilter: this.toggleCreateNewButton.bind(this),\n      clicked: (options) => {\n        options.e.preventDefault();\n        this.onSelect();\n      },\n    });\n  }\n\n  clearDropdown() {\n    this.$dropdownContainer.find('.dropdown-content').html('');\n    this.$dropdownContainer.find('.dropdown-input-field').val('');\n  }\n\n  bindEvents() {\n    this.$createButton.on('click', this.onClickCreateWildcard.bind(this));\n  }\n\n  onClickCreateWildcard(e) {\n    e.preventDefault();\n\n    this.refreshData();\n    this.$dropdown.data('glDropdown').selectRowAtIndex();\n  }\n\n  refreshData() {\n    // Refresh the dropdown's data, which ends up calling `getData`\n    this.$dropdown.data('glDropdown').remote.execute();\n  }\n\n  getData(term, callback) {\n    this.getDataOption(term, (data = []) => {\n      // Ensure the selected item isn't already in the data to avoid duplicates\n      const alreadyHasSelectedItem = this.selectedItem && data.some(item =>\n        item.id === this.selectedItem.id,\n      );\n\n      let uniqueData = data;\n      if (!alreadyHasSelectedItem) {\n        uniqueData = data.concat(this.selectedItem || []);\n      }\n\n      callback(uniqueData);\n    });\n  }\n\n  createNewItemFromValue(newValue) {\n    if (this.createNewItemFromValueOption) {\n      return this.createNewItemFromValueOption(newValue);\n    }\n\n    return {\n      title: newValue,\n      id: newValue,\n      text: newValue,\n    };\n  }\n\n  toggleCreateNewButton(newValue) {\n    if (newValue) {\n      this.selectedItem = this.createNewItemFromValue(newValue);\n\n      this.$dropdownContainer\n        .find('.js-dropdown-create-new-item code')\n        .text(newValue);\n    }\n\n    this.toggleFooter(!newValue);\n  }\n\n  toggleFooter(toggleState) {\n    this.$dropdownFooter.toggleClass('hidden', toggleState);\n  }\n}\n","import $ from 'jquery';\nimport Flash from './flash';\nimport { __ } from './locale';\nimport { convertPermissionToBoolean } from './lib/utils/common_utils';\n\n/*\n example HAML:\n ```\n  %button.js-project-feature-toggle.project-feature-toggle{ type: \"button\",\n    class: \"#{'is-checked' if enabled?}\",\n    'aria-label': _('Toggle Kubernetes Cluster') }\n    %input{ type: \"hidden\", class: 'js-project-feature-toggle-input', value: enabled? }\n  ```\n*/\n\nfunction updateToggle(toggle, isOn) {\n  toggle.classList.toggle('is-checked', isOn);\n}\n\nfunction onToggleClicked(toggle, input, clickCallback) {\n  const previousIsOn = convertPermissionToBoolean(input.value);\n\n  // Visually change the toggle and start loading\n  updateToggle(toggle, !previousIsOn);\n  toggle.setAttribute('disabled', true);\n  toggle.classList.toggle('is-loading', true);\n\n  Promise.resolve(clickCallback(!previousIsOn, toggle))\n    .then(() => {\n      // Actually change the input value\n      input.setAttribute('value', !previousIsOn);\n    })\n    .catch(() => {\n      // Revert the visuals if something goes wrong\n      updateToggle(toggle, previousIsOn);\n    })\n    .then(() => {\n      // Remove the loading indicator in any case\n      toggle.removeAttribute('disabled');\n      toggle.classList.toggle('is-loading', false);\n\n      $(input).trigger('trigger-change');\n    })\n    .catch(() => {\n      Flash(__('Something went wrong when toggling the button'));\n    });\n}\n\nexport default function setupToggleButtons(container, clickCallback = () => {}) {\n  const toggles = container.querySelectorAll('.js-project-feature-toggle');\n\n  toggles.forEach((toggle) => {\n    const input = toggle.querySelector('.js-project-feature-toggle-input');\n    const isOn = convertPermissionToBoolean(input.value);\n\n    // Get the visible toggle in sync with the hidden input\n    updateToggle(toggle, isOn);\n\n    toggle.addEventListener('click', onToggleClicked.bind(null, toggle, input, clickCallback));\n  });\n}\n","import { n__ } from '../locale';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\n\nexport default class SecretValues {\n  constructor({\n    container,\n    valueSelector = '.js-secret-value',\n    placeholderSelector = '.js-secret-value-placeholder',\n  }) {\n    this.container = container;\n    this.valueSelector = valueSelector;\n    this.placeholderSelector = placeholderSelector;\n  }\n\n  init() {\n    this.revealButton = this.container.querySelector('.js-secret-value-reveal-button');\n\n    if (this.revealButton) {\n      const isRevealed = convertPermissionToBoolean(this.revealButton.dataset.secretRevealStatus);\n      this.updateDom(isRevealed);\n\n      this.revealButton.addEventListener('click', this.onRevealButtonClicked.bind(this));\n    }\n  }\n\n  onRevealButtonClicked() {\n    const previousIsRevealed = convertPermissionToBoolean(\n      this.revealButton.dataset.secretRevealStatus,\n    );\n    this.updateDom(!previousIsRevealed);\n  }\n\n  updateDom(isRevealed) {\n    const values = this.container.querySelectorAll(this.valueSelector);\n    values.forEach((value) => {\n      value.classList.toggle('hide', !isRevealed);\n    });\n\n    const placeholders = this.container.querySelectorAll(this.placeholderSelector);\n    placeholders.forEach((placeholder) => {\n      placeholder.classList.toggle('hide', isRevealed);\n    });\n\n    this.revealButton.textContent = isRevealed ? n__('Hide value', 'Hide values', values.length) : n__('Reveal value', 'Reveal values', values.length);\n    this.revealButton.dataset.secretRevealStatus = isRevealed;\n  }\n}\n","import $ from 'jquery';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\nimport { s__ } from '../locale';\nimport setupToggleButtons from '../toggle_buttons';\nimport CreateItemDropdown from '../create_item_dropdown';\nimport SecretValues from '../behaviors/secret_values';\n\nconst ALL_ENVIRONMENTS_STRING = s__('CiVariable|All environments');\n\nfunction createEnvironmentItem(value) {\n  return {\n    title: value === '*' ? ALL_ENVIRONMENTS_STRING : value,\n    id: value,\n    text: value === '*' ? s__('CiVariable|* (All environments)') : value,\n  };\n}\n\nexport default class VariableList {\n  constructor({\n    container,\n    formField,\n  }) {\n    this.$container = $(container);\n    this.formField = formField;\n    this.environmentDropdownMap = new WeakMap();\n\n    this.inputMap = {\n      id: {\n        selector: '.js-ci-variable-input-id',\n        default: '',\n      },\n      key: {\n        selector: '.js-ci-variable-input-key',\n        default: '',\n      },\n      secret_value: {\n        selector: '.js-ci-variable-input-value',\n        default: '',\n      },\n      protected: {\n        selector: '.js-ci-variable-input-protected',\n        default: 'false',\n      },\n      environment_scope: {\n        // We can't use a `.js-` class here because\n        // gl_dropdown replaces the <input> and doesn't copy over the class\n        // See https://gitlab.com/gitlab-org/gitlab-ce/issues/42458\n        selector: `input[name=\"${this.formField}[variables_attributes][][environment_scope]\"]`,\n        default: '*',\n      },\n      _destroy: {\n        selector: '.js-ci-variable-input-destroy',\n        default: '',\n      },\n    };\n\n    this.secretValues = new SecretValues({\n      container: this.$container[0],\n      valueSelector: '.js-row:not(:last-child) .js-secret-value',\n      placeholderSelector: '.js-row:not(:last-child) .js-secret-value-placeholder',\n    });\n  }\n\n  init() {\n    this.bindEvents();\n    this.secretValues.init();\n  }\n\n  bindEvents() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      this.initRow(rowEl);\n    });\n\n    this.$container.on('click', '.js-row-remove-button', (e) => {\n      e.preventDefault();\n      this.removeRow($(e.currentTarget).closest('.js-row'));\n    });\n\n    const inputSelector = Object.keys(this.inputMap)\n      .map(name => this.inputMap[name].selector)\n      .join(',');\n\n    // Remove any empty rows except the last row\n    this.$container.on('blur', inputSelector, (e) => {\n      const $row = $(e.currentTarget).closest('.js-row');\n\n      if ($row.is(':not(:last-child)') && !this.checkIfRowTouched($row)) {\n        this.removeRow($row);\n      }\n    });\n\n    // Always make sure there is an empty last row\n    this.$container.on('input trigger-change', inputSelector, () => {\n      const $lastRow = this.$container.find('.js-row').last();\n\n      if (this.checkIfRowTouched($lastRow)) {\n        this.insertRow($lastRow);\n      }\n    });\n  }\n\n  initRow(rowEl) {\n    const $row = $(rowEl);\n\n    setupToggleButtons($row[0]);\n\n    // Reset the resizable textarea\n    $row.find(this.inputMap.secret_value.selector).css('height', '');\n\n    const $environmentSelect = $row.find('.js-variable-environment-toggle');\n    if ($environmentSelect.length) {\n      const createItemDropdown = new CreateItemDropdown({\n        $dropdown: $environmentSelect,\n        defaultToggleLabel: ALL_ENVIRONMENTS_STRING,\n        fieldName: `${this.formField}[variables_attributes][][environment_scope]`,\n        getData: (term, callback) => callback(this.getEnvironmentValues()),\n        createNewItemFromValue: createEnvironmentItem,\n        onSelect: () => {\n          // Refresh the other dropdowns in the variable list\n          // so they have the new value we just picked\n          this.refreshDropdownData();\n\n          $row.find(this.inputMap.environment_scope.selector).trigger('trigger-change');\n        },\n      });\n\n      // Clear out any data that might have been left-over from the row clone\n      createItemDropdown.clearDropdown();\n\n      this.environmentDropdownMap.set($row[0], createItemDropdown);\n    }\n  }\n\n  insertRow($row) {\n    const $rowClone = $row.clone();\n    $rowClone.removeAttr('data-is-persisted');\n\n    // Reset the inputs to their defaults\n    Object.keys(this.inputMap).forEach((name) => {\n      const entry = this.inputMap[name];\n      $rowClone.find(entry.selector).val(entry.default);\n    });\n\n    // Close any dropdowns\n    $rowClone.find('.dropdown-menu.show').each((index, $dropdown) => {\n      $dropdown.classList.remove('show');\n    });\n\n    this.initRow($rowClone);\n\n    $row.after($rowClone);\n  }\n\n  removeRow(row) {\n    const $row = $(row);\n    const isPersisted = convertPermissionToBoolean($row.attr('data-is-persisted'));\n\n    if (isPersisted) {\n      $row.hide();\n      $row\n        // eslint-disable-next-line no-underscore-dangle\n        .find(this.inputMap._destroy.selector)\n        .val(true);\n    } else {\n      $row.remove();\n    }\n\n    // Refresh the other dropdowns in the variable list\n    // so any value with the variable deleted is gone\n    this.refreshDropdownData();\n  }\n\n  checkIfRowTouched($row) {\n    return Object.keys(this.inputMap).some((name) => {\n      const entry = this.inputMap[name];\n      const $el = $row.find(entry.selector);\n      return $el.length && $el.val() !== entry.default;\n    });\n  }\n\n  toggleEnableRow(isEnabled = true) {\n    this.$container.find(this.inputMap.key.selector).attr('disabled', !isEnabled);\n    this.$container.find('.js-row-remove-button').attr('disabled', !isEnabled);\n  }\n\n  hideValues() {\n    this.secretValues.updateDom(false);\n  }\n\n  getAllData() {\n    // Ignore the last empty row because we don't want to try persist\n    // a blank variable and run into validation problems.\n    const validRows = this.$container.find('.js-row').toArray().slice(0, -1);\n\n    return validRows.map((rowEl) => {\n      const resultant = {};\n      Object.keys(this.inputMap).forEach((name) => {\n        const entry = this.inputMap[name];\n        const $input = $(rowEl).find(entry.selector);\n        if ($input.length) {\n          resultant[name] = $input.val();\n        }\n      });\n\n      return resultant;\n    });\n  }\n\n  getEnvironmentValues() {\n    const valueMap = this.$container.find(this.inputMap.environment_scope.selector).toArray()\n      .reduce((prevValueMap, envInput) => ({\n        ...prevValueMap,\n        [envInput.value]: envInput.value,\n      }), {});\n\n    return Object.keys(valueMap).map(createEnvironmentItem);\n  }\n\n  refreshDropdownData() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      const environmentDropdown = this.environmentDropdownMap.get(rowEl);\n      if (environmentDropdown) {\n        environmentDropdown.refreshData();\n      }\n    });\n  }\n}\n","import _ from 'underscore';\nimport axios from '../lib/utils/axios_utils';\nimport { s__ } from '../locale';\nimport Flash from '../flash';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\nimport statusCodes from '../lib/utils/http_status';\nimport VariableList from './ci_variable_list';\n\nfunction generateErrorBoxContent(errors) {\n  const errorList = [].concat(errors).map(errorString => `\n    <li>\n      ${_.escape(errorString)}\n    </li>\n  `);\n\n  return `\n    <p>\n      ${s__('CiVariable|Validation failed')}\n    </p>\n    <ul>\n      ${errorList.join('')}\n    </ul>\n  `;\n}\n\n// Used for the variable list on CI/CD projects/groups settings page\nexport default class AjaxVariableList {\n  constructor({\n    container,\n    saveButton,\n    errorBox,\n    formField = 'variables',\n    saveEndpoint,\n  }) {\n    this.container = container;\n    this.saveButton = saveButton;\n    this.errorBox = errorBox;\n    this.saveEndpoint = saveEndpoint;\n\n    this.variableList = new VariableList({\n      container: this.container,\n      formField,\n    });\n\n    this.bindEvents();\n    this.variableList.init();\n  }\n\n  bindEvents() {\n    this.saveButton.addEventListener('click', this.onSaveClicked.bind(this));\n  }\n\n  onSaveClicked() {\n    const loadingIcon = this.saveButton.querySelector('.js-secret-variables-save-loading-icon');\n    loadingIcon.classList.toggle('hide', false);\n    this.errorBox.classList.toggle('hide', true);\n    // We use this to prevent a user from changing a key before we have a chance\n    // to match it up in `updateRowsWithPersistedVariables`\n    this.variableList.toggleEnableRow(false);\n\n    return axios.patch(this.saveEndpoint, {\n      variables_attributes: this.variableList.getAllData(),\n    }, {\n      // We want to be able to process the `res.data` from a 400 error response\n      // and print the validation messages such as duplicate variable keys\n      validateStatus: status => (\n          status >= statusCodes.OK &&\n          status < statusCodes.MULTIPLE_CHOICES\n        ) ||\n        status === statusCodes.BAD_REQUEST,\n    })\n      .then((res) => {\n        loadingIcon.classList.toggle('hide', true);\n        this.variableList.toggleEnableRow(true);\n\n        if (res.status === statusCodes.OK && res.data) {\n          this.updateRowsWithPersistedVariables(res.data.variables);\n          this.variableList.hideValues();\n        } else if (res.status === statusCodes.BAD_REQUEST) {\n          // Validation failed\n          this.errorBox.innerHTML = generateErrorBoxContent(res.data);\n          this.errorBox.classList.toggle('hide', false);\n        }\n      })\n      .catch(() => {\n        loadingIcon.classList.toggle('hide', true);\n        this.variableList.toggleEnableRow(true);\n        Flash(s__('CiVariable|Error occured while saving variables'));\n      });\n  }\n\n  updateRowsWithPersistedVariables(persistedVariables = []) {\n    const persistedVariableMap = [].concat(persistedVariables).reduce((variableMap, variable) => ({\n      ...variableMap,\n      [variable.key]: variable,\n    }), {});\n\n    this.container.querySelectorAll('.js-row').forEach((row) => {\n      // If we submitted a row that was destroyed, remove it so we don't try\n      // to destroy it again which would cause a BE error\n      const destroyInput = row.querySelector('.js-ci-variable-input-destroy');\n      if (convertPermissionToBoolean(destroyInput.value)) {\n        row.remove();\n      // Update the ID input so any future edits and `_destroy` will apply on the BE\n      } else {\n        const key = row.querySelector('.js-ci-variable-input-key').value;\n        const persistedVariable = persistedVariableMap[key];\n\n        if (persistedVariable) {\n          // eslint-disable-next-line no-param-reassign\n          row.querySelector('.js-ci-variable-input-id').value = persistedVariable.id;\n          row.setAttribute('data-is-persisted', 'true');\n        }\n      }\n    });\n  }\n}\n","/**\n * exports HTTP status codes\n */\n\nconst httpStatusCodes = {\n  ABORTED: 0,\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n  MULTI_STATUS: 207,\n  ALREADY_REPORTED: 208,\n  IM_USED: 226,\n  MULTIPLE_CHOICES: 300,\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n};\n\nexport const successCodes = [\n  httpStatusCodes.OK,\n  httpStatusCodes.CREATED,\n  httpStatusCodes.ACCEPTED,\n  httpStatusCodes.NON_AUTHORITATIVE_INFORMATION,\n  httpStatusCodes.NO_CONTENT,\n  httpStatusCodes.RESET_CONTENT,\n  httpStatusCodes.PARTIAL_CONTENT,\n  httpStatusCodes.MULTI_STATUS,\n  httpStatusCodes.ALREADY_REPORTED,\n  httpStatusCodes.IM_USED,\n];\n\nexport default httpStatusCodes;\n"],"sourceRoot":""}