{"version":3,"sources":["webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/src/console.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/src/configError.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/vendor/json-stringify-safe/stringify.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/vendor/TraceKit/tracekit.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/src/raven.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/src/singleton.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raven-js/src/utils.js","webpack:///./raven/raven_config.js","webpack:///./raven/index.js"],"names":["module","exports","wrapMethod","console","level","callback","originalConsoleLevel","originalConsole","sentryLevel","args","slice","call","arguments","msg","join","data","logger","extra","Function","prototype","apply","RavenConfigError","message","this","name","Error","constructor","indexOf","haystack","needle","i","length","serializer","replacer","cycleReplacer","stack","keys","key","value","thisPos","splice","push","Infinity","err","Object","hasOwnProperty","stringifyError","obj","spaces","JSON","stringify","getSerialize","global","utils","__webpack_require__","TraceKit","collectWindowErrors","debug","_window","window","self","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","getLocationHref","document","location","href","report","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastArgs","lastException","lastExceptionStack","notifyHandlers","isWindowError","exception","concat","inner","traceKitWindowOnError","url","lineNo","colNo","ex","isErrorEvent","error","computeStackTrace","augmentStackTraceWithInitialElement","processLastException","isError","groups","line","column","undefined","toString","match","func","_lastExceptionStack","_lastArgs","rethrow","setTimeout","incomplete","subscribe","handler","onerror","unsubscribe","uninstall","computeStackTraceFromStackProp","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","split","exec","j","isNative","columnNumber","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","item","functionName","funcs","recursion","curr","caller","input","substring","e","result","sourceURL","fileName","lineNumber","description","isObject","isUndefined","isFunction","isString","isArray","isEmptyObject","each","objectMerge","truncate","objectFrozen","hasKey","joinRegExp","urlencode","uuid4","htmlTreeAsString","isSameException","isSameStacktrace","parseUrl","fill","supportsFetch","wrapConsoleMethod","dsnKeys","dsnPattern","now","Date","_document","_navigator","navigator","keepOriginalCallback","original","Raven","method","_hasJSON","_hasDocument","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","release","SENTRY_RELEASE","id","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","headers","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","_fetchDefaults","keepalive","referrerPolicy","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","_originalConsole","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","_lastHref","_resetBackoff","VERSION","config","dsn","options","_logDebug","globalOptions","setDSN","maxBreadcrumbs","Math","max","min","autoBreadcrumbDefaults","xhr","dom","sentry","instrumentDefaults","tryCatch","install","isSetup","_handleOnErrorStackInfo","_patchFunctionToString","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","path","lastIndexOf","substr","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","wrap","_before","__raven__","__raven_wrapper__","wrapped","deep","_ignoreNextOnError","captureException","property","__orig__","_unpatchFunctionToString","_restoreBuiltIns","isNotError","isNotErrorEvent","isErrorEventWithoutError","captureMessage","trimHeadFrames","stacktrace","_handleStackInfo","ex1","test","initialCall","fileurl","fingerprint","frames","_prepareFrames","reverse","_send","captureBreadcrumb","crumb","timestamp","breadcrumbCallback","shift","addPlugin","plugin","pluginArgs","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","showReportDialog","eventId","encode","encodeURIComponent","qs","email","globalServer","script","createElement","async","src","head","body","appendChild","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","toLowerCase","_breadcrumbEventHandler","evtName","target","category","_keypressEventHandler","tagName","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parsedTo","parsedFrom","protocol","host","relative","_originalFunctionToString","wrappedBuiltIns","wrapTimeFn","orig","fn","t","Array","originalCallback","wrapEventTarget","proto","capture","secure","handleEvent","before","clickHandler","keypressHandler","type","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","onreadystatechange","origFetch","fetchInput","Request","fetchData","then","response","addEventListener","attachEvent","hasPushAndReplaceState","app","runtime","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","log","consoleMethodCallback","_","builtin","installer","str","m","allowSecretKey","port","_processException","lineno","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","filename","colno","function","prefixedMessage","values","culprit","_trimPacket","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProp","urlProps","_getHttpData","httpData","userAgent","User-Agent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","_setBackoffState","retry","get","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","forEach","random","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","onError","opts","evaluatedHeaders","evaluatedFetchParameters","_evaluateHash","fetchParameters","defaultFetchOptions","fetchOptions","fetch","ok","XDomainRequest","replace","onload","open","setRequestHeader","send","hash","evaluated","setUser","setReleaseContext","RavenConstructor","_Raven","noConflict","what","isPlainObject","supportsErrorEvent","ErrorEvent","object","htmlElementAsString","elem","className","classes","attr","out","attrWhitelist","getAttribute","isOnlyOneTruthy","a","b","stack1","stack2","frames1","frames2","Headers","Response","wrappedCallback","normalizedData","obj1","obj2","isFrozen","patterns","pattern","sources","len","source","RegExp","o","pairs","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","nextStr","height","sepLength","parentNode","ex2","query","fragment","replacement","track","raven_config","IGNORE_ERRORS","IGNORE_URLS","SAMPLE_RATE","init","configure","bindRavenErrors","currentUserId","singleton_default","sentryDsn","isProduction","shouldSendSample","bind","jquery_default","on","handleRavenErrors","event","req","statusText","responseText","raven_index","gon","sentry_dsn","current_user_id","gitlab_url","revision","__webpack_exports__"],"mappings":"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","file":"raven.83394f8d.chunk.js","sourcesContent":["var wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = '' + args.join(' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg = 'Assertion failed: ' + (args.slice(1).join(' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n","function RavenConfigError(message) {\n  this.name = 'RavenConfigError';\n  this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n","/*\n json-stringify-safe\n Like JSON.stringify, but doesn't throw on circular references.\n\n Originally forked from https://github.com/isaacs/json-stringify-safe\n version 5.0.1 on 3/8/2017 and modified to handle Errors serialization\n and IE8 compatibility. Tests for this are in test/vendor.\n\n ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE\n*/\n\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\n\nfunction indexOf(haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) return i;\n  }\n  return -1;\n}\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\n\n// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\nfunction stringifyError(value) {\n  var err = {\n    // These properties are implemented as magical getters and don't show up in for in\n    stack: value.stack,\n    message: value.message,\n    name: value.name\n  };\n\n  for (var i in value) {\n    if (Object.prototype.hasOwnProperty.call(value, i)) {\n      err[i] = value[i];\n    }\n  }\n\n  return err;\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [];\n  var keys = [];\n\n  if (cycleReplacer == null) {\n    cycleReplacer = function(key, value) {\n      if (stack[0] === value) {\n        return '[Circular ~]';\n      }\n      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';\n    };\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = indexOf(stack, this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n\n      if (~indexOf(stack, value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    return replacer == null\n      ? value instanceof Error ? stringifyError(value) : value\n      : replacer.call(this, key, value);\n  };\n}\n","var utils = require('../../src/utils');\n\n/*\n TraceKit - Cross brower stack traces\n\n This was originally forked from github.com/occ/TraceKit, but has since been\n largely re-written and is now maintained as part of raven-js.  Tests for\n this are in test/vendor.\n\n MIT license\n*/\n\nvar TraceKit = {\n  collectWindowErrors: true,\n  debug: false\n};\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n\n  return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n  var handlers = [],\n    lastArgs = null,\n    lastException = null,\n    lastExceptionStack = null;\n\n  /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n  function subscribe(handler) {\n    installGlobalHandler();\n    handlers.push(handler);\n  }\n\n  /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n  function unsubscribe(handler) {\n    for (var i = handlers.length - 1; i >= 0; --i) {\n      if (handlers[i] === handler) {\n        handlers.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n     * Remove all crash handlers.\n     */\n  function unsubscribeAll() {\n    uninstallGlobalHandler();\n    handlers = [];\n  }\n\n  /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n  function notifyHandlers(stack, isWindowError) {\n    var exception = null;\n    if (isWindowError && !TraceKit.collectWindowErrors) {\n      return;\n    }\n    for (var i in handlers) {\n      if (handlers.hasOwnProperty(i)) {\n        try {\n          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n  /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} msg Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n  function traceKitWindowOnError(msg, url, lineNo, colNo, ex) {\n    var stack = null;\n    // If 'ex' is ErrorEvent, get real Error from inside\n    var exception = utils.isErrorEvent(ex) ? ex.error : ex;\n    // If 'msg' is ErrorEvent, get real message from inside\n    var message = utils.isErrorEvent(msg) ? msg.message : msg;\n\n    if (lastExceptionStack) {\n      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(\n        lastExceptionStack,\n        url,\n        lineNo,\n        message\n      );\n      processLastException();\n    } else if (exception && utils.isError(exception)) {\n      // non-string `exception` arg; attempt to extract stack trace\n\n      // New chrome and blink send along a real error object\n      // Let's just report that like a normal error.\n      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n      stack = TraceKit.computeStackTrace(exception);\n      notifyHandlers(stack, true);\n    } else {\n      var location = {\n        url: url,\n        line: lineNo,\n        column: colNo\n      };\n\n      var name = undefined;\n      var groups;\n\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          message = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n\n      stack = {\n        name: name,\n        message: message,\n        url: getLocationHref(),\n        stack: [location]\n      };\n      notifyHandlers(stack, true);\n    }\n\n    if (_oldOnerrorHandler) {\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n\n  function installGlobalHandler() {\n    if (_onErrorHandlerInstalled) {\n      return;\n    }\n    _oldOnerrorHandler = _window.onerror;\n    _window.onerror = traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n\n  function uninstallGlobalHandler() {\n    if (!_onErrorHandlerInstalled) {\n      return;\n    }\n    _window.onerror = _oldOnerrorHandler;\n    _onErrorHandlerInstalled = false;\n    _oldOnerrorHandler = undefined;\n  }\n\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n      _lastArgs = lastArgs;\n    lastArgs = null;\n    lastExceptionStack = null;\n    lastException = null;\n    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n  }\n\n  /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n  function report(ex, rethrow) {\n    var args = _slice.call(arguments, 1);\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit.computeStackTrace(ex);\n    lastExceptionStack = stack;\n    lastException = ex;\n    lastArgs = args;\n\n    // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n    setTimeout(function() {\n      if (lastException === ex) {\n        processLastException();\n      }\n    }, stack.incomplete ? 2000 : 0);\n\n    if (rethrow !== false) {\n      throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n  }\n\n  report.subscribe = subscribe;\n  report.unsubscribe = unsubscribe;\n  report.uninstall = unsubscribeAll;\n  return report;\n})();\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceFromStackProp(ex) {\n    if (typeof ex.stack === 'undefined' || !ex.stack) return;\n\n    var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n      gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n      winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx(?:-web)|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n      // Used to additionally parse URL/line/column from eval frames\n      geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n      chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n      lines = ex.stack.split('\\n'),\n      stack = [],\n      submatch,\n      parts,\n      element,\n      reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          url: !isNative ? parts[2] : null,\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = winjs.exec(lines[i]))) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = null; // no column when eval\n        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n  }\n\n  /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n    var initial = {\n      url: url,\n      line: lineNo\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!initial.func) {\n        initial.func = UNKNOWN_FUNCTION;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (\n            !stackInfo.stack[0].line &&\n            stackInfo.stack[0].func === initial.func\n          ) {\n            stackInfo.stack[0].line = initial.line;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n\n  /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceByWalkingCallerChain(ex, depth) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n      stack = [],\n      funcs = {},\n      recursion = false,\n      parts,\n      item,\n      source;\n\n    for (\n      var curr = computeStackTraceByWalkingCallerChain.caller;\n      curr && !recursion;\n      curr = curr.caller\n    ) {\n      if (curr === computeStackTrace || curr === TraceKit.report) {\n        // console.log('skipping internal function');\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        line: null,\n        column: null\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = parts.input.substring(0, parts.input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if (funcs['' + curr]) {\n        recursion = true;\n      } else {\n        funcs['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      // console.log('depth is ' + depth);\n      // console.log('stack is ' + stack.length);\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n    augmentStackTraceWithInitialElement(\n      result,\n      ex.sourceURL || ex.fileName,\n      ex.line || ex.lineNumber,\n      ex.message || ex.description\n    );\n    return result;\n  }\n\n  /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n  function computeStackTrace(ex, depth) {\n    var stack = null;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      stack = computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n\n    try {\n      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref()\n    };\n  }\n\n  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n  return computeStackTrace;\n})();\n\nmodule.exports = TraceKit;\n","/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isErrorEvent = utils.isErrorEvent;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    maxMessageLength: 0,\n\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    keepalive: true,\n    referrerPolicy: 'origin'\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.22.1',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = undefined;\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n  captureException: function(ex, options) {\n    // Cases for sending ex as a message, rather than an exception\n    var isNotError = !isError(ex);\n    var isNotErrorEvent = !isErrorEvent(ex);\n    var isErrorEventWithoutError = isErrorEvent(ex) && !ex.error;\n\n    if ((isNotError && isNotErrorEvent) || isErrorEventWithoutError) {\n      return this.captureMessage(\n        ex,\n        objectMerge(\n          {\n            trimHeadFrames: 1,\n            stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n          },\n          options\n        )\n      );\n    }\n\n    // Get actual Error from ErrorEvent\n    if (isErrorEvent(ex)) ex = ex.error;\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n\n    var data = objectMerge(\n      {\n        message: msg + '' // Make sure it's actually a string\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (this._globalOptions.stacktrace || (options && options.stacktrace)) {\n      options = objectMerge(\n        {\n          // fingerprint on msg, not stack trace (legacy behavior, could be\n          // revisited)\n          fingerprint: msg,\n          // since we know this is a synthetic trace, the top N-most frames\n          // MUST be from Raven.js, so mark them as in_app later by setting\n          // trimHeadFrames\n          trimHeadFrames: (options.trimHeadFrames || 0) + 1\n        },\n        options\n      );\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = options || {};\n\n    var lastEventId = options.eventId || this.lastEventId();\n    if (!lastEventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    var dsn = options.dsn || this._dsn;\n    if (!dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var qs = '';\n    qs += '?eventId=' + encode(lastEventId);\n    qs += '&dsn=' + encode(dsn);\n\n    var user = options.user || this._globalContext.user;\n    if (user) {\n      if (user.name) qs += '&name=' + encode(user.name);\n      if (user.email) qs += '&email=' + encode(user.email);\n    }\n\n    var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/' + qs;\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(originalCallback);\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(fn.handleEvent);\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(fn, undefined, before),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(self.wrap(cb));\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(orig, undefined, onreadystatechangeHandler);\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            return origFetch.apply(this, args).then(function(response) {\n              fetchData.status_code = response.status;\n\n              self.captureBreadcrumb({\n                type: 'http',\n                category: 'fetch',\n                data: fetchData\n              });\n\n              return response;\n            });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      history.pushState &&\n      history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function() {\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo.apply(this, arguments);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        culprit: fileurl\n      },\n      options\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.culprit !== last.culprit // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function(key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHash: function(hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n\n  _logDebug: function(level) {\n    if (this._originalConsoleMethods[level] && this.debug) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n","/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\nvar RavenConstructor = require('./raven');\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _Raven = _window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function() {\n  _window.Raven = _Raven;\n  return Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n","var _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction isObject(what) {\n  return typeof what === 'object' && what !== null;\n}\n\n// Yanked from https://git.io/vS8DV re-used under CC0\n// with some tiny modifications\nfunction isError(value) {\n  switch ({}.toString.call(value)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return value instanceof Error;\n  }\n}\n\nfunction isErrorEvent(value) {\n  return supportsErrorEvent() && {}.toString.call(value) === '[object ErrorEvent]';\n}\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isPlainObject(what) {\n  return Object.prototype.toString.call(what) === '[object Object]';\n}\n\nfunction isString(what) {\n  return Object.prototype.toString.call(what) === '[object String]';\n}\n\nfunction isArray(what) {\n  return Object.prototype.toString.call(what) === '[object Array]';\n}\n\nfunction isEmptyObject(what) {\n  if (!isPlainObject(what)) return false;\n\n  for (var _ in what) {\n    if (what.hasOwnProperty(_)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsFetch() {\n  if (!('fetch' in _window)) return false;\n\n  try {\n    new Headers(); // eslint-disable-line no-new\n    new Request(''); // eslint-disable-line no-new\n    new Response(); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction wrappedCallback(callback) {\n  function dataCallback(data, original) {\n    var normalizedData = callback(data) || data;\n    if (original) {\n      return original(normalizedData) || normalizedData;\n    }\n    return normalizedData;\n  }\n\n  return dataCallback;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n  each(obj2, function(key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\n/**\n * This function is only used for react-native.\n * react-native freezes object that have already been sent over the\n * js bridge. We need this function in order to check if the object is frozen.\n * So it's ok that objectFrozen returns false if Object.isFrozen is not\n * supported because it's not relevant for other \"platforms\". See related issue:\n * https://github.com/getsentry/react-native-sentry/issues/57\n */\nfunction objectFrozen(obj) {\n  if (!Object.isFrozen) {\n    return false;\n  }\n  return Object.isFrozen(obj);\n}\n\nfunction truncate(str, max) {\n  return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n    i = 0,\n    len = patterns.length,\n    pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n    // Intentionally skip other cases\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function(key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n  if (typeof url !== 'string') return {};\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    // eslint-disable-next-line no-undef\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = function(num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) +\n      pad(arr[1]) +\n      pad(arr[2]) +\n      pad(arr[3]) +\n      pad(arr[4]) +\n      pad(arr[5]) +\n      pad(arr[6]) +\n      pad(arr[7])\n    );\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (\n      nextStr === 'html' ||\n      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)\n    ) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if both parameters are undefined\n */\nfunction isBothUndefined(a, b) {\n  return isUndefined(a) && isUndefined(b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n\n  // in case both stacktraces are undefined, we can't decide so default to false\n  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;\n\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames;\n\n  // Exit early if frame count differs\n  if (frames1.length !== frames2.length) return false;\n\n  // Iterate through every frame; bail out if anything differs\n  var a, b;\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (\n      a.filename !== b.filename ||\n      a.lineno !== b.lineno ||\n      a.colno !== b.colno ||\n      a['function'] !== b['function']\n    )\n      return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  obj[name].__raven__ = true;\n  obj[name].__orig__ = orig;\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\nmodule.exports = {\n  isObject: isObject,\n  isError: isError,\n  isErrorEvent: isErrorEvent,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isPlainObject: isPlainObject,\n  isString: isString,\n  isArray: isArray,\n  isEmptyObject: isEmptyObject,\n  supportsErrorEvent: supportsErrorEvent,\n  supportsFetch: supportsFetch,\n  wrappedCallback: wrappedCallback,\n  each: each,\n  objectMerge: objectMerge,\n  truncate: truncate,\n  objectFrozen: objectFrozen,\n  hasKey: hasKey,\n  joinRegExp: joinRegExp,\n  urlencode: urlencode,\n  uuid4: uuid4,\n  htmlTreeAsString: htmlTreeAsString,\n  htmlElementAsString: htmlElementAsString,\n  isSameException: isSameException,\n  isSameStacktrace: isSameStacktrace,\n  parseUrl: parseUrl,\n  fill: fill\n};\n","import Raven from 'raven-js';\nimport $ from 'jquery';\n\nconst IGNORE_ERRORS = [\n  // Random plugins/extensions\n  'top.GLOBALS',\n  // See: http://blog.errorception.com/2012/03/tale-of-unfindable-js-error. html\n  'originalCreateNotification',\n  'canvas.contentDocument',\n  'MyApp_RemoveAllHighlights',\n  'http://tt.epicplay.com',\n  'Can\\'t find variable: ZiteReader',\n  'jigsaw is not defined',\n  'ComboSearch is not defined',\n  'http://loading.retry.widdit.com/',\n  'atomicFindClose',\n  // Facebook borked\n  'fb_xd_fragment',\n  // ISP \"optimizing\" proxy - `Cache-Control: no-transform` seems to\n  // reduce this. (thanks @acdha)\n  // See http://stackoverflow.com/questions/4113268\n  'bmi_SafeAddOnload',\n  'EBCallBackMessageReceived',\n  // See http://toolbar.conduit.com/Developer/HtmlAndGadget/Methods/JSInjection.aspx\n  'conduitPage',\n];\n\nconst IGNORE_URLS = [\n  // Facebook flakiness\n  /graph\\.facebook\\.com/i,\n  // Facebook blocked\n  /connect\\.facebook\\.net\\/en_US\\/all\\.js/i,\n  // Woopra flakiness\n  /eatdifferent\\.com\\.woopra-ns\\.com/i,\n  /static\\.woopra\\.com\\/js\\/woopra\\.js/i,\n  // Chrome extensions\n  /extensions\\//i,\n  /^chrome:\\/\\//i,\n  // Other plugins\n  /127\\.0\\.0\\.1:4001\\/isrunning/i, // Cacaoweb\n  /webappstoolbarba\\.texthelp\\.com\\//i,\n  /metrics\\.itunes\\.apple\\.com\\.edgesuite\\.net\\//i,\n];\n\nconst SAMPLE_RATE = 95;\n\nconst RavenConfig = {\n  IGNORE_ERRORS,\n  IGNORE_URLS,\n  SAMPLE_RATE,\n  init(options = {}) {\n    this.options = options;\n\n    this.configure();\n    this.bindRavenErrors();\n    if (this.options.currentUserId) this.setUser();\n  },\n\n  configure() {\n    Raven.config(this.options.sentryDsn, {\n      release: this.options.release,\n      tags: this.options.tags,\n      whitelistUrls: this.options.whitelistUrls,\n      environment: this.options.isProduction ? 'production' : 'development',\n      ignoreErrors: this.IGNORE_ERRORS,\n      ignoreUrls: this.IGNORE_URLS,\n      shouldSendCallback: this.shouldSendSample.bind(this),\n    }).install();\n  },\n\n  setUser() {\n    Raven.setUserContext({\n      id: this.options.currentUserId,\n    });\n  },\n\n  bindRavenErrors() {\n    $(document).on('ajaxError.raven', this.handleRavenErrors);\n  },\n\n  handleRavenErrors(event, req, config, err) {\n    const error = err || req.statusText;\n    const responseText = req.responseText || 'Unknown response text';\n\n    Raven.captureMessage(error, {\n      extra: {\n        type: config.type,\n        url: config.url,\n        data: config.data,\n        status: req.status,\n        response: responseText,\n        error,\n        event,\n      },\n    });\n  },\n\n  shouldSendSample() {\n    return Math.random() * 100 <= this.SAMPLE_RATE;\n  },\n};\n\nexport default RavenConfig;\n","import RavenConfig from './raven_config';\n\nconst index = function index() {\n  RavenConfig.init({\n    sentryDsn: gon.sentry_dsn,\n    currentUserId: gon.current_user_id,\n    whitelistUrls: [gon.gitlab_url],\n    isProduction: process.env.NODE_ENV,\n    release: gon.revision,\n    tags: {\n      revision: gon.revision,\n    },\n  });\n\n  return RavenConfig;\n};\n\nindex();\n\nexport default index;\n"],"sourceRoot":""}