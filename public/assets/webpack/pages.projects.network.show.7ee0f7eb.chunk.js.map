{"version":3,"sources":["webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/raphael/raphael.js","webpack:///./shortcuts_network.js","webpack:///./network/raphael.js","webpack:///./network/branch_graph.js","webpack:///./pages/projects/network/network.js","webpack:///./pages/projects/network/show/index.js"],"names":["factory","modules","installedModules","__webpack_require__","moduleId","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","R","apply","eve","first","is","on","array","_engine","create","splice","nu","add","args","Array","prototype","slice","arguments","length","f","pop","version","paperproto","separator","elements","circle","rect","path","ellipse","text","image","formatrg","has","g","doc","document","win","window","oldRaphael","was","Object","Raphael","Paper","this","ca","customAttributes","concat","supportsTouch","DocumentTouch","E","S","Str","String","split","events","touchMap","mousedown","mousemove","mouseup","lowerCase","toLowerCase","math","Math","mmax","max","mmin","min","abs","pow","PI","objectToString","toString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","bezierrg","round","toFloat","parseFloat","toInt","parseInt","upperCase","toUpperCase","availableAttrs","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","cx","cy","fill","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","height","href","letter-spacing","opacity","r","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","target","text-anchor","title","transform","width","x","y","class","availableAnimAttrs","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","sortByNumber","a","b","pipe","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","el","attr","attrs","bbox","_getBBox","set","mapPath","matrix","i","j","ii","jj","pathi","path2curve","_g","type","SVGAngle","implementation","hasFeature","d","createElement","innerHTML","firstChild","style","behavior","adj","clone","obj","res","constructor","key","svg","vml","_Paper","fn","_id","o","isArray","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","snapTo","values","value","tolerance","rem","uuidRegEx","uuidReplacer","createUUID","random","replace","setWindow","newwin","initWin","toHex","color","bod","trim","docum","ActiveXObject","write","close","body","e","createPopup","range","createTextRange","cacher","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","s","hsltoString","l","rgbtoString","hex","prepareRGB","clr","getRGB","packageRGB","rgb","scope","postprocessor","newf","arg","join","cache","count","item","push","repush","shift","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","v","G","B","X","C","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","clrToString","catmullRom2bezier","crp","z","iLen","colour","indexOf","error","substring","charAt","red","green","blue","t","match","hsb","hsl","getColor","start","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","data","params","name","parseTransformString","TString","ps","sleep","setTimeout","base3","p1","p2","p3","p4","bezlen","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","sqrt","intersect","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","t1","t2","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","k","kk","segment1","segment2","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","t12","t3","mx","my","nx","ny","ax","ay","alpha","n","end","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","offset","_tear","paper","top","prev","bottom","next","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","_","getBBox","extractTransform","transformPath","_extractTransform","tstr","dx","dy","tdata","sx","sy","Matrix","tlen","command","absolute","inver","invert","translate","scale","dirtyT","getEmpty","equaliseTransform","_equaliseTransform","tt1","tt2","maxlength","from","to","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","out","me","get","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","element","pos","_f","olde","targetTouches","removeEventListener","attachEvent","event","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parent","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","unbind","shape","removeData","getData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","Set","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","x_y_w_h","elem","box","docElem","clientTop","clientLeft","elementFromPoint","so","getBoundingClientRect","ownerDocument","pageYOffset","left","pageXOffset","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","forEach","bot","callback","thisArg","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","ll","step","getTatLen","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","easing_formulas","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","animationElements","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","animation","Now","Date","paused","now","time","ms","easing","diff","that","init","initstatus","anim","percent","status","stop","upto255","real","from2","repeat","totalOrigin","runAnimation","percents","CubicBezierAtTime","duration","sampleCurveX","epsilon","t0","d2","solveCurveX","solve","Animation","newAnim","times","sort","isInAnim","isInAnimSet","timestamp","toColour","pathes","toPath","eq","to2","easyeasy","del","origin","stopAnimation","animateWith","onAnimation","delay","floor","json","100","lastKey","animate","setTime","pause","resume","tokenRegex","objNotationRegex","items","setproto","method","clear","index","insertion","tail","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","thefont","RegExp","fontName","test","print","string","size","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","all","quote","quotedName","isFunc","replacer","ninja","st","readyState","isLoaded","current_event","comaseparator","numsort","firstDefined","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","zIndex","_events","nes","names","es","sep","exist","hasOwnProperty","nt","subname","cur","nts","off","funcs","once","xlink","markers","block","classic","diamond","open","oval","markerCounter","$","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","dir","isNaN","vector","defs","gradientTransform","stop-color","stop-opacity","isFinite","fillurl","fillOpacity","mode","documentMode","location","protocol","host","pathname","search","updatePosition","pattern","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","remove","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","filter","removeAttribute","preserveAspectRatio","_viewBox","con","Error","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","map","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","position","createNode","newpath","isOval","total","vals","isMove","path2vml","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","H","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","_oid","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","margin","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml","ShortcutsNetwork","graph","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","mousetrap_default","bind","scrollRight","scrollUp","scrollDown","scrollBottom","enabledHelp","shortcuts_navigation","raphael_default","commitTooltip","commit","icon","gon","relative_url_root","author","nameText","idText","messageText","message","textSet","textWrap","boxWidth","tooltip","content","abc","letterWidth","words","word","network_raphael","BranchGraph","element1","options1","options","preparedCommits","mtime","mspace","parents","offsetX","offsetY","unitTime","unitSpace","prev_start","load","_this2","axios_utils","url","then","_ref","jquery_default","prepareData","days","commits","buildGraph","catch","locale","ch","cw","ref","collectParents","graphHeight","graphWidth","barHeight","isParent","markCommit","collectColors","results","space","len1","ref1","results1","cuday","cumonth","day","mm","_slicedToArray","renderPartialGraph","bindEvents","isGraphEdge","hasDrawn","drawDot","drawLines","appendLabel","appendAnchor","scroll","find","shortrefs","textbox","refs","substr","anchor","click","commit_url","avatar_box_x","avatar_box_y","arrow","parentCommit","parentX1","parentX2","parentY","route","commit_id","network","opts","vph","closest","submit","branch_graph","networkGraph","shortcuts_network"],"mappings":"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","file":"pages.projects.network.show.7ee0f7eb.chunk.js","sourcesContent":["// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.2.0 - JavaScript Vector Library                                                             │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Raphael\"] = factory();\n\telse\n\t\troot[\"Raphael\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\n\t    return R;\n\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(eve) {\n\n\t    /*\\\n\t     * Raphael\n\t     [ method ]\n\t     **\n\t     * Creates a canvas object on which to draw.\n\t     * You must do this first, as all future calls to drawing methods\n\t     * from this instance will be bound to this canvas.\n\t     > Parameters\n\t     **\n\t     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n\t     = (object) @Paper\n\t     > Usage\n\t     | // Each of the following examples create a canvas\n\t     | // that is 320px wide by 200px high.\n\t     | // Canvas is created at the viewport’s 10,50 coordinate.\n\t     | var paper = Raphael(10, 50, 320, 200);\n\t     | // Canvas is created at the top left corner of the #notepad element\n\t     | // (or its top right corner in dir=\"rtl\" elements)\n\t     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n\t     | // Same as above\n\t     | var paper = Raphael(\"notepad\", 320, 200);\n\t     | // Image dump\n\t     | var set = Raphael([\"notepad\", 320, 200, {\n\t     |     type: \"rect\",\n\t     |     x: 10,\n\t     |     y: 10,\n\t     |     width: 25,\n\t     |     height: 25,\n\t     |     stroke: \"#f00\"\n\t     | }, {\n\t     |     type: \"text\",\n\t     |     x: 30,\n\t     |     y: 40,\n\t     |     text: \"Dump\"\n\t     | }]);\n\t    \\*/\n\t    function R(first) {\n\t        if (R.is(first, \"function\")) {\n\t            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n\t        } else if (R.is(first, array)) {\n\t            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n\t        } else {\n\t            var args = Array.prototype.slice.call(arguments, 0);\n\t            if (R.is(args[args.length - 1], \"function\")) {\n\t                var f = args.pop();\n\t                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n\t                    f.call(R._engine.create[apply](R, args));\n\t                });\n\t            } else {\n\t                return R._engine.create[apply](R, arguments);\n\t            }\n\t        }\n\t    }\n\t    R.version = \"2.2.0\";\n\t    R.eve = eve;\n\t    var loaded,\n\t        separator = /[, ]+/,\n\t        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n\t        formatrg = /\\{(\\d+)\\}/g,\n\t        proto = \"prototype\",\n\t        has = \"hasOwnProperty\",\n\t        g = {\n\t            doc: document,\n\t            win: window\n\t        },\n\t        oldRaphael = {\n\t            was: Object.prototype[has].call(g.win, \"Raphael\"),\n\t            is: g.win.Raphael\n\t        },\n\t        Paper = function () {\n\t            /*\\\n\t             * Paper.ca\n\t             [ property (object) ]\n\t             **\n\t             * Shortcut for @Paper.customAttributes\n\t            \\*/\n\t            /*\\\n\t             * Paper.customAttributes\n\t             [ property (object) ]\n\t             **\n\t             * If you have a set of attributes that you would like to represent\n\t             * as a function of some number you can do it easily with custom attributes:\n\t             > Usage\n\t             | paper.customAttributes.hue = function (num) {\n\t             |     num = num % 1;\n\t             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n\t             | };\n\t             | // Custom attribute “hue” will change fill\n\t             | // to be given hue with fixed saturation and brightness.\n\t             | // Now you can use it like this:\n\t             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n\t             | // or even like this:\n\t             | c.animate({hue: 1}, 1e3);\n\t             |\n\t             | // You could also create custom attribute\n\t             | // with multiple parameters:\n\t             | paper.customAttributes.hsb = function (h, s, b) {\n\t             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n\t             | };\n\t             | c.attr({hsb: \"0.5 .8 1\"});\n\t             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n\t            \\*/\n\t            this.ca = this.customAttributes = {};\n\t        },\n\t        paperproto,\n\t        appendChild = \"appendChild\",\n\t        apply = \"apply\",\n\t        concat = \"concat\",\n\t        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\n\t        E = \"\",\n\t        S = \" \",\n\t        Str = String,\n\t        split = \"split\",\n\t        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n\t        touchMap = {\n\t            mousedown: \"touchstart\",\n\t            mousemove: \"touchmove\",\n\t            mouseup: \"touchend\"\n\t        },\n\t        lowerCase = Str.prototype.toLowerCase,\n\t        math = Math,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        PI = math.PI,\n\t        nu = \"number\",\n\t        string = \"string\",\n\t        array = \"array\",\n\t        toString = \"toString\",\n\t        fillString = \"fill\",\n\t        objectToString = Object.prototype.toString,\n\t        paper = {},\n\t        push = \"push\",\n\t        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\n\t        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n\t        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n\t        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t        round = math.round,\n\t        setAttribute = \"setAttribute\",\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        upperCase = Str.prototype.toUpperCase,\n\t        availableAttrs = R._availableAttrs = {\n\t            \"arrow-end\": \"none\",\n\t            \"arrow-start\": \"none\",\n\t            blur: 0,\n\t            \"clip-rect\": \"0 0 1e9 1e9\",\n\t            cursor: \"default\",\n\t            cx: 0,\n\t            cy: 0,\n\t            fill: \"#fff\",\n\t            \"fill-opacity\": 1,\n\t            font: '10px \"Arial\"',\n\t            \"font-family\": '\"Arial\"',\n\t            \"font-size\": \"10\",\n\t            \"font-style\": \"normal\",\n\t            \"font-weight\": 400,\n\t            gradient: 0,\n\t            height: 0,\n\t            href: \"http://raphaeljs.com/\",\n\t            \"letter-spacing\": 0,\n\t            opacity: 1,\n\t            path: \"M0,0\",\n\t            r: 0,\n\t            rx: 0,\n\t            ry: 0,\n\t            src: \"\",\n\t            stroke: \"#000\",\n\t            \"stroke-dasharray\": \"\",\n\t            \"stroke-linecap\": \"butt\",\n\t            \"stroke-linejoin\": \"butt\",\n\t            \"stroke-miterlimit\": 0,\n\t            \"stroke-opacity\": 1,\n\t            \"stroke-width\": 1,\n\t            target: \"_blank\",\n\t            \"text-anchor\": \"middle\",\n\t            title: \"Raphael\",\n\t            transform: \"\",\n\t            width: 0,\n\t            x: 0,\n\t            y: 0,\n\t            \"class\": \"\"\n\t        },\n\t        availableAnimAttrs = R._availableAnimAttrs = {\n\t            blur: nu,\n\t            \"clip-rect\": \"csv\",\n\t            cx: nu,\n\t            cy: nu,\n\t            fill: \"colour\",\n\t            \"fill-opacity\": nu,\n\t            \"font-size\": nu,\n\t            height: nu,\n\t            opacity: nu,\n\t            path: \"path\",\n\t            r: nu,\n\t            rx: nu,\n\t            ry: nu,\n\t            stroke: \"colour\",\n\t            \"stroke-opacity\": nu,\n\t            \"stroke-width\": nu,\n\t            transform: \"transform\",\n\t            width: nu,\n\t            x: nu,\n\t            y: nu\n\t        },\n\t        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n\t        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n\t        hsrg = {hs: 1, rg: 1},\n\t        p2s = /,?([achlmqrstvxz]),?/gi,\n\t        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n\t        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n\t        eldata = {},\n\t        sortByKey = function (a, b) {\n\t            return a.key - b.key;\n\t        },\n\t        sortByNumber = function (a, b) {\n\t            return toFloat(a) - toFloat(b);\n\t        },\n\t        fun = function () {},\n\t        pipe = function (x) {\n\t            return x;\n\t        },\n\t        rectPath = R._rectPath = function (x, y, w, h, r) {\n\t            if (r) {\n\t                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n\t            }\n\t            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        },\n\t        ellipsePath = function (x, y, rx, ry) {\n\t            if (ry == null) {\n\t                ry = rx;\n\t            }\n\t            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n\t        },\n\t        getPath = R._getPath = {\n\t            path: function (el) {\n\t                return el.attr(\"path\");\n\t            },\n\t            circle: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.r);\n\t            },\n\t            ellipse: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n\t            },\n\t            rect: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height, a.r);\n\t            },\n\t            image: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height);\n\t            },\n\t            text: function (el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            },\n\t            set : function(el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            }\n\t        },\n\t        /*\\\n\t         * Raphael.mapPath\n\t         [ method ]\n\t         **\n\t         * Transform the path string with given matrix.\n\t         > Parameters\n\t         - path (string) path string\n\t         - matrix (object) see @Matrix\n\t         = (string) transformed path string\n\t        \\*/\n\t        mapPath = R.mapPath = function (path, matrix) {\n\t            if (!matrix) {\n\t                return path;\n\t            }\n\t            var x, y, i, j, ii, jj, pathi;\n\t            path = path2curve(path);\n\t            for (i = 0, ii = path.length; i < ii; i++) {\n\t                pathi = path[i];\n\t                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                    x = matrix.x(pathi[j], pathi[j + 1]);\n\t                    y = matrix.y(pathi[j], pathi[j + 1]);\n\t                    pathi[j] = x;\n\t                    pathi[j + 1] = y;\n\t                }\n\t            }\n\t            return path;\n\t        };\n\n\t    R._g = g;\n\t    /*\\\n\t     * Raphael.type\n\t     [ property (string) ]\n\t     **\n\t     * Can be “SVG”, “VML” or empty, depending on browser support.\n\t    \\*/\n\t    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n\t    if (R.type == \"VML\") {\n\t        var d = g.doc.createElement(\"div\"),\n\t            b;\n\t        d.innerHTML = '<v:shape adj=\"1\"/>';\n\t        b = d.firstChild;\n\t        b.style.behavior = \"url(#default#VML)\";\n\t        if (!(b && typeof b.adj == \"object\")) {\n\t            return (R.type = E);\n\t        }\n\t        d = null;\n\t    }\n\t    /*\\\n\t     * Raphael.svg\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports SVG.\n\t    \\*/\n\t    /*\\\n\t     * Raphael.vml\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports VML.\n\t    \\*/\n\t    R.svg = !(R.vml = R.type == \"VML\");\n\t    R._Paper = Paper;\n\t    /*\\\n\t     * Raphael.fn\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n\t     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n\t     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n\t     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n\t     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n\t     * ensure any namespacing ensures proper context.\n\t     > Usage\n\t     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n\t     |     return this.path( ... );\n\t     | };\n\t     | // or create namespace\n\t     | Raphael.fn.mystuff = {\n\t     |     arrow: function () {…},\n\t     |     star: function () {…},\n\t     |     // etc…\n\t     | };\n\t     | var paper = Raphael(10, 10, 630, 480);\n\t     | // then use it\n\t     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n\t     | paper.mystuff.arrow();\n\t     | paper.mystuff.star();\n\t    \\*/\n\t    R.fn = paperproto = Paper.prototype = R.prototype;\n\t    R._id = 0;\n\t    /*\\\n\t     * Raphael.is\n\t     [ method ]\n\t     **\n\t     * Handful of replacements for `typeof` operator.\n\t     > Parameters\n\t     - o (…) any object or primitive\n\t     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n\t     = (boolean) is given value is of given type\n\t    \\*/\n\t    R.is = function (o, type) {\n\t        type = lowerCase.call(type);\n\t        if (type == \"finite\") {\n\t            return !isnan[has](+o);\n\t        }\n\t        if (type == \"array\") {\n\t            return o instanceof Array;\n\t        }\n\t        return  (type == \"null\" && o === null) ||\n\t                (type == typeof o && o !== null) ||\n\t                (type == \"object\" && o === Object(o)) ||\n\t                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n\t                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t    };\n\n\t    function clone(obj) {\n\t        if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t            return obj;\n\t        }\n\t        var res = new obj.constructor;\n\t        for (var key in obj) if (obj[has](key)) {\n\t            res[key] = clone(obj[key]);\n\t        }\n\t        return res;\n\t    }\n\n\t    /*\\\n\t     * Raphael.angle\n\t     [ method ]\n\t     **\n\t     * Returns angle between two or three points\n\t     > Parameters\n\t     - x1 (number) x coord of first point\n\t     - y1 (number) y coord of first point\n\t     - x2 (number) x coord of second point\n\t     - y2 (number) y coord of second point\n\t     - x3 (number) #optional x coord of third point\n\t     - y3 (number) #optional y coord of third point\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.angle = function (x1, y1, x2, y2, x3, y3) {\n\t        if (x3 == null) {\n\t            var x = x1 - x2,\n\t                y = y1 - y2;\n\t            if (!x && !y) {\n\t                return 0;\n\t            }\n\t            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t        } else {\n\t            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n\t        }\n\t    };\n\t    /*\\\n\t     * Raphael.rad\n\t     [ method ]\n\t     **\n\t     * Transform angle to radians\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     = (number) angle in radians.\n\t    \\*/\n\t    R.rad = function (deg) {\n\t        return deg % 360 * PI / 180;\n\t    };\n\t    /*\\\n\t     * Raphael.deg\n\t     [ method ]\n\t     **\n\t     * Transform angle to degrees\n\t     > Parameters\n\t     - rad (number) angle in radians\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.deg = function (rad) {\n\t        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\n\t    };\n\t    /*\\\n\t     * Raphael.snapTo\n\t     [ method ]\n\t     **\n\t     * Snaps given value to given grid.\n\t     > Parameters\n\t     - values (array|number) given array of values or step of the grid\n\t     - value (number) value to adjust\n\t     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n\t     = (number) adjusted value.\n\t    \\*/\n\t    R.snapTo = function (values, value, tolerance) {\n\t        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n\t        if (R.is(values, array)) {\n\t            var i = values.length;\n\t            while (i--) if (abs(values[i] - value) <= tolerance) {\n\t                return values[i];\n\t            }\n\t        } else {\n\t            values = +values;\n\t            var rem = value % values;\n\t            if (rem < tolerance) {\n\t                return value - rem;\n\t            }\n\t            if (rem > values - tolerance) {\n\t                return value - rem + values;\n\t            }\n\t        }\n\t        return value;\n\t    };\n\n\t    /*\\\n\t     * Raphael.createUUID\n\t     [ method ]\n\t     **\n\t     * Returns RFC4122, version 4 ID\n\t    \\*/\n\t    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n\t        return function () {\n\t            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n\t        };\n\t    })(/[xy]/g, function (c) {\n\t        var r = math.random() * 16 | 0,\n\t            v = c == \"x\" ? r : (r & 3 | 8);\n\t        return v.toString(16);\n\t    });\n\n\t    /*\\\n\t     * Raphael.setWindow\n\t     [ method ]\n\t     **\n\t     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n\t     > Parameters\n\t     - newwin (window) new window object\n\t    \\*/\n\t    R.setWindow = function (newwin) {\n\t        eve(\"raphael.setWindow\", R, g.win, newwin);\n\t        g.win = newwin;\n\t        g.doc = g.win.document;\n\t        if (R._engine.initWin) {\n\t            R._engine.initWin(g.win);\n\t        }\n\t    };\n\t    var toHex = function (color) {\n\t        if (R.vml) {\n\t            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n\t            var trim = /^\\s+|\\s+$/g;\n\t            var bod;\n\t            try {\n\t                var docum = new ActiveXObject(\"htmlfile\");\n\t                docum.write(\"<body>\");\n\t                docum.close();\n\t                bod = docum.body;\n\t            } catch(e) {\n\t                bod = createPopup().document.body;\n\t            }\n\t            var range = bod.createTextRange();\n\t            toHex = cacher(function (color) {\n\t                try {\n\t                    bod.style.color = Str(color).replace(trim, E);\n\t                    var value = range.queryCommandValue(\"ForeColor\");\n\t                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n\t                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n\t                } catch(e) {\n\t                    return \"none\";\n\t                }\n\t            });\n\t        } else {\n\t            var i = g.doc.createElement(\"i\");\n\t            i.title = \"Rapha\\xebl Colour Picker\";\n\t            i.style.display = \"none\";\n\t            g.doc.body.appendChild(i);\n\t            toHex = cacher(function (color) {\n\t                i.style.color = color;\n\t                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t            });\n\t        }\n\t        return toHex(color);\n\t    },\n\t    hsbtoString = function () {\n\t        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t    },\n\t    hsltoString = function () {\n\t        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t    },\n\t    rgbtoString = function () {\n\t        return this.hex;\n\t    },\n\t    prepareRGB = function (r, g, b) {\n\t        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t            b = r.b;\n\t            g = r.g;\n\t            r = r.r;\n\t        }\n\t        if (g == null && R.is(r, string)) {\n\t            var clr = R.getRGB(r);\n\t            r = clr.r;\n\t            g = clr.g;\n\t            b = clr.b;\n\t        }\n\t        if (r > 1 || g > 1 || b > 1) {\n\t            r /= 255;\n\t            g /= 255;\n\t            b /= 255;\n\t        }\n\n\t        return [r, g, b];\n\t    },\n\t    packageRGB = function (r, g, b, o) {\n\t        r *= 255;\n\t        g *= 255;\n\t        b *= 255;\n\t        var rgb = {\n\t            r: r,\n\t            g: g,\n\t            b: b,\n\t            hex: R.rgb(r, g, b),\n\t            toString: rgbtoString\n\t        };\n\t        R.is(o, \"finite\") && (rgb.opacity = o);\n\t        return rgb;\n\t    };\n\n\t    /*\\\n\t     * Raphael.color\n\t     [ method ]\n\t     **\n\t     * Parses the color string and returns object with all values for the given color.\n\t     > Parameters\n\t     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n\t     = (object) Combined RGB & HSB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) `true` if string can’t be parsed,\n\t     o     h (number) hue,\n\t     o     s (number) saturation,\n\t     o     v (number) value (brightness),\n\t     o     l (number) lightness\n\t     o }\n\t    \\*/\n\t    R.color = function (clr) {\n\t        var rgb;\n\t        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t            rgb = R.hsb2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t            rgb = R.hsl2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else {\n\t            if (R.is(clr, \"string\")) {\n\t                clr = R.getRGB(clr);\n\t            }\n\t            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n\t                rgb = R.rgb2hsl(clr);\n\t                clr.h = rgb.h;\n\t                clr.s = rgb.s;\n\t                clr.l = rgb.l;\n\t                rgb = R.rgb2hsb(clr);\n\t                clr.v = rgb.b;\n\t            } else {\n\t                clr = {hex: \"none\"};\n\t                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            }\n\t        }\n\t        clr.toString = rgbtoString;\n\t        return clr;\n\t    };\n\t    /*\\\n\t     * Raphael.hsb2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - v (number) value or brightness\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsb2rgb = function (h, s, v, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t            v = h.b;\n\t            s = h.s;\n\t            o = h.o;\n\t            h = h.h;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = v * s;\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = v - C;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.hsl2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsl2rgb = function (h, s, l, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t            l = h.l;\n\t            s = h.s;\n\t            h = h.h;\n\t        }\n\t        if (h > 1 || s > 1 || l > 1) {\n\t            h /= 360;\n\t            s /= 100;\n\t            l /= 100;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = 2 * s * (l < .5 ? l : 1 - l);\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = l - C / 2;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSB object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSB object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     b (number) brightness\n\t     o }\n\t    \\*/\n\t    R.rgb2hsb = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, V, C;\n\t        V = mmax(r, g, b);\n\t        C = V - mmin(r, g, b);\n\t        H = (C == 0 ? null :\n\t             V == r ? (g - b) / C :\n\t             V == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4\n\t            );\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        S = C == 0 ? 0 : C / V;\n\t        return {h: H, s: S, b: V, toString: hsbtoString};\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsl\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSL object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSL object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     l (number) luminosity\n\t     o }\n\t    \\*/\n\t    R.rgb2hsl = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, L, M, m, C;\n\t        M = mmax(r, g, b);\n\t        m = mmin(r, g, b);\n\t        C = M - m;\n\t        H = (C == 0 ? null :\n\t             M == r ? (g - b) / C :\n\t             M == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4);\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        L = (M + m) / 2;\n\t        S = (C == 0 ? 0 :\n\t             L < .5 ? C / (2 * L) :\n\t                      C / (2 - 2 * L));\n\t        return {h: H, s: S, l: L, toString: hsltoString};\n\t    };\n\t    R._path2string = function () {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    };\n\t    function repush(array, item) {\n\t        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t            return array.push(array.splice(i, 1)[0]);\n\t        }\n\t    }\n\t    function cacher(f, scope, postprocessor) {\n\t        function newf() {\n\t            var arg = Array.prototype.slice.call(arguments, 0),\n\t                args = arg.join(\"\\u2400\"),\n\t                cache = newf.cache = newf.cache || {},\n\t                count = newf.count = newf.count || [];\n\t            if (cache[has](args)) {\n\t                repush(count, args);\n\t                return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t            }\n\t            count.length >= 1e3 && delete cache[count.shift()];\n\t            count.push(args);\n\t            cache[args] = f[apply](scope, arg);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        return newf;\n\t    }\n\n\t    var preload = R._preload = function (src, f) {\n\t        var img = g.doc.createElement(\"img\");\n\t        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t        img.onload = function () {\n\t            f.call(this);\n\t            this.onload = null;\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        img.onerror = function () {\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        g.doc.body.appendChild(img);\n\t        img.src = src;\n\t    };\n\n\t    function clrToString() {\n\t        return this.hex;\n\t    }\n\n\t    /*\\\n\t     * Raphael.getRGB\n\t     [ method ]\n\t     **\n\t     * Parses colour string as RGB object\n\t     > Parameters\n\t     - colour (string) colour string in one of formats:\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n\t     # </ul>\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) true if string can’t be parsed\n\t     o }\n\t    \\*/\n\t    R.getRGB = cacher(function (colour) {\n\t        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t        }\n\t        if (colour == \"none\") {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n\t        }\n\t        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t        var res,\n\t            red,\n\t            green,\n\t            blue,\n\t            opacity,\n\t            t,\n\t            values,\n\t            rgb = colour.match(colourRegExp);\n\t        if (rgb) {\n\t            if (rgb[2]) {\n\t                blue = toInt(rgb[2].substring(5), 16);\n\t                green = toInt(rgb[2].substring(3, 5), 16);\n\t                red = toInt(rgb[2].substring(1, 3), 16);\n\t            }\n\t            if (rgb[3]) {\n\t                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t            }\n\t            if (rgb[4]) {\n\t                values = rgb[4][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            }\n\t            if (rgb[5]) {\n\t                values = rgb[5][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsb2rgb(red, green, blue, opacity);\n\t            }\n\t            if (rgb[6]) {\n\t                values = rgb[6][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsl2rgb(red, green, blue, opacity);\n\t            }\n\t            rgb = {r: red, g: green, b: blue, toString: clrToString};\n\t            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n\t            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n\t            return rgb;\n\t        }\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t    }, R);\n\t    /*\\\n\t     * Raphael.hsb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - b (number) value or brightness\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsb = cacher(function (h, s, b) {\n\t        return R.hsb2rgb(h, s, b).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.hsl\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsl = cacher(function (h, s, l) {\n\t        return R.hsl2rgb(h, s, l).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.rgb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to hex representation of the colour.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.rgb = cacher(function (r, g, b) {\n\t        function round(x) { return (x + 0.5) | 0; }\n\t        return \"#\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\n\t    });\n\t    /*\\\n\t     * Raphael.getColor\n\t     [ method ]\n\t     **\n\t     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n\t     > Parameters\n\t     - value (number) #optional brightness, default is `0.75`\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.getColor = function (value) {\n\t        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n\t            rgb = this.hsb2rgb(start.h, start.s, start.b);\n\t        start.h += .075;\n\t        if (start.h > 1) {\n\t            start.h = 0;\n\t            start.s -= .2;\n\t            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n\t        }\n\t        return rgb.hex;\n\t    };\n\t    /*\\\n\t     * Raphael.getColor.reset\n\t     [ method ]\n\t     **\n\t     * Resets spectrum position for @Raphael.getColor back to red.\n\t    \\*/\n\t    R.getColor.reset = function () {\n\t        delete this.start;\n\t    };\n\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\n\t        return d;\n\t    }\n\t    /*\\\n\t     * Raphael.parsePathString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of arrays of path segments.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.parsePathString = function (pathString) {\n\t        if (!pathString) {\n\t            return null;\n\t        }\n\t        var pth = paths(pathString);\n\t        if (pth.arr) {\n\t            return pathClone(pth.arr);\n\t        }\n\n\t        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n\t            data = [];\n\t        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n\t            data = pathClone(pathString);\n\t        }\n\t        if (!data.length) {\n\t            Str(pathString).replace(pathCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = b.toLowerCase();\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                if (name == \"m\" && params.length > 2) {\n\t                    data.push([b][concat](params.splice(0, 2)));\n\t                    name = \"l\";\n\t                    b = b == \"m\" ? \"l\" : \"L\";\n\t                }\n\t                if (name == \"r\") {\n\t                    data.push([b][concat](params));\n\t                } else while (params.length >= paramCounts[name]) {\n\t                    data.push([b][concat](params.splice(0, paramCounts[name])));\n\t                    if (!paramCounts[name]) {\n\t                        break;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        pth.arr = pathClone(data);\n\t        return data;\n\t    };\n\t    /*\\\n\t     * Raphael.parseTransformString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of transformations.\n\t     > Parameters\n\t     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n\t     = (array) array of transformations.\n\t    \\*/\n\t    R.parseTransformString = cacher(function (TString) {\n\t        if (!TString) {\n\t            return null;\n\t        }\n\t        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t            data = [];\n\t        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n\t            data = pathClone(TString);\n\t        }\n\t        if (!data.length) {\n\t            Str(TString).replace(tCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = lowerCase.call(b);\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                data.push([b][concat](params));\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        return data;\n\t    });\n\t    // PATHS\n\t    var paths = function (ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    };\n\t    /*\\\n\t     * Raphael.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Find dot coordinates on the given cubic bezier curve at the given t.\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point\n\t     o     y: (number) y coordinate of the point\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     }\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     }\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     }\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     }\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\t        (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given cubic bezier curve\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for bezier curve\n\t     = (object) point information in format:\n\t     o {\n\t     o     min: {\n\t     o         x: (number) x coordinate of the left point\n\t     o         y: (number) y coordinate of the top point\n\t     o     }\n\t     o     max: {\n\t     o         x: (number) x coordinate of the right point\n\t     o         y: (number) y coordinate of the bottom point\n\t     o     }\n\t     o }\n\t    \\*/\n\t    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!R.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return {\n\t            x: bbox.min.x,\n\t            y: bbox.min.y,\n\t            x2: bbox.max.x,\n\t            y2: bbox.max.y,\n\t            width: bbox.max.x - bbox.min.x,\n\t            height: bbox.max.y - bbox.min.y\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding boxes.\n\t     > Parameters\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point inside\n\t    \\*/\n\t    R.isPointInsideBBox = function (bbox, x, y) {\n\t        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n\t    };\n\t    /*\\\n\t     * Raphael.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     > Parameters\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if they intersect\n\t    \\*/\n\t    R.isBBoxIntersect = function (bbox1, bbox2) {\n\t        var i = R.isPointInsideBBox;\n\t        return i(bbox2, bbox1.x, bbox1.y)\n\t            || i(bbox2, bbox1.x2, bbox1.y)\n\t            || i(bbox2, bbox1.x, bbox1.y2)\n\t            || i(bbox2, bbox1.x2, bbox1.y2)\n\t            || i(bbox1, bbox2.x, bbox2.y)\n\t            || i(bbox1, bbox2.x2, bbox2.y)\n\t            || i(bbox1, bbox2.x, bbox2.y2)\n\t            || i(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    };\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = R.bezierBBox(bez1),\n\t            bbox2 = R.bezierBBox(bez2);\n\t        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = mmax(~~(l1 / 5), 1),\n\t            n2 = mmax(~~(l2 / 5), 1),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: mmin(t1, 1),\n\t                                t2: mmin(t2, 1)\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.pathIntersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     > Parameters\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point\n\t     o         y: (number) y coordinate of the point\n\t     o         t1: (number) t value for segment of path1\n\t     o         t2: (number) t value for segment of path2\n\t     o         segment1: (number) order number for segment of path1\n\t     o         segment2: (number) order number for segment of path2\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    R.pathIntersection = function (path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    };\n\t    R.pathIntersectionNumber = function (path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    };\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = R._path2curve(path1);\n\t        path2 = R._path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.isPointInsidePath\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     > Parameters\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) true, if point is inside the path\n\t    \\*/\n\t    R.isPointInsidePath = function (path, x, y) {\n\t        var bbox = R.pathBBox(path);\n\t        return R.isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    };\n\t    R._removedFactory = function (methodname) {\n\t        return function () {\n\t            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given path\n\t     > Parameters\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box\n\t     o     y: (number) y coordinate of the left top point of the box\n\t     o     x2: (number) x coordinate of the right bottom point of the box\n\t     o     y2: (number) y coordinate of the right bottom point of the box\n\t     o     width: (number) width of the box\n\t     o     height: (number) height of the box\n\t     o     cx: (number) x coordinate of the center of the box\n\t     o     cy: (number) y coordinate of the center of the box\n\t     o }\n\t    \\*/\n\t    var pathDimensions = R.pathBBox = function (path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X[concat](dim.min.x, dim.max.x);\n\t                Y = Y[concat](dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin[apply](0, X),\n\t            ymin = mmin[apply](0, Y),\n\t            xmax = mmax[apply](0, X),\n\t            ymax = mmax[apply](0, Y),\n\t            width = xmax - xmin,\n\t            height = ymax - ymin,\n\t                bb = {\n\t                x: xmin,\n\t                y: ymin,\n\t                x2: xmax,\n\t                y2: ymax,\n\t                width: width,\n\t                height: height,\n\t                cx: xmin + width / 2,\n\t                cy: ymin + height / 2\n\t            };\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    },\n\t        pathClone = function (pathArray) {\n\t            var res = clone(pathArray);\n\t            res.toString = R._path2string;\n\t            return res;\n\t        },\n\t        pathToRelative = R._pathToRelative = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.rel) {\n\t                return pathClone(pth.rel);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = pathArray[0][1];\n\t                y = pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res.push([\"M\", x, y]);\n\t            }\n\t            for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t                var r = res[i] = [],\n\t                    pa = pathArray[i];\n\t                if (pa[0] != lowerCase.call(pa[0])) {\n\t                    r[0] = lowerCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"a\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] - x).toFixed(3);\n\t                            r[7] = +(pa[7] - y).toFixed(3);\n\t                            break;\n\t                        case \"v\":\n\t                            r[1] = +(pa[1] - y).toFixed(3);\n\t                            break;\n\t                        case \"m\":\n\t                            mx = pa[1];\n\t                            my = pa[2];\n\t                        default:\n\t                            for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n\t                            }\n\t                    }\n\t                } else {\n\t                    r = res[i] = [];\n\t                    if (pa[0] == \"m\") {\n\t                        mx = pa[1] + x;\n\t                        my = pa[2] + y;\n\t                    }\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        res[i][k] = pa[k];\n\t                    }\n\t                }\n\t                var len = res[i].length;\n\t                switch (res[i][0]) {\n\t                    case \"z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"h\":\n\t                        x += +res[i][len - 1];\n\t                        break;\n\t                    case \"v\":\n\t                        y += +res[i][len - 1];\n\t                        break;\n\t                    default:\n\t                        x += +res[i][len - 2];\n\t                        y += +res[i][len - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.rel = pathClone(res);\n\t            return res;\n\t        },\n\t        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.abs) {\n\t                return pathClone(pth.abs);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            if (!pathArray || !pathArray.length) {\n\t                return [[\"M\", 0, 0]];\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = +pathArray[0][1];\n\t                y = +pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res[0] = [\"M\", x, y];\n\t            }\n\t            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\t            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t                res.push(r = []);\n\t                pa = pathArray[i];\n\t                if (pa[0] != upperCase.call(pa[0])) {\n\t                    r[0] = upperCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"A\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] + x);\n\t                            r[7] = +(pa[7] + y);\n\t                            break;\n\t                        case \"V\":\n\t                            r[1] = +pa[1] + y;\n\t                            break;\n\t                        case \"H\":\n\t                            r[1] = +pa[1] + x;\n\t                            break;\n\t                        case \"R\":\n\t                            var dots = [x, y][concat](pa.slice(1));\n\t                            for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                                dots[j] = +dots[j] + x;\n\t                                dots[++j] = +dots[j] + y;\n\t                            }\n\t                            res.pop();\n\t                            res = res[concat](catmullRom2bezier(dots, crz));\n\t                            break;\n\t                        case \"M\":\n\t                            mx = +pa[1] + x;\n\t                            my = +pa[2] + y;\n\t                        default:\n\t                            for (j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +pa[j] + ((j % 2) ? x : y);\n\t                            }\n\t                    }\n\t                } else if (pa[0] == \"R\") {\n\t                    dots = [x, y][concat](pa.slice(1));\n\t                    res.pop();\n\t                    res = res[concat](catmullRom2bezier(dots, crz));\n\t                    r = [\"R\"][concat](pa.slice(-2));\n\t                } else {\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        r[k] = pa[k];\n\t                    }\n\t                }\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.abs = pathClone(res);\n\t            return res;\n\t        },\n\t        l2c = function (x1, y1, x2, y2) {\n\t            return [x1, y1, x2, y2, x2, y2];\n\t        },\n\t        q2c = function (x1, y1, ax, ay, x2, y2) {\n\t            var _13 = 1 / 3,\n\t                _23 = 2 / 3;\n\t            return [\n\t                    _13 * x1 + _23 * ax,\n\t                    _13 * y1 + _23 * ay,\n\t                    _13 * x2 + _23 * ax,\n\t                    _13 * y2 + _23 * ay,\n\t                    x2,\n\t                    y2\n\t                ];\n\t        },\n\t        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t            // for more information of where this math came from visit:\n\t            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t            var _120 = PI * 120 / 180,\n\t                rad = PI / 180 * (+angle || 0),\n\t                res = [],\n\t                xy,\n\t                rotate = cacher(function (x, y, rad) {\n\t                    var X = x * math.cos(rad) - y * math.sin(rad),\n\t                        Y = x * math.sin(rad) + y * math.cos(rad);\n\t                    return {x: X, y: Y};\n\t                });\n\t            if (!recursive) {\n\t                xy = rotate(x1, y1, -rad);\n\t                x1 = xy.x;\n\t                y1 = xy.y;\n\t                xy = rotate(x2, y2, -rad);\n\t                x2 = xy.x;\n\t                y2 = xy.y;\n\t                var cos = math.cos(PI / 180 * angle),\n\t                    sin = math.sin(PI / 180 * angle),\n\t                    x = (x1 - x2) / 2,\n\t                    y = (y1 - y2) / 2;\n\t                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t                if (h > 1) {\n\t                    h = math.sqrt(h);\n\t                    rx = h * rx;\n\t                    ry = h * ry;\n\t                }\n\t                var rx2 = rx * rx,\n\t                    ry2 = ry * ry,\n\t                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                    cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n\t                f1 = x1 < cx ? PI - f1 : f1;\n\t                f2 = x2 < cx ? PI - f2 : f2;\n\t                f1 < 0 && (f1 = PI * 2 + f1);\n\t                f2 < 0 && (f2 = PI * 2 + f2);\n\t                if (sweep_flag && f1 > f2) {\n\t                    f1 = f1 - PI * 2;\n\t                }\n\t                if (!sweep_flag && f2 > f1) {\n\t                    f2 = f2 - PI * 2;\n\t                }\n\t            } else {\n\t                f1 = recursive[0];\n\t                f2 = recursive[1];\n\t                cx = recursive[2];\n\t                cy = recursive[3];\n\t            }\n\t            var df = f2 - f1;\n\t            if (abs(df) > _120) {\n\t                var f2old = f2,\n\t                    x2old = x2,\n\t                    y2old = y2;\n\t                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t                x2 = cx + rx * math.cos(f2);\n\t                y2 = cy + ry * math.sin(f2);\n\t                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t            }\n\t            df = f2 - f1;\n\t            var c1 = math.cos(f1),\n\t                s1 = math.sin(f1),\n\t                c2 = math.cos(f2),\n\t                s2 = math.sin(f2),\n\t                t = math.tan(df / 4),\n\t                hx = 4 / 3 * rx * t,\n\t                hy = 4 / 3 * ry * t,\n\t                m1 = [x1, y1],\n\t                m2 = [x1 + hx * s1, y1 - hy * c1],\n\t                m3 = [x2 + hx * s2, y2 - hy * c2],\n\t                m4 = [x2, y2];\n\t            m2[0] = 2 * m1[0] - m2[0];\n\t            m2[1] = 2 * m1[1] - m2[1];\n\t            if (recursive) {\n\t                return [m2, m3, m4][concat](res);\n\t            } else {\n\t                res = [m2, m3, m4][concat](res).join()[split](\",\");\n\t                var newres = [];\n\t                for (var i = 0, ii = res.length; i < ii; i++) {\n\t                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t                }\n\t                return newres;\n\t            }\n\t        },\n\t        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t            var t1 = 1 - t;\n\t            return {\n\t                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t            };\n\t        },\n\t        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n\t                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n\t                c = p1x - c1x,\n\t                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                y = [p1y, p2y],\n\t                x = [p1x, p2x],\n\t                dot;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n\t            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n\t            c = p1y - c1y;\n\t            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            return {\n\t                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n\t                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n\t            };\n\t        }),\n\t        path2curve = R._path2curve = cacher(function (path, path2) {\n\t            var pth = !path2 && paths(path);\n\t            if (!path2 && pth.curve) {\n\t                return pathClone(pth.curve);\n\t            }\n\t            var p = pathToAbsolute(path),\n\t                p2 = path2 && pathToAbsolute(path2),\n\t                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                processPath = function (path, d, pcom) {\n\t                    var nx, ny, tq = {T:1, Q:1};\n\t                    if (!path) {\n\t                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                    }\n\t                    !(path[0] in tq) && (d.qx = d.qy = null);\n\t                    switch (path[0]) {\n\t                        case \"M\":\n\t                            d.X = path[1];\n\t                            d.Y = path[2];\n\t                            break;\n\t                        case \"A\":\n\t                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n\t                            break;\n\t                        case \"S\":\n\t                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                                nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                            }\n\t                            else {                            // or some else or nothing\n\t                                nx = d.x;\n\t                                ny = d.y;\n\t                            }\n\t                            path = [\"C\", nx, ny][concat](path.slice(1));\n\t                            break;\n\t                        case \"T\":\n\t                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                            }\n\t                            else {                            // or something else or nothing\n\t                                d.qx = d.x;\n\t                                d.qy = d.y;\n\t                            }\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                            break;\n\t                        case \"Q\":\n\t                            d.qx = path[1];\n\t                            d.qy = path[2];\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                            break;\n\t                        case \"L\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n\t                            break;\n\t                        case \"H\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n\t                            break;\n\t                        case \"V\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n\t                            break;\n\t                        case \"Z\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n\t                            break;\n\t                    }\n\t                    return path;\n\t                },\n\t                fixArc = function (pp, i) {\n\t                    if (pp[i].length > 7) {\n\t                        pp[i].shift();\n\t                        var pi = pp[i];\n\t                        while (pi.length) {\n\t                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\n\t                            p2 && (pcoms2[i]=\"A\"); // the same as above\n\t                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n\t                        }\n\t                        pp.splice(i, 1);\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                fixM = function (path1, path2, a1, a2, i) {\n\t                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                        a1.bx = 0;\n\t                        a1.by = 0;\n\t                        a1.x = path1[i][1];\n\t                        a1.y = path1[i][2];\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                pcoms1 = [], // path commands of original path p\n\t                pcoms2 = [], // path commands of original path p2\n\t                pfirst = \"\", // temporary holder for original path command\n\t                pcom = \"\"; // holder for previous path command of original path\n\t            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t                p[i] && (pfirst = p[i][0]); // save current path command\n\n\t                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t                {\n\t                    pcoms1[i] = pfirst; // Save current path command\n\t                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n\t                }\n\t                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n\t                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t                // which may produce multiple C:s\n\t                // so we have to make sure that C is also C in original path\n\n\t                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n\t                if (p2) { // the same procedures is done to p2\n\t                    p2[i] && (pfirst = p2[i][0]);\n\t                    if (pfirst != \"C\")\n\t                    {\n\t                        pcoms2[i] = pfirst;\n\t                        i && (pcom = pcoms2[i-1]);\n\t                    }\n\t                    p2[i] = processPath(p2[i], attrs2, pcom);\n\n\t                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\n\n\t                    fixArc(p2, i);\n\t                }\n\t                fixM(p, p2, attrs, attrs2, i);\n\t                fixM(p2, p, attrs2, attrs, i);\n\t                var seg = p[i],\n\t                    seg2 = p2 && p2[i],\n\t                    seglen = seg.length,\n\t                    seg2len = p2 && seg2.length;\n\t                attrs.x = seg[seglen - 2];\n\t                attrs.y = seg[seglen - 1];\n\t                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t                attrs2.x = p2 && seg2[seg2len - 2];\n\t                attrs2.y = p2 && seg2[seg2len - 1];\n\t            }\n\t            if (!p2) {\n\t                pth.curve = pathClone(p);\n\t            }\n\t            return p2 ? [p, p2] : p;\n\t        }, null, pathClone),\n\t        parseDots = R._parseDots = cacher(function (gradient) {\n\t            var dots = [];\n\t            for (var i = 0, ii = gradient.length; i < ii; i++) {\n\t                var dot = {},\n\t                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n\t                dot.color = R.getRGB(par[1]);\n\t                if (dot.color.error) {\n\t                    return null;\n\t                }\n\t                dot.opacity = dot.color.opacity;\n\t                dot.color = dot.color.hex;\n\t                par[2] && (dot.offset = par[2] + \"%\");\n\t                dots.push(dot);\n\t            }\n\t            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n\t                if (!dots[i].offset) {\n\t                    var start = toFloat(dots[i - 1].offset || 0),\n\t                        end = 0;\n\t                    for (var j = i + 1; j < ii; j++) {\n\t                        if (dots[j].offset) {\n\t                            end = dots[j].offset;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!end) {\n\t                        end = 100;\n\t                        j = ii;\n\t                    }\n\t                    end = toFloat(end);\n\t                    var d = (end - start) / (j - i + 1);\n\t                    for (; i < j; i++) {\n\t                        start += d;\n\t                        dots[i].offset = start + \"%\";\n\t                    }\n\t                }\n\t            }\n\t            return dots;\n\t        }),\n\t        tear = R._tear = function (el, paper) {\n\t            el == paper.top && (paper.top = el.prev);\n\t            el == paper.bottom && (paper.bottom = el.next);\n\t            el.next && (el.next.prev = el.prev);\n\t            el.prev && (el.prev.next = el.next);\n\t        },\n\t        tofront = R._tofront = function (el, paper) {\n\t            if (paper.top === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = null;\n\t            el.prev = paper.top;\n\t            paper.top.next = el;\n\t            paper.top = el;\n\t        },\n\t        toback = R._toback = function (el, paper) {\n\t            if (paper.bottom === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = paper.bottom;\n\t            el.prev = null;\n\t            paper.bottom.prev = el;\n\t            paper.bottom = el;\n\t        },\n\t        insertafter = R._insertafter = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.top && (paper.top = el);\n\t            el2.next && (el2.next.prev = el);\n\t            el.next = el2.next;\n\t            el.prev = el2;\n\t            el2.next = el;\n\t        },\n\t        insertbefore = R._insertbefore = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.bottom && (paper.bottom = el);\n\t            el2.prev && (el2.prev.next = el);\n\t            el.prev = el2.prev;\n\t            el2.prev = el;\n\t            el.next = el2;\n\t        },\n\t        /*\\\n\t         * Raphael.toMatrix\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns matrix of transformations applied to a given path\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (object) @Matrix\n\t        \\*/\n\t        toMatrix = R.toMatrix = function (path, transform) {\n\t            var bb = pathDimensions(path),\n\t                el = {\n\t                    _: {\n\t                        transform: E\n\t                    },\n\t                    getBBox: function () {\n\t                        return bb;\n\t                    }\n\t                };\n\t            extractTransform(el, transform);\n\t            return el.matrix;\n\t        },\n\t        /*\\\n\t         * Raphael.transformPath\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns path transformed by a given transformation\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (string) path\n\t        \\*/\n\t        transformPath = R.transformPath = function (path, transform) {\n\t            return mapPath(path, toMatrix(path, transform));\n\t        },\n\t        extractTransform = R._extractTransform = function (el, tstr) {\n\t            if (tstr == null) {\n\t                return el._.transform;\n\t            }\n\t            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n\t            var tdata = R.parseTransformString(tstr),\n\t                deg = 0,\n\t                dx = 0,\n\t                dy = 0,\n\t                sx = 1,\n\t                sy = 1,\n\t                _ = el._,\n\t                m = new Matrix;\n\t            _.transform = tdata || [];\n\t            if (tdata) {\n\t                for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t                    var t = tdata[i],\n\t                        tlen = t.length,\n\t                        command = Str(t[0]).toLowerCase(),\n\t                        absolute = t[0] != command,\n\t                        inver = absolute ? m.invert() : 0,\n\t                        x1,\n\t                        y1,\n\t                        x2,\n\t                        y2,\n\t                        bb;\n\t                    if (command == \"t\" && tlen == 3) {\n\t                        if (absolute) {\n\t                            x1 = inver.x(0, 0);\n\t                            y1 = inver.y(0, 0);\n\t                            x2 = inver.x(t[1], t[2]);\n\t                            y2 = inver.y(t[1], t[2]);\n\t                            m.translate(x2 - x1, y2 - y1);\n\t                        } else {\n\t                            m.translate(t[1], t[2]);\n\t                        }\n\t                    } else if (command == \"r\") {\n\t                        if (tlen == 2) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            deg += t[1];\n\t                        } else if (tlen == 4) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[2], t[3]);\n\t                                y2 = inver.y(t[2], t[3]);\n\t                                m.rotate(t[1], x2, y2);\n\t                            } else {\n\t                                m.rotate(t[1], t[2], t[3]);\n\t                            }\n\t                            deg += t[1];\n\t                        }\n\t                    } else if (command == \"s\") {\n\t                        if (tlen == 2 || tlen == 3) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            sx *= t[1];\n\t                            sy *= t[tlen - 1];\n\t                        } else if (tlen == 5) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[3], t[4]);\n\t                                y2 = inver.y(t[3], t[4]);\n\t                                m.scale(t[1], t[2], x2, y2);\n\t                            } else {\n\t                                m.scale(t[1], t[2], t[3], t[4]);\n\t                            }\n\t                            sx *= t[1];\n\t                            sy *= t[2];\n\t                        }\n\t                    } else if (command == \"m\" && tlen == 7) {\n\t                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t                    }\n\t                    _.dirtyT = 1;\n\t                    el.matrix = m;\n\t                }\n\t            }\n\n\t            /*\\\n\t             * Element.matrix\n\t             [ property (object) ]\n\t             **\n\t             * Keeps @Matrix object, which represents element transformation\n\t            \\*/\n\t            el.matrix = m;\n\n\t            _.sx = sx;\n\t            _.sy = sy;\n\t            _.deg = deg;\n\t            _.dx = dx = m.e;\n\t            _.dy = dy = m.f;\n\n\t            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n\t                _.bbox.x += +dx;\n\t                _.bbox.y += +dy;\n\t            } else {\n\t                _.dirtyT = 1;\n\t            }\n\t        },\n\t        getEmpty = function (item) {\n\t            var l = item[0];\n\t            switch (l.toLowerCase()) {\n\t                case \"t\": return [l, 0, 0];\n\t                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t                case \"r\": if (item.length == 4) {\n\t                    return [l, 0, item[2], item[3]];\n\t                } else {\n\t                    return [l, 0];\n\t                }\n\t                case \"s\": if (item.length == 5) {\n\t                    return [l, 1, 1, item[3], item[4]];\n\t                } else if (item.length == 3) {\n\t                    return [l, 1, 1];\n\t                } else {\n\t                    return [l, 1];\n\t                }\n\t            }\n\t        },\n\t        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n\t            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n\t            t1 = R.parseTransformString(t1) || [];\n\t            t2 = R.parseTransformString(t2) || [];\n\t            var maxlength = mmax(t1.length, t2.length),\n\t                from = [],\n\t                to = [],\n\t                i = 0, j, jj,\n\t                tt1, tt2;\n\t            for (; i < maxlength; i++) {\n\t                tt1 = t1[i] || getEmpty(t2[i]);\n\t                tt2 = t2[i] || getEmpty(tt1);\n\t                if ((tt1[0] != tt2[0]) ||\n\t                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n\t                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n\t                    ) {\n\t                    return;\n\t                }\n\t                from[i] = [];\n\t                to[i] = [];\n\t                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n\t                    j in tt1 && (from[i][j] = tt1[j]);\n\t                    j in tt2 && (to[i][j] = tt2[j]);\n\t                }\n\t            }\n\t            return {\n\t                from: from,\n\t                to: to\n\t            };\n\t        };\n\t    R._getContainer = function (x, y, w, h) {\n\t        var container;\n\t        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n\t        if (container == null) {\n\t            return;\n\t        }\n\t        if (container.tagName) {\n\t            if (y == null) {\n\t                return {\n\t                    container: container,\n\t                    width: container.style.pixelWidth || container.offsetWidth,\n\t                    height: container.style.pixelHeight || container.offsetHeight\n\t                };\n\t            } else {\n\t                return {\n\t                    container: container,\n\t                    width: y,\n\t                    height: w\n\t                };\n\t            }\n\t        }\n\t        return {\n\t            container: 1,\n\t            x: x,\n\t            y: y,\n\t            width: w,\n\t            height: h\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathToRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to relative form\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.pathToRelative = pathToRelative;\n\t    R._engine = {};\n\t    /*\\\n\t     * Raphael.path2curve\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic bezier curves.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.path2curve = path2curve;\n\t    /*\\\n\t     * Raphael.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns matrix based on given parameters.\n\t     > Parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     = (object) @Matrix\n\t    \\*/\n\t    R.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds given matrix to existing one.\n\t         > Parameters\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            var out = [[], [], []],\n\t                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n\t                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n\t                x, y, z, res;\n\n\t            if (a && a instanceof Matrix) {\n\t                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n\t            }\n\n\t            for (x = 0; x < 3; x++) {\n\t                for (y = 0; y < 3; y++) {\n\t                    res = 0;\n\t                    for (z = 0; z < 3; z++) {\n\t                        res += m[x][z] * matrix[z][y];\n\t                    }\n\t                    out[x][y] = res;\n\t                }\n\t            }\n\t            this.a = out[0][0];\n\t            this.b = out[1][0];\n\t            this.c = out[0][1];\n\t            this.d = out[1][1];\n\t            this.e = out[0][2];\n\t            this.f = out[1][2];\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            this.add(1, 0, 0, 1, x, y);\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number) #optional\n\t         - cx (number) #optional\n\t         - cy (number) #optional\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n\t            this.add(x, 0, 0, y, 0, 0);\n\t            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         > Parameters\n\t         - a (number)\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = R.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return R.svg ?\n\t                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n\t                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n\t        };\n\t        matrixproto.toFilter = function () {\n\t            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n\t                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n\t                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\n\t            // scale and shear\n\t            var row = [[this.a, this.c], [this.b, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\n\t            // rotation\n\t            var sin = -row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = R.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = R.deg(math.asin(sin));\n\t            }\n\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Return transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this[split]();\n\t            if (s.isSimple) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n\t                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\n\t    var preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    getEventPosition = function (e) {\n\t        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n\t        return {\n\t            x: e.clientX + scrollX,\n\t            y: e.clientY + scrollY\n\t        };\n\t    },\n\t    addEvent = (function () {\n\t        if (g.doc.addEventListener) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    var pos = getEventPosition(e);\n\t                    return fn.call(element, e, pos.x, pos.y);\n\t                };\n\t                obj.addEventListener(type, f, false);\n\n\t                if (supportsTouch && touchMap[type]) {\n\t                    var _f = function (e) {\n\t                        var pos = getEventPosition(e),\n\t                            olde = e;\n\n\t                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                            if (e.targetTouches[i].target == obj) {\n\t                                e = e.targetTouches[i];\n\t                                e.originalEvent = olde;\n\t                                e.preventDefault = preventTouch;\n\t                                e.stopPropagation = stopTouch;\n\t                                break;\n\t                            }\n\t                        }\n\n\t                        return fn.call(element, e, pos.x, pos.y);\n\t                    };\n\t                    obj.addEventListener(touchMap[type], _f, false);\n\t                }\n\n\t                return function () {\n\t                    obj.removeEventListener(type, f, false);\n\n\t                    if (supportsTouch && touchMap[type])\n\t                        obj.removeEventListener(touchMap[type], _f, false);\n\n\t                    return true;\n\t                };\n\t            };\n\t        } else if (g.doc.attachEvent) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    e = e || g.win.event;\n\t                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t                        x = e.clientX + scrollX,\n\t                        y = e.clientY + scrollY;\n\t                    e.preventDefault = e.preventDefault || preventDefault;\n\t                    e.stopPropagation = e.stopPropagation || stopPropagation;\n\t                    return fn.call(element, e, x, y);\n\t                };\n\t                obj.attachEvent(\"on\" + type, f);\n\t                var detacher = function () {\n\t                    obj.detachEvent(\"on\" + type, f);\n\t                    return true;\n\t                };\n\t                return detacher;\n\t            };\n\t        }\n\t    })(),\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            g.win.opera && parent.removeChild(node);\n\t            node.style.display = \"none\";\n\t            o = dragi.el.paper.getElementByPoint(x, y);\n\t            node.style.display = display;\n\t            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        R.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t        }\n\t        drag = [];\n\t    },\n\t    /*\\\n\t     * Raphael.el\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements. This is useful when you want to hack default functionality or\n\t     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n\t     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | // then use it\n\t     | paper.circle(100, 100, 20).red();\n\t    \\*/\n\t    elproto = R.el = {};\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            R[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (R.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n\t                }\n\t                return this;\n\t            };\n\t            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--){\n\t                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n\t                        events[l].unbind();\n\t                        events.splice(l, 1);\n\t                        !events.length && delete this.events;\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key.\n\t     **\n\t     * See also @Element.removeData\n\t     > Parameters\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     * or, if key and value are not specified:\n\t     = (object) Key/value pairs for all the data associated with the element.\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0) {\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (R.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"raphael.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     > Parameters\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t     /*\\\n\t     * Element.getData\n\t     [ method ]\n\t     **\n\t     * Retrieves the element data\n\t     = (object) data\n\t    \\*/\n\t    elproto.getData = function () {\n\t        return clone(eldata[this.id] || {});\n\t    };\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for drag of the element.\n\t     > Parameters\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\n\t     * `drag.over.<id>` will be fired as well.\n\t     *\n\t     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler will be called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        function start(e) {\n\t            (e.originalEvent || e).preventDefault();\n\t            var x = e.clientX,\n\t                y = e.clientY,\n\t                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\t            this._drag.id = e.identifier;\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length, touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    this._drag.id = touch.identifier;\n\t                    if (touch.identifier == this._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this._drag.x = x + scrollX;\n\t            this._drag.y = y + scrollY;\n\t            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n\t            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n\t            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n\t            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\n\t        }\n\t        this._drag = {};\n\t        draggable.push({el: this, start: start});\n\t        this.mousedown(start);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n\t     > Parameters\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    elproto.onDragOver = function (f) {\n\t        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n\t    };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from given element.\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].start);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"raphael.drag.*.\" + this.id);\n\t        }\n\t        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) Raphaël element object with type “circle”\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    paperproto.circle = function (x, y, r) {\n\t        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - r (number) #optional radius for rounded corners, default is 0\n\t     = (object) Raphaël element object with type “rect”\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    paperproto.rect = function (x, y, w, h, r) {\n\t        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) Raphaël element object with type “ellipse”\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    paperproto.ellipse = function (x, y, rx, ry) {\n\t        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a path element by given path data string.\n\t     > Parameters\n\t     - pathString (string) #optional path string in SVG format.\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n\t     | \"M10,20L30,40\"\n\t     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n\t     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n\t    \\*/\n\t    paperproto.path = function (pathString) {\n\t        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n\t        var out = R._engine.path(R.format[apply](R, arguments), this);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Embeds an image into the surface.\n\t     **\n\t     > Parameters\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) Raphaël element object with type “image”\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    paperproto.image = function (src, x, y, w, h) {\n\t        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string. If you need line breaks, put “\\n” in the string.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string) The text string to draw\n\t     = (object) Raphaël element object with type “text”\n\t     **\n\t     > Usage\n\t     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n\t    \\*/\n\t    paperproto.text = function (x, y, text) {\n\t        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.set\n\t     [ method ]\n\t     **\n\t     * Creates array-like object to keep and operate several elements at once.\n\t     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n\t     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n\t     = (object) array-like object that represents set of elements\n\t     **\n\t     > Usage\n\t     | var st = paper.set();\n\t     | st.push(\n\t     |     paper.circle(10, 10, 5),\n\t     |     paper.circle(30, 10, 5)\n\t     | );\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.set = function (itemsArray) {\n\t        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n\t        var out = new Set(itemsArray);\n\t        this.__set__ && this.__set__.push(out);\n\t        out[\"paper\"] = this;\n\t        out[\"type\"] = \"set\";\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.setStart\n\t     [ method ]\n\t     **\n\t     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n\t     * @Paper.setFinish will be added to the set.\n\t     **\n\t     > Usage\n\t     | paper.setStart();\n\t     | paper.circle(10, 10, 5),\n\t     | paper.circle(30, 10, 5)\n\t     | var st = paper.setFinish();\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.setStart = function (set) {\n\t        this.__set__ = set || this.set();\n\t    };\n\t    /*\\\n\t     * Paper.setFinish\n\t     [ method ]\n\t     **\n\t     * See @Paper.setStart. This method finishes catching and returns resulting set.\n\t     **\n\t     = (object) set\n\t    \\*/\n\t    paperproto.setFinish = function (set) {\n\t        var out = this.__set__;\n\t        delete this.__set__;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.getSize\n\t     [ method ]\n\t     **\n\t     * Obtains current paper actual size.\n\t     **\n\t     = (object)\n\t     \\*/\n\t    paperproto.getSize = function () {\n\t        var container = this.canvas.parentNode;\n\t        return {\n\t            width: container.offsetWidth,\n\t            height: container.offsetHeight\n\t                };\n\t        };\n\t    /*\\\n\t     * Paper.setSize\n\t     [ method ]\n\t     **\n\t     * If you need to change dimensions of the canvas call this method\n\t     **\n\t     > Parameters\n\t     **\n\t     - width (number) new width of the canvas\n\t     - height (number) new height of the canvas\n\t    \\*/\n\t    paperproto.setSize = function (width, height) {\n\t        return R._engine.setSize.call(this, width, height);\n\t    };\n\t    /*\\\n\t     * Paper.setViewBox\n\t     [ method ]\n\t     **\n\t     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\n\t     * specifying new boundaries.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) new x position, default is `0`\n\t     - y (number) new y position, default is `0`\n\t     - w (number) new width of the canvas\n\t     - h (number) new height of the canvas\n\t     - fit (boolean) `true` if you want graphics to fit into new boundary box\n\t    \\*/\n\t    paperproto.setViewBox = function (x, y, w, h, fit) {\n\t        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n\t    };\n\t    /*\\\n\t     * Paper.top\n\t     [ property ]\n\t     **\n\t     * Points to the topmost element on the paper\n\t    \\*/\n\t    /*\\\n\t     * Paper.bottom\n\t     [ property ]\n\t     **\n\t     * Points to the bottom element on the paper\n\t    \\*/\n\t    paperproto.top = paperproto.bottom = null;\n\t    /*\\\n\t     * Paper.raphael\n\t     [ property ]\n\t     **\n\t     * Points to the @Raphael object/function\n\t    \\*/\n\t    paperproto.raphael = R;\n\t    var getOffset = function (elem) {\n\t        var box = elem.getBoundingClientRect(),\n\t            doc = elem.ownerDocument,\n\t            body = doc.body,\n\t            docElem = doc.documentElement,\n\t            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t        return {\n\t            y: top,\n\t            x: left\n\t        };\n\t    };\n\t    /*\\\n\t     * Paper.getElementByPoint\n\t     [ method ]\n\t     **\n\t     * Returns you topmost element under given point.\n\t     **\n\t     = (object) Raphaël element object\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate from the top left corner of the window\n\t     - y (number) y coordinate from the top left corner of the window\n\t     > Usage\n\t     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t    \\*/\n\t    paperproto.getElementByPoint = function (x, y) {\n\t        var paper = this,\n\t            svg = paper.canvas,\n\t            target = g.doc.elementFromPoint(x, y);\n\t        if (g.win.opera && target.tagName == \"svg\") {\n\t            var so = getOffset(svg),\n\t                sr = svg.createSVGRect();\n\t            sr.x = x - so.x;\n\t            sr.y = y - so.y;\n\t            sr.width = sr.height = 1;\n\t            var hits = svg.getIntersectionList(sr, null);\n\t            if (hits.length) {\n\t                target = hits[hits.length - 1];\n\t            }\n\t        }\n\t        if (!target) {\n\t            return null;\n\t        }\n\t        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n\t            target = target.parentNode;\n\t        }\n\t        target == paper.canvas.parentNode && (target = svg);\n\t        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n\t        return target;\n\t    };\n\n\t    /*\\\n\t     * Paper.getElementsByBBox\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have an intersecting bounding box\n\t     **\n\t     > Parameters\n\t     **\n\t     - bbox (object) bbox to check with\n\t     = (object) @Set\n\t     \\*/\n\t    paperproto.getElementsByBBox = function (bbox) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\n\t    /*\\\n\t     * Paper.getById\n\t     [ method ]\n\t     **\n\t     * Returns you element by its internal ID.\n\t     **\n\t     > Parameters\n\t     **\n\t     - id (number) id\n\t     = (object) Raphaël element object\n\t    \\*/\n\t    paperproto.getById = function (id) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (bot.id == id) {\n\t                return bot;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return null;\n\t    };\n\t    /*\\\n\t     * Paper.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element on the paper\n\t     *\n\t     * If callback function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Paper object\n\t     > Usage\n\t     | paper.forEach(function (el) {\n\t     |     el.attr({ stroke: \"blue\" });\n\t     | });\n\t    \\*/\n\t    paperproto.forEach = function (callback, thisArg) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (callback.call(thisArg, bot) === false) {\n\t                return this;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.getElementsByPoint\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have common point inside\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (object) @Set\n\t    \\*/\n\t    paperproto.getElementsByPoint = function (x, y) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\t    function x_y() {\n\t        return this.x + S + this.y;\n\t    }\n\t    function x_y_w_h() {\n\t        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t    }\n\t    /*\\\n\t     * Element.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this element’s shape\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point inside the shape\n\t    \\*/\n\t    elproto.isPointInside = function (x, y) {\n\t        var rp = this.realPath = getPath[this.type](this);\n\t        if (this.attr('transform') && this.attr('transform').length) {\n\t            rp = R.transformPath(rp, this.attr('transform'));\n\t        }\n\t        return R.isPointInsidePath(rp, x, y);\n\t    };\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Return bounding box for a given element\n\t     **\n\t     > Parameters\n\t     **\n\t     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n\t     = (object) Bounding box object:\n\t     o {\n\t     o     x: (number) top left corner x\n\t     o     y: (number) top left corner y\n\t     o     x2: (number) bottom right corner x\n\t     o     y2: (number) bottom right corner y\n\t     o     width: (number) width\n\t     o     height: (number) height\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        var _ = this._;\n\t        if (isWithoutTransform) {\n\t            if (_.dirty || !_.bboxwt) {\n\t                this.realPath = getPath[this.type](this);\n\t                _.bboxwt = pathDimensions(this.realPath);\n\t                _.bboxwt.toString = x_y_w_h;\n\t                _.dirty = 0;\n\t            }\n\t            return _.bboxwt;\n\t        }\n\t        if (_.dirty || _.dirtyT || !_.bbox) {\n\t            if (_.dirty || !this.realPath) {\n\t                _.bboxwt = 0;\n\t                this.realPath = getPath[this.type](this);\n\t            }\n\t            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n\t            _.bbox.toString = x_y_w_h;\n\t            _.dirty = _.dirtyT = 0;\n\t        }\n\t        return _.bbox;\n\t    };\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     = (object) clone of a given element\n\t     **\n\t    \\*/\n\t    elproto.clone = function () {\n\t        if (this.removed) {\n\t            return null;\n\t        }\n\t        var out = this.paper[this.type]().attr(this.attr());\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.glow\n\t     [ method ]\n\t     **\n\t     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n\t     *\n\t     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n\t     **\n\t     > Parameters\n\t     **\n\t     - glow (object) #optional parameters object with all properties optional:\n\t     o {\n\t     o     width (number) size of the glow, default is `10`\n\t     o     fill (boolean) will it be filled, default is `false`\n\t     o     opacity (number) opacity, default is `0.5`\n\t     o     offsetx (number) horizontal offset, default is `0`\n\t     o     offsety (number) vertical offset, default is `0`\n\t     o     color (string) glow colour, default is `black`\n\t     o }\n\t     = (object) @Paper.set of elements that represents glow\n\t    \\*/\n\t    elproto.glow = function (glow) {\n\t        if (this.type == \"text\") {\n\t            return null;\n\t        }\n\t        glow = glow || {};\n\t        var s = {\n\t            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n\t            fill: glow.fill || false,\n\t            opacity: glow.opacity == null ? .5 : glow.opacity,\n\t            offsetx: glow.offsetx || 0,\n\t            offsety: glow.offsety || 0,\n\t            color: glow.color || \"#000\"\n\t        },\n\t            c = s.width / 2,\n\t            r = this.paper,\n\t            out = r.set(),\n\t            path = this.realPath || getPath[this.type](this);\n\t        path = this.matrix ? mapPath(path, this.matrix) : path;\n\t        for (var i = 1; i < c + 1; i++) {\n\t            out.push(r.path(path).attr({\n\t                stroke: s.color,\n\t                fill: s.fill ? s.color : \"none\",\n\t                \"stroke-linejoin\": \"round\",\n\t                \"stroke-linecap\": \"round\",\n\t                \"stroke-width\": +(s.width / c * i).toFixed(3),\n\t                opacity: +(s.opacity / c).toFixed(3)\n\t            }));\n\t        }\n\t        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n\t    };\n\t    var curveslengths = {},\n\t    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    },\n\t    getLengthFactory = function (istotal, subpath) {\n\t        return function (path, length, onlystart) {\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return {x: point.x, y: point.y, alpha: point.alpha};\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n\t            return point;\n\t        };\n\t    };\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    /*\\\n\t     * Raphael.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the given path in pixels.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string.\n\t     **\n\t     = (number) length.\n\t    \\*/\n\t    R.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Raphael.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    R.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Raphael.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given path from given length to given length.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    R.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the path in pixels. Only works for element of “path” type.\n\t     = (number) length.\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\n\t        return getTotalLength(path);\n\t    };\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return getPointAtLength(path, length);\n\t    };\n\t    /*\\\n\t     * Element.getPath\n\t     [ method ]\n\t     **\n\t     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n\t     = (object) path\n\t     **\n\t    \\*/\n\t    elproto.getPath = function () {\n\t        var path,\n\t            getPath = R._getPath[this.type];\n\n\t        if (this.type == \"text\" || this.type == \"set\") {\n\t            return;\n\t        }\n\n\t        if (getPath) {\n\t            path = getPath(this);\n\t        }\n\n\t        return path;\n\t    };\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return R.getSubpath(path, from, to);\n\t    };\n\t    /*\\\n\t     * Raphael.easing_formulas\n\t     [ property ]\n\t     **\n\t     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n\t     # <ul>\n\t     #     <li>“linear”</li>\n\t     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n\t     #     <li>“>” or “easeOut” or “ease-out”</li>\n\t     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n\t     #     <li>“backIn” or “back-in”</li>\n\t     #     <li>“backOut” or “back-out”</li>\n\t     #     <li>“elastic”</li>\n\t     #     <li>“bounce”</li>\n\t     # </ul>\n\t     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n\t    \\*/\n\t    var ef = R.easing_formulas = {\n\t        linear: function (n) {\n\t            return n;\n\t        },\n\t        \"<\": function (n) {\n\t            return pow(n, 1.7);\n\t        },\n\t        \">\": function (n) {\n\t            return pow(n, .48);\n\t        },\n\t        \"<>\": function (n) {\n\t            var q = .48 - n / 1.04,\n\t                Q = math.sqrt(.1734 + q * q),\n\t                x = Q - q,\n\t                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t                y = -Q - q,\n\t                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t                t = X + Y + .5;\n\t            return (1 - t) * 3 * t * t + t * t * t;\n\t        },\n\t        backIn: function (n) {\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n - s);\n\t        },\n\t        backOut: function (n) {\n\t            n = n - 1;\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n + s) + 1;\n\t        },\n\t        elastic: function (n) {\n\t            if (n == !!n) {\n\t                return n;\n\t            }\n\t            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n\t        },\n\t        bounce: function (n) {\n\t            var s = 7.5625,\n\t                p = 2.75,\n\t                l;\n\t            if (n < (1 / p)) {\n\t                l = s * n * n;\n\t            } else {\n\t                if (n < (2 / p)) {\n\t                    n -= (1.5 / p);\n\t                    l = s * n * n + .75;\n\t                } else {\n\t                    if (n < (2.5 / p)) {\n\t                        n -= (2.25 / p);\n\t                        l = s * n * n + .9375;\n\t                    } else {\n\t                        n -= (2.625 / p);\n\t                        l = s * n * n + .984375;\n\t                    }\n\t                }\n\t            }\n\t            return l;\n\t        }\n\t    };\n\t    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n\t    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n\t    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n\t    ef[\"back-in\"] = ef.backIn;\n\t    ef[\"back-out\"] = ef.backOut;\n\n\t    var animationElements = [],\n\t        requestAnimFrame = window.requestAnimationFrame       ||\n\t                           window.webkitRequestAnimationFrame ||\n\t                           window.mozRequestAnimationFrame    ||\n\t                           window.oRequestAnimationFrame      ||\n\t                           window.msRequestAnimationFrame     ||\n\t                           function (callback) {\n\t                               setTimeout(callback, 16);\n\t                           },\n\t        animation = function () {\n\t            var Now = +new Date,\n\t                l = 0;\n\t            for (; l < animationElements.length; l++) {\n\t                var e = animationElements[l];\n\t                if (e.el.removed || e.paused) {\n\t                    continue;\n\t                }\n\t                var time = Now - e.start,\n\t                    ms = e.ms,\n\t                    easing = e.easing,\n\t                    from = e.from,\n\t                    diff = e.diff,\n\t                    to = e.to,\n\t                    t = e.t,\n\t                    that = e.el,\n\t                    set = {},\n\t                    now,\n\t                    init = {},\n\t                    key;\n\t                if (e.initstatus) {\n\t                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n\t                    e.status = e.initstatus;\n\t                    delete e.initstatus;\n\t                    e.stop && animationElements.splice(l--, 1);\n\t                } else {\n\t                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n\t                }\n\t                if (time < 0) {\n\t                    continue;\n\t                }\n\t                if (time < ms) {\n\t                    var pos = easing(time / ms);\n\t                    for (var attr in from) if (from[has](attr)) {\n\t                        switch (availableAnimAttrs[attr]) {\n\t                            case nu:\n\t                                now = +from[attr] + pos * ms * diff[attr];\n\t                                break;\n\t                            case \"colour\":\n\t                                now = \"rgb(\" + [\n\t                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n\t                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n\t                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n\t                                ].join(\",\") + \")\";\n\t                                break;\n\t                            case \"path\":\n\t                                now = [];\n\t                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    now[i] = [from[attr][i][0]];\n\t                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                    }\n\t                                    now[i] = now[i].join(S);\n\t                                }\n\t                                now = now.join(S);\n\t                                break;\n\t                            case \"transform\":\n\t                                if (diff[attr].real) {\n\t                                    now = [];\n\t                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                        now[i] = [from[attr][i][0]];\n\t                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    var get = function (i) {\n\t                                        return +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    };\n\t                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n\t                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n\t                                }\n\t                                break;\n\t                            case \"csv\":\n\t                                if (attr == \"clip-rect\") {\n\t                                    now = [];\n\t                                    i = 4;\n\t                                    while (i--) {\n\t                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    }\n\t                                }\n\t                                break;\n\t                            default:\n\t                                var from2 = [][concat](from[attr]);\n\t                                now = [];\n\t                                i = that.paper.customAttributes[attr].length;\n\t                                while (i--) {\n\t                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n\t                                }\n\t                                break;\n\t                        }\n\t                        set[attr] = now;\n\t                    }\n\t                    that.attr(set);\n\t                    (function (id, that, anim) {\n\t                        setTimeout(function () {\n\t                            eve(\"raphael.anim.frame.\" + id, that, anim);\n\t                        });\n\t                    })(that.id, that, e.anim);\n\t                } else {\n\t                    (function(f, el, a) {\n\t                        setTimeout(function() {\n\t                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n\t                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n\t                            R.is(f, \"function\") && f.call(el);\n\t                        });\n\t                    })(e.callback, that, e.anim);\n\t                    that.attr(to);\n\t                    animationElements.splice(l--, 1);\n\t                    if (e.repeat > 1 && !e.next) {\n\t                        for (key in to) if (to[has](key)) {\n\t                            init[key] = e.totalOrigin[key];\n\t                        }\n\t                        e.el.attr(init);\n\t                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n\t                    }\n\t                    if (e.next && !e.stop) {\n\t                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n\t                    }\n\t                }\n\t            }\n\t            animationElements.length && requestAnimFrame(animation);\n\t        },\n\t        upto255 = function (color) {\n\t            return color > 255 ? 255 : color < 0 ? 0 : color;\n\t        };\n\t    /*\\\n\t     * Element.animateWith\n\t     [ method ]\n\t     **\n\t     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - el (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - params (object) #optional final attributes for the element, see also @Element.attr\n\t     - ms (number) #optional number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - element (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - animation (object) #optional animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n\t            x, y;\n\t        runAnimation(a, element, a.percents[0], null, element.attr());\n\t        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n\t            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n\t                animationElements[ii - 1].start = animationElements[i].start;\n\t                break;\n\t            }\n\t        }\n\t        return element;\n\t        //\n\t        //\n\t        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n\t        //     status = element.status(anim);\n\t        // return this.animate(a).status(a, status * anim.ms / a.ms);\n\t    };\n\t    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n\t        var cx = 3 * p1x,\n\t            bx = 3 * (p2x - p1x) - cx,\n\t            ax = 1 - cx - bx,\n\t            cy = 3 * p1y,\n\t            by = 3 * (p2y - p1y) - cy,\n\t            ay = 1 - cy - by;\n\t        function sampleCurveX(t) {\n\t            return ((ax * t + bx) * t + cx) * t;\n\t        }\n\t        function solve(x, epsilon) {\n\t            var t = solveCurveX(x, epsilon);\n\t            return ((ay * t + by) * t + cy) * t;\n\t        }\n\t        function solveCurveX(x, epsilon) {\n\t            var t0, t1, t2, x2, d2, i;\n\t            for(t2 = x, i = 0; i < 8; i++) {\n\t                x2 = sampleCurveX(t2) - x;\n\t                if (abs(x2) < epsilon) {\n\t                    return t2;\n\t                }\n\t                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n\t                if (abs(d2) < 1e-6) {\n\t                    break;\n\t                }\n\t                t2 = t2 - x2 / d2;\n\t            }\n\t            t0 = 0;\n\t            t1 = 1;\n\t            t2 = x;\n\t            if (t2 < t0) {\n\t                return t0;\n\t            }\n\t            if (t2 > t1) {\n\t                return t1;\n\t            }\n\t            while (t0 < t1) {\n\t                x2 = sampleCurveX(t2);\n\t                if (abs(x2 - x) < epsilon) {\n\t                    return t2;\n\t                }\n\t                if (x > x2) {\n\t                    t0 = t2;\n\t                } else {\n\t                    t1 = t2;\n\t                }\n\t                t2 = (t1 - t0) / 2 + t0;\n\t            }\n\t            return t2;\n\t        }\n\t        return solve(t, 1 / (200 * duration));\n\t    }\n\t    elproto.onAnimation = function (f) {\n\t        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n\t        return this;\n\t    };\n\t    function Animation(anim, ms) {\n\t        var percents = [],\n\t            newAnim = {};\n\t        this.ms = ms;\n\t        this.times = 1;\n\t        if (anim) {\n\t            for (var attr in anim) if (anim[has](attr)) {\n\t                newAnim[toFloat(attr)] = anim[attr];\n\t                percents.push(toFloat(attr));\n\t            }\n\t            percents.sort(sortByNumber);\n\t        }\n\t        this.anim = newAnim;\n\t        this.top = percents[percents.length - 1];\n\t        this.percents = percents;\n\t    }\n\t    /*\\\n\t     * Animation.delay\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given delay.\n\t     **\n\t     > Parameters\n\t     **\n\t     - delay (number) number of ms to pass between animation start and actual animation\n\t     **\n\t     = (object) new altered Animation object\n\t     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n\t     | circle1.animate(anim); // run the given animation immediately\n\t     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n\t    \\*/\n\t    Animation.prototype.delay = function (delay) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.times = this.times;\n\t        a.del = +delay || 0;\n\t        return a;\n\t    };\n\t    /*\\\n\t     * Animation.repeat\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given repetition.\n\t     **\n\t     > Parameters\n\t     **\n\t     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n\t     **\n\t     = (object) new altered Animation object\n\t    \\*/\n\t    Animation.prototype.repeat = function (times) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.del = this.del;\n\t        a.times = math.floor(mmax(times, 0)) || 1;\n\t        return a;\n\t    };\n\t    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n\t        percent = toFloat(percent);\n\t        var params,\n\t            isInAnim,\n\t            isInAnimSet,\n\t            percents = [],\n\t            next,\n\t            prev,\n\t            timestamp,\n\t            ms = anim.ms,\n\t            from = {},\n\t            to = {},\n\t            diff = {};\n\t        if (status) {\n\t            for (i = 0, ii = animationElements.length; i < ii; i++) {\n\t                var e = animationElements[i];\n\t                if (e.el.id == element.id && e.anim == anim) {\n\t                    if (e.percent != percent) {\n\t                        animationElements.splice(i, 1);\n\t                        isInAnimSet = 1;\n\t                    } else {\n\t                        isInAnim = e;\n\t                    }\n\t                    element.attr(e.totalOrigin);\n\t                    break;\n\t                }\n\t            }\n\t        } else {\n\t            status = +to; // NaN\n\t        }\n\t        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n\t            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n\t                percent = anim.percents[i];\n\t                prev = anim.percents[i - 1] || 0;\n\t                ms = ms / anim.top * (percent - prev);\n\t                next = anim.percents[i + 1];\n\t                params = anim.anim[percent];\n\t                break;\n\t            } else if (status) {\n\t                element.attr(anim.anim[anim.percents[i]]);\n\t            }\n\t        }\n\t        if (!params) {\n\t            return;\n\t        }\n\t        if (!isInAnim) {\n\t            for (var attr in params) if (params[has](attr)) {\n\t                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n\t                    from[attr] = element.attr(attr);\n\t                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n\t                    to[attr] = params[attr];\n\t                    switch (availableAnimAttrs[attr]) {\n\t                        case nu:\n\t                            diff[attr] = (to[attr] - from[attr]) / ms;\n\t                            break;\n\t                        case \"colour\":\n\t                            from[attr] = R.getRGB(from[attr]);\n\t                            var toColour = R.getRGB(to[attr]);\n\t                            diff[attr] = {\n\t                                r: (toColour.r - from[attr].r) / ms,\n\t                                g: (toColour.g - from[attr].g) / ms,\n\t                                b: (toColour.b - from[attr].b) / ms\n\t                            };\n\t                            break;\n\t                        case \"path\":\n\t                            var pathes = path2curve(from[attr], to[attr]),\n\t                                toPath = pathes[1];\n\t                            from[attr] = pathes[0];\n\t                            diff[attr] = [];\n\t                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                diff[attr][i] = [0];\n\t                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case \"transform\":\n\t                            var _ = element._,\n\t                                eq = equaliseTransform(_[attr], to[attr]);\n\t                            if (eq) {\n\t                                from[attr] = eq.from;\n\t                                to[attr] = eq.to;\n\t                                diff[attr] = [];\n\t                                diff[attr].real = true;\n\t                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    diff[attr][i] = [from[attr][i][0]];\n\t                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                var m = (element.matrix || new Matrix),\n\t                                    to2 = {\n\t                                        _: {transform: _.transform},\n\t                                        getBBox: function () {\n\t                                            return element.getBBox(1);\n\t                                        }\n\t                                    };\n\t                                from[attr] = [\n\t                                    m.a,\n\t                                    m.b,\n\t                                    m.c,\n\t                                    m.d,\n\t                                    m.e,\n\t                                    m.f\n\t                                ];\n\t                                extractTransform(to2, to[attr]);\n\t                                to[attr] = to2._.transform;\n\t                                diff[attr] = [\n\t                                    (to2.matrix.a - m.a) / ms,\n\t                                    (to2.matrix.b - m.b) / ms,\n\t                                    (to2.matrix.c - m.c) / ms,\n\t                                    (to2.matrix.d - m.d) / ms,\n\t                                    (to2.matrix.e - m.e) / ms,\n\t                                    (to2.matrix.f - m.f) / ms\n\t                                ];\n\t                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n\t                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n\t                                // extractTransform(to2, to[attr]);\n\t                                // diff[attr] = [\n\t                                //     (to2._.sx - _.sx) / ms,\n\t                                //     (to2._.sy - _.sy) / ms,\n\t                                //     (to2._.deg - _.deg) / ms,\n\t                                //     (to2._.dx - _.dx) / ms,\n\t                                //     (to2._.dy - _.dy) / ms\n\t                                // ];\n\t                            }\n\t                            break;\n\t                        case \"csv\":\n\t                            var values = Str(params[attr])[split](separator),\n\t                                from2 = Str(from[attr])[split](separator);\n\t                            if (attr == \"clip-rect\") {\n\t                                from[attr] = from2;\n\t                                diff[attr] = [];\n\t                                i = from2.length;\n\t                                while (i--) {\n\t                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n\t                                }\n\t                            }\n\t                            to[attr] = values;\n\t                            break;\n\t                        default:\n\t                            values = [][concat](params[attr]);\n\t                            from2 = [][concat](from[attr]);\n\t                            diff[attr] = [];\n\t                            i = element.paper.customAttributes[attr].length;\n\t                            while (i--) {\n\t                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t            }\n\t            var easing = params.easing,\n\t                easyeasy = R.easing_formulas[easing];\n\t            if (!easyeasy) {\n\t                easyeasy = Str(easing).match(bezierrg);\n\t                if (easyeasy && easyeasy.length == 5) {\n\t                    var curve = easyeasy;\n\t                    easyeasy = function (t) {\n\t                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n\t                    };\n\t                } else {\n\t                    easyeasy = pipe;\n\t                }\n\t            }\n\t            timestamp = params.start || anim.start || +new Date;\n\t            e = {\n\t                anim: anim,\n\t                percent: percent,\n\t                timestamp: timestamp,\n\t                start: timestamp + (anim.del || 0),\n\t                status: 0,\n\t                initstatus: status || 0,\n\t                stop: false,\n\t                ms: ms,\n\t                easing: easyeasy,\n\t                from: from,\n\t                diff: diff,\n\t                to: to,\n\t                el: element,\n\t                callback: params.callback,\n\t                prev: prev,\n\t                next: next,\n\t                repeat: times || anim.times,\n\t                origin: element.attr(),\n\t                totalOrigin: totalOrigin\n\t            };\n\t            animationElements.push(e);\n\t            if (status && !isInAnim && !isInAnimSet) {\n\t                e.stop = true;\n\t                e.start = new Date - ms * status;\n\t                if (animationElements.length == 1) {\n\t                    return animation();\n\t                }\n\t            }\n\t            if (isInAnimSet) {\n\t                e.start = new Date - e.ms * status;\n\t            }\n\t            animationElements.length == 1 && requestAnimFrame(animation);\n\t        } else {\n\t            isInAnim.initstatus = status;\n\t            isInAnim.start = new Date - isInAnim.ms * status;\n\t        }\n\t        eve(\"raphael.anim.start.\" + element.id, element, anim);\n\t    }\n\t    /*\\\n\t     * Raphael.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n\t     * See also @Animation.delay and @Animation.repeat methods.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     **\n\t     = (object) @Animation\n\t    \\*/\n\t    R.animation = function (params, ms, easing, callback) {\n\t        if (params instanceof Animation) {\n\t            return params;\n\t        }\n\t        if (R.is(easing, \"function\") || !easing) {\n\t            callback = callback || easing || null;\n\t            easing = null;\n\t        }\n\t        params = Object(params);\n\t        ms = +ms || 0;\n\t        var p = {},\n\t            json,\n\t            attr;\n\t        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n\t            json = true;\n\t            p[attr] = params[attr];\n\t        }\n\t        if (!json) {\n\t            // if percent-like syntax is used and end-of-all animation callback used\n\t            if(callback){\n\t                // find the last one\n\t                var lastKey = 0;\n\t                for(var i in params){\n\t                    var percent = toInt(i);\n\t                    if(params[has](i) && percent > lastKey){\n\t                        lastKey = percent;\n\t                    }\n\t                }\n\t                lastKey += '%';\n\t                // if already defined callback in the last keyframe, skip\n\t                !params[lastKey].callback && (params[lastKey].callback = callback);\n\t            }\n\t          return new Animation(params, ms);\n\t        } else {\n\t            easing && (p.easing = easing);\n\t            callback && (p.callback = callback);\n\t            return new Animation({100: p}, ms);\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Creates and starts animation for given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - animation (object) animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animate = function (params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n\t        runAnimation(anim, element, anim.percents[0], null, element.attr());\n\t        return element;\n\t    };\n\t    /*\\\n\t     * Element.setTime\n\t     [ method ]\n\t     **\n\t     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) animation object\n\t     - value (number) number of milliseconds from the beginning of the animation\n\t     **\n\t     = (object) original element if `value` is specified\n\t     * Note, that during animation following events are triggered:\n\t     *\n\t     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n\t    \\*/\n\t    elproto.setTime = function (anim, value) {\n\t        if (anim && value != null) {\n\t            this.status(anim, mmin(value, anim.ms) / anim.ms);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.status\n\t     [ method ]\n\t     **\n\t     * Gets or sets the status of animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n\t     **\n\t     = (number) status\n\t     * or\n\t     = (array) status if `anim` is not specified. Array of objects in format:\n\t     o {\n\t     o     anim: (object) animation object\n\t     o     status: (number) status\n\t     o }\n\t     * or\n\t     = (object) original element if `value` is specified\n\t    \\*/\n\t    elproto.status = function (anim, value) {\n\t        var out = [],\n\t            i = 0,\n\t            len,\n\t            e;\n\t        if (value != null) {\n\t            runAnimation(anim, this, -1, mmin(value, 1));\n\t            return this;\n\t        } else {\n\t            len = animationElements.length;\n\t            for (; i < len; i++) {\n\t                e = animationElements[i];\n\t                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n\t                    if (anim) {\n\t                        return e.status;\n\t                    }\n\t                    out.push({\n\t                        anim: e.anim,\n\t                        status: e.status\n\t                    });\n\t                }\n\t            }\n\t            if (anim) {\n\t                return 0;\n\t            }\n\t            return out;\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.pause\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element with ability to resume it later on.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.pause = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements[i].paused = true;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.resume\n\t     [ method ]\n\t     **\n\t     * Resumes animation if it was paused with @Element.pause method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.resume = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            var e = animationElements[i];\n\t            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n\t                delete e.paused;\n\t                this.status(e.anim, e.status);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.stop = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements.splice(i--, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    function stopAnimation(paper) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n\t            animationElements.splice(i--, 1);\n\t        }\n\t    }\n\t    eve.on(\"raphael.remove\", stopAnimation);\n\t    eve.on(\"raphael.clear\", stopAnimation);\n\t    elproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2019s object\";\n\t    };\n\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set.\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it.\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set.\n\t     *\n\t     * If function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    for (var method in elproto) if (elproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname][apply](el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t    setproto.attr = function (name, value) {\n\t        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n\t            for (var j = 0, jj = name.length; j < jj; j++) {\n\t                this.items[j].attr(name[j]);\n\t            }\n\t        } else {\n\t            for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t                this.items[i].attr(name, value);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found & removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t    };\n\t    setproto.animate = function (params, ms, easing, callback) {\n\t        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n\t        var len = this.items.length,\n\t            i = len,\n\t            item,\n\t            set = this,\n\t            collector;\n\t        if (!len) {\n\t            return this;\n\t        }\n\t        callback && (collector = function () {\n\t            !--len && callback.call(set);\n\t        });\n\t        easing = R.is(easing, string) ? easing : collector;\n\t        var anim = R.animation(params, ms, easing, collector);\n\t        item = this.items[--i].animate(anim);\n\t        while (i--) {\n\t            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n\t            (this.items[i] && !this.items[i].removed) || len--;\n\t        }\n\t        return this;\n\t    };\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin[apply](0, x);\n\t        y = mmin[apply](0, y);\n\t        x2 = mmax[apply](0, x2);\n\t        y2 = mmax[apply](0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y\n\t        };\n\t    };\n\t    setproto.clone = function (s) {\n\t        s = this.paper.set();\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2018s set\";\n\t    };\n\n\t    setproto.glow = function(glowConfig) {\n\t        var ret = this.paper.set();\n\t        this.forEach(function(shape, index){\n\t            var g = shape.glow(glowConfig);\n\t            if(g != null){\n\t                g.forEach(function(shape2, index2){\n\t                    ret.push(shape2);\n\t                });\n\t            }\n\t        });\n\t        return ret;\n\t    };\n\n\n\t    /*\\\n\t     * Set.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this set’s elements\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point is inside any of the set's elements\n\t     \\*/\n\t    setproto.isPointInside = function (x, y) {\n\t        var isPointInside = false;\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                isPointInside = true;\n\t                return false; // stop loop\n\t            }\n\t        });\n\t        return isPointInside;\n\t    };\n\n\t    /*\\\n\t     * Raphael.registerFont\n\t     [ method ]\n\t     **\n\t     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n\t     * Returns original parameter, so it could be used with chaining.\n\t     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n\t     **\n\t     > Parameters\n\t     **\n\t     - font (object) the font to register\n\t     = (object) the font you passed in\n\t     > Usage\n\t     | Cufon.registerFont(Raphael.registerFont({…}));\n\t    \\*/\n\t    R.registerFont = function (font) {\n\t        if (!font.face) {\n\t            return font;\n\t        }\n\t        this.fonts = this.fonts || {};\n\t        var fontcopy = {\n\t                w: font.w,\n\t                face: {},\n\t                glyphs: {}\n\t            },\n\t            family = font.face[\"font-family\"];\n\t        for (var prop in font.face) if (font.face[has](prop)) {\n\t            fontcopy.face[prop] = font.face[prop];\n\t        }\n\t        if (this.fonts[family]) {\n\t            this.fonts[family].push(fontcopy);\n\t        } else {\n\t            this.fonts[family] = [fontcopy];\n\t        }\n\t        if (!font.svg) {\n\t            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n\t            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n\t                var path = font.glyphs[glyph];\n\t                fontcopy.glyphs[glyph] = {\n\t                    w: path.w,\n\t                    k: {},\n\t                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n\t                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n\t                        }) + \"z\"\n\t                };\n\t                if (path.k) {\n\t                    for (var k in path.k) if (path[has](k)) {\n\t                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return font;\n\t    };\n\t    /*\\\n\t     * Paper.getFont\n\t     [ method ]\n\t     **\n\t     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n\t     **\n\t     > Parameters\n\t     **\n\t     - family (string) font family name or any word from it\n\t     - weight (string) #optional font weight\n\t     - style (string) #optional font style\n\t     - stretch (string) #optional font stretch\n\t     = (object) the font object\n\t     > Usage\n\t     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n\t    \\*/\n\t    paperproto.getFont = function (family, weight, style, stretch) {\n\t        stretch = stretch || \"normal\";\n\t        style = style || \"normal\";\n\t        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n\t        if (!R.fonts) {\n\t            return;\n\t        }\n\t        var font = R.fonts[family];\n\t        if (!font) {\n\t            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n\t            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n\t                if (name.test(fontName)) {\n\t                    font = R.fonts[fontName];\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        var thefont;\n\t        if (font) {\n\t            for (var i = 0, ii = font.length; i < ii; i++) {\n\t                thefont = font[i];\n\t                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return thefont;\n\t    };\n\t    /*\\\n\t     * Paper.print\n\t     [ method ]\n\t     **\n\t     * Creates path that represent given text written using given font at given position with given size.\n\t     * Result of the method is path element that contains whole text as a separate path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x position of the text\n\t     - y (number) y position of the text\n\t     - string (string) text to print\n\t     - font (object) font object, see @Paper.getFont\n\t     - size (number) #optional size of the font, default is `16`\n\t     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n\t     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n\t     - line_spacing (number) #optional number in range `1..3`, default is `1`\n\t     = (object) resulting path element, which consist of all letters\n\t     > Usage\n\t     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n\t    \\*/\n\t    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n\t        origin = origin || \"middle\"; // baseline|middle\n\t        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n\t        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n\t        var letters = Str(string)[split](E),\n\t            shift = 0,\n\t            notfirst = 0,\n\t            path = E,\n\t            scale;\n\t        R.is(font, \"string\") && (font = this.getFont(font));\n\t        if (font) {\n\t            scale = (size || 16) / font.face[\"units-per-em\"];\n\t            var bb = font.face.bbox[split](separator),\n\t                top = +bb[0],\n\t                lineHeight = bb[3] - bb[1],\n\t                shifty = 0,\n\t                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n\t            for (var i = 0, ii = letters.length; i < ii; i++) {\n\t                if (letters[i] == \"\\n\") {\n\t                    shift = 0;\n\t                    curr = 0;\n\t                    notfirst = 0;\n\t                    shifty += lineHeight * line_spacing;\n\t                } else {\n\t                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n\t                        curr = font.glyphs[letters[i]];\n\t                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n\t                    notfirst = 1;\n\t                }\n\t                if (curr && curr.d) {\n\t                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n\t                }\n\t            }\n\t        }\n\t        return this.path(path).attr({\n\t            fill: \"#000\",\n\t            stroke: \"none\"\n\t        });\n\t    };\n\n\t    /*\\\n\t     * Paper.add\n\t     [ method ]\n\t     **\n\t     * Imports elements in JSON array in format `{type: type, <attributes>}`\n\t     **\n\t     > Parameters\n\t     **\n\t     - json (array)\n\t     = (object) resulting set of imported elements\n\t     > Usage\n\t     | paper.add([\n\t     |     {\n\t     |         type: \"circle\",\n\t     |         cx: 10,\n\t     |         cy: 10,\n\t     |         r: 5\n\t     |     },\n\t     |     {\n\t     |         type: \"rect\",\n\t     |         x: 10,\n\t     |         y: 10,\n\t     |         width: 10,\n\t     |         height: 10,\n\t     |         fill: \"#fc0\"\n\t     |     }\n\t     | ]);\n\t    \\*/\n\t    paperproto.add = function (json) {\n\t        if (R.is(json, \"array\")) {\n\t            var res = this.set(),\n\t                i = 0,\n\t                ii = json.length,\n\t                j;\n\t            for (; i < ii; i++) {\n\t                j = json[i] || {};\n\t                elements[has](j.type) && res.push(this[j.type]().attr(j));\n\t            }\n\t        }\n\t        return res;\n\t    };\n\n\t    /*\\\n\t     * Raphael.format\n\t     [ method ]\n\t     **\n\t     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - … (string) rest of arguments will be treated as parameters for replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | var x = 10,\n\t     |     y = 20,\n\t     |     width = 40,\n\t     |     height = 50;\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n\t    \\*/\n\t    R.format = function (token, params) {\n\t        var args = R.is(params, array) ? [0][concat](params) : arguments;\n\t        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n\t            return args[++i] == null ? E : args[i];\n\t        }));\n\t        return token || E;\n\t    };\n\t    /*\\\n\t     * Raphael.fullfill\n\t     [ method ]\n\t     **\n\t     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - json (object) object which properties will be used as a replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t     |     x: 10,\n\t     |     y: 20,\n\t     |     dim: {\n\t     |         width: 40,\n\t     |         height: 50,\n\t     |         \"negative width\": -40\n\t     |     }\n\t     | }));\n\t    \\*/\n\t    R.fullfill = (function () {\n\t        var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t            replacer = function (all, key, obj) {\n\t                var res = obj;\n\t                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                    name = name || quotedName;\n\t                    if (res) {\n\t                        if (name in res) {\n\t                            res = res[name];\n\t                        }\n\t                        typeof res == \"function\" && isFunc && (res = res());\n\t                    }\n\t                });\n\t                res = (res == null || res == obj ? all : res) + \"\";\n\t                return res;\n\t            };\n\t        return function (str, obj) {\n\t            return String(str).replace(tokenRegex, function (all, key) {\n\t                return replacer(all, key, obj);\n\t            });\n\t        };\n\t    })();\n\t    /*\\\n\t     * Raphael.ninja\n\t     [ method ]\n\t     **\n\t     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n\t     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\n\t     **\n\t     = (object) Raphael object\n\t     > Usage\n\t     | (function (local_raphael) {\n\t     |     var paper = local_raphael(10, 10, 320, 200);\n\t     |     …\n\t     | })(Raphael.ninja());\n\t    \\*/\n\t    R.ninja = function () {\n\t        if (oldRaphael.was) {\n\t            g.win.Raphael = oldRaphael.is;\n\t        } else {\n\t            // IE8 raises an error when deleting window property\n\t            window.Raphael = undefined;\n\t            try {\n\t                delete window.Raphael;\n\t            } catch(e) {}\n\t        }\n\t        return R;\n\t    };\n\t    /*\\\n\t     * Raphael.st\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n\t     * you added, so you will be able to call the same method on sets too.\n\t     **\n\t     * See also @Raphael.el.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | Raphael.st.red = function () {\n\t     |     this.forEach(function (el) {\n\t     |         el.red();\n\t     |     });\n\t     | };\n\t     | // then use it\n\t     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n\t    \\*/\n\t    R.st = setproto;\n\n\t    eve.on(\"raphael.DOMload\", function () {\n\t        loaded = true;\n\t    });\n\n\t    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n\t    (function (doc, loaded, f) {\n\t        if (doc.readyState == null && doc.addEventListener){\n\t            doc.addEventListener(loaded, f = function () {\n\t                doc.removeEventListener(loaded, f, false);\n\t                doc.readyState = \"complete\";\n\t            }, false);\n\t            doc.readyState = \"loading\";\n\t        }\n\t        function isLoaded() {\n\t            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n\t        }\n\t        isLoaded();\n\t    })(document, \"DOMContentLoaded\");\n\n\t    return R;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\n\t(function (glob) {\n\t    var version = \"0.5.0\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        fun = function () {},\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        objtos = Object.prototype.toString,\n\t        Str = String,\n\t        isArray = Array.isArray || function (ar) {\n\t            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n\t        };\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\n\t     * Fires event with given `name`, given scope and other parameters.\n\n\t     > Arguments\n\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            var e = events,\n\t                oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                f = false,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event,\n\t                errors = [];\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t        // Undocumented. Debug only.\n\t        eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n\t     > Arguments\n\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = isArray(name) ? name : name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    /*\\\n\t     * eve.separator\n\t     [ method ]\n\n\t     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n\t     * here. Be aware that if you pass a string longer than one character it will be treated as\n\t     * a list of characters.\n\n\t     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n\t    \\*/\n\t    eve.separator = function (sep) {\n\t        if (sep) {\n\t            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n\t            sep = \"[\" + sep + \"]\";\n\t            separator = new RegExp(sep);\n\t        } else {\n\t            separator = /[\\.\\/]/;\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     - name (array) if you don’t want to use separators, you can use array of strings\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = isArray(name) ? name : Str(name).split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     > Arguments\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     > Arguments\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n\t        }\n\t        return cur;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return isArray(current_event) ? current_event : current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = isArray(name) ? name : Str(name).split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.off(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (glob.eve = eve));\n\t})(this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.svg) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        math = Math,\n\t        mmax = math.max,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        E = \"\",\n\t        S = \" \";\n\t    var xlink = \"http://www.w3.org/1999/xlink\",\n\t        markers = {\n\t            block: \"M5,0 0,2.5 5,5z\",\n\t            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n\t            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n\t            open: \"M6,1 1,3.5 6,6\",\n\t            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n\t        },\n\t        markerCounter = {};\n\t    R.toString = function () {\n\t        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var $ = function (el, attr) {\n\t        if (attr) {\n\t            if (typeof el == \"string\") {\n\t                el = $(el);\n\t            }\n\t            for (var key in attr) if (attr[has](key)) {\n\t                if (key.substring(0, 6) == \"xlink:\") {\n\t                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n\t                } else {\n\t                    el.setAttribute(key, Str(attr[key]));\n\t                }\n\t            }\n\t        } else {\n\t            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n\t            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n\t        }\n\t        return el;\n\t    },\n\t    addGradientFill = function (element, gradient) {\n\t        var type = \"linear\",\n\t            id = element.id + gradient,\n\t            fx = .5, fy = .5,\n\t            o = element.node,\n\t            SVG = element.paper,\n\t            s = o.style,\n\t            el = R._g.doc.getElementById(id);\n\t        if (!el) {\n\t            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n\t                type = \"radial\";\n\t                if (_fx && _fy) {\n\t                    fx = toFloat(_fx);\n\t                    fy = toFloat(_fy);\n\t                    var dir = ((fy > .5) * 2 - 1);\n\t                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n\t                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n\t                        fy != .5 &&\n\t                        (fy = fy.toFixed(5) - 1e-5 * dir);\n\t                }\n\t                return E;\n\t            });\n\t            gradient = gradient.split(/\\s*\\-\\s*/);\n\t            if (type == \"linear\") {\n\t                var angle = gradient.shift();\n\t                angle = -toFloat(angle);\n\t                if (isNaN(angle)) {\n\t                    return null;\n\t                }\n\t                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n\t                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n\t                vector[2] *= max;\n\t                vector[3] *= max;\n\t                if (vector[2] < 0) {\n\t                    vector[0] = -vector[2];\n\t                    vector[2] = 0;\n\t                }\n\t                if (vector[3] < 0) {\n\t                    vector[1] = -vector[3];\n\t                    vector[3] = 0;\n\t                }\n\t            }\n\t            var dots = R._parseDots(gradient);\n\t            if (!dots) {\n\t                return null;\n\t            }\n\t            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n\n\t            if (element.gradient && id != element.gradient.id) {\n\t                SVG.defs.removeChild(element.gradient);\n\t                delete element.gradient;\n\t            }\n\n\t            if (!element.gradient) {\n\t                el = $(type + \"Gradient\", {id: id});\n\t                element.gradient = el;\n\t                $(el, type == \"radial\" ? {\n\t                    fx: fx,\n\t                    fy: fy\n\t                } : {\n\t                    x1: vector[0],\n\t                    y1: vector[1],\n\t                    x2: vector[2],\n\t                    y2: vector[3],\n\t                    gradientTransform: element.matrix.invert()\n\t                });\n\t                SVG.defs.appendChild(el);\n\t                for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                    el.appendChild($(\"stop\", {\n\t                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n\t                        \"stop-color\": dots[i].color || \"#fff\",\n\t                        \"stop-opacity\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\n\t                    }));\n\t                }\n\t            }\n\t        }\n\t        $(o, {\n\t            fill: fillurl(id),\n\t            opacity: 1,\n\t            \"fill-opacity\": 1\n\t        });\n\t        s.fill = E;\n\t        s.opacity = 1;\n\t        s.fillOpacity = 1;\n\t        return 1;\n\t    },\n\t    isIE9or10 = function () {\n\t      var mode = document.documentMode;\n\t      return mode && (mode === 9 || mode === 10);\n\t    },\n\t    fillurl = function (id) {\n\t      if (isIE9or10()) {\n\t          return \"url('#\" + id + \"')\";\n\t      }\n\t      var location = document.location;\n\t      var locationString = (\n\t          location.protocol + '//' +\n\t          location.host +\n\t          location.pathname +\n\t          location.search\n\t      );\n\t      return \"url('\" + locationString + \"#\" + id + \"')\";\n\t    },\n\t    updatePosition = function (o) {\n\t        var bbox = o.getBBox(1);\n\t        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n\t    },\n\t    addArrow = function (o, value, isEnd) {\n\t        if (o.type == \"path\") {\n\t            var values = Str(value).toLowerCase().split(\"-\"),\n\t                p = o.paper,\n\t                se = isEnd ? \"end\" : \"start\",\n\t                node = o.node,\n\t                attrs = o.attrs,\n\t                stroke = attrs[\"stroke-width\"],\n\t                i = values.length,\n\t                type = \"classic\",\n\t                from,\n\t                to,\n\t                dx,\n\t                refX,\n\t                attr,\n\t                w = 3,\n\t                h = 3,\n\t                t = 5;\n\t            while (i--) {\n\t                switch (values[i]) {\n\t                    case \"block\":\n\t                    case \"classic\":\n\t                    case \"oval\":\n\t                    case \"diamond\":\n\t                    case \"open\":\n\t                    case \"none\":\n\t                        type = values[i];\n\t                        break;\n\t                    case \"wide\": h = 5; break;\n\t                    case \"narrow\": h = 2; break;\n\t                    case \"long\": w = 5; break;\n\t                    case \"short\": w = 2; break;\n\t                }\n\t            }\n\t            if (type == \"open\") {\n\t                w += 2;\n\t                h += 2;\n\t                t += 2;\n\t                dx = 1;\n\t                refX = isEnd ? 4 : 1;\n\t                attr = {\n\t                    fill: \"none\",\n\t                    stroke: attrs.stroke\n\t                };\n\t            } else {\n\t                refX = dx = w / 2;\n\t                attr = {\n\t                    fill: attrs.stroke,\n\t                    stroke: \"none\"\n\t                };\n\t            }\n\t            if (o._.arrows) {\n\t                if (isEnd) {\n\t                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n\t                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n\t                } else {\n\t                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n\t                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n\t                }\n\t            } else {\n\t                o._.arrows = {};\n\t            }\n\t            if (type != \"none\") {\n\t                var pathId = \"raphael-marker-\" + type,\n\t                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\n\t                if (!R._g.doc.getElementById(pathId)) {\n\t                    p.defs.appendChild($($(\"path\"), {\n\t                        \"stroke-linecap\": \"round\",\n\t                        d: markers[type],\n\t                        id: pathId\n\t                    }));\n\t                    markerCounter[pathId] = 1;\n\t                } else {\n\t                    markerCounter[pathId]++;\n\t                }\n\t                var marker = R._g.doc.getElementById(markerId),\n\t                    use;\n\t                if (!marker) {\n\t                    marker = $($(\"marker\"), {\n\t                        id: markerId,\n\t                        markerHeight: h,\n\t                        markerWidth: w,\n\t                        orient: \"auto\",\n\t                        refX: refX,\n\t                        refY: h / 2\n\t                    });\n\t                    use = $($(\"use\"), {\n\t                        \"xlink:href\": \"#\" + pathId,\n\t                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n\t                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n\t                    });\n\t                    marker.appendChild(use);\n\t                    p.defs.appendChild(marker);\n\t                    markerCounter[markerId] = 1;\n\t                } else {\n\t                    markerCounter[markerId]++;\n\t                    use = marker.getElementsByTagName(\"use\")[0];\n\t                }\n\t                $(use, attr);\n\t                var delta = dx * (type != \"diamond\" && type != \"oval\");\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - delta * stroke;\n\t                } else {\n\t                    from = delta * stroke;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                attr = {};\n\t                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n\t                if (to || from) {\n\t                    attr.d = R.getSubpath(attrs.path, from, to);\n\t                }\n\t                $(node, attr);\n\t                o._.arrows[se + \"Path\"] = pathId;\n\t                o._.arrows[se + \"Marker\"] = markerId;\n\t                o._.arrows[se + \"dx\"] = delta;\n\t                o._.arrows[se + \"Type\"] = type;\n\t                o._.arrows[se + \"String\"] = value;\n\t            } else {\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - from;\n\t                } else {\n\t                    from = 0;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n\t                delete o._.arrows[se + \"Path\"];\n\t                delete o._.arrows[se + \"Marker\"];\n\t                delete o._.arrows[se + \"dx\"];\n\t                delete o._.arrows[se + \"Type\"];\n\t                delete o._.arrows[se + \"String\"];\n\t            }\n\t            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n\t                var item = R._g.doc.getElementById(attr);\n\t                item && item.parentNode.removeChild(item);\n\t            }\n\t        }\n\t    },\n\t    dasharray = {\n\t        \"-\": [3, 1],\n\t        \".\": [1, 1],\n\t        \"-.\": [3, 1, 1, 1],\n\t        \"-..\": [3, 1, 1, 1, 1, 1],\n\t        \". \": [1, 3],\n\t        \"- \": [4, 3],\n\t        \"--\": [8, 3],\n\t        \"- .\": [4, 3, 1, 3],\n\t        \"--.\": [8, 3, 1, 3],\n\t        \"--..\": [8, 3, 1, 3, 1, 3]\n\t    },\n\t    addDashes = function (o, value, params) {\n\t        value = dasharray[Str(value).toLowerCase()];\n\t        if (value) {\n\t            var width = o.attrs[\"stroke-width\"] || \"1\",\n\t                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n\t                dashes = [],\n\t                i = value.length;\n\t            while (i--) {\n\t                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n\t            }\n\t            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n\t        }\n\t        else {\n\t          $(o.node, {\"stroke-dasharray\": \"none\"});\n\t        }\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        var node = o.node,\n\t            attrs = o.attrs,\n\t            vis = node.style.visibility;\n\t        node.style.visibility = \"hidden\";\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                if (!R._availableAttrs[has](att)) {\n\t                    continue;\n\t                }\n\t                var value = params[att];\n\t                attrs[att] = value;\n\t                switch (att) {\n\t                    case \"blur\":\n\t                        o.blur(value);\n\t                        break;\n\t                    case \"title\":\n\t                        var title = node.getElementsByTagName(\"title\");\n\n\t                        // Use the existing <title>.\n\t                        if (title.length && (title = title[0])) {\n\t                          title.firstChild.nodeValue = value;\n\t                        } else {\n\t                          title = $(\"title\");\n\t                          var val = R._g.doc.createTextNode(value);\n\t                          title.appendChild(val);\n\t                          node.appendChild(title);\n\t                        }\n\t                        break;\n\t                    case \"href\":\n\t                    case \"target\":\n\t                        var pn = node.parentNode;\n\t                        if (pn.tagName.toLowerCase() != \"a\") {\n\t                            var hl = $(\"a\");\n\t                            pn.insertBefore(hl, node);\n\t                            hl.appendChild(node);\n\t                            pn = hl;\n\t                        }\n\t                        if (att == \"target\") {\n\t                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n\t                        } else {\n\t                            pn.setAttributeNS(xlink, att, value);\n\t                        }\n\t                        break;\n\t                    case \"cursor\":\n\t                        node.style.cursor = value;\n\t                        break;\n\t                    case \"transform\":\n\t                        o.transform(value);\n\t                        break;\n\t                    case \"arrow-start\":\n\t                        addArrow(o, value);\n\t                        break;\n\t                    case \"arrow-end\":\n\t                        addArrow(o, value, 1);\n\t                        break;\n\t                    case \"clip-rect\":\n\t                        var rect = Str(value).split(separator);\n\t                        if (rect.length == 4) {\n\t                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n\t                            var el = $(\"clipPath\"),\n\t                                rc = $(\"rect\");\n\t                            el.id = R.createUUID();\n\t                            $(rc, {\n\t                                x: rect[0],\n\t                                y: rect[1],\n\t                                width: rect[2],\n\t                                height: rect[3]\n\t                            });\n\t                            el.appendChild(rc);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n\t                            o.clip = rc;\n\t                        }\n\t                        if (!value) {\n\t                            var path = node.getAttribute(\"clip-path\");\n\t                            if (path) {\n\t                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n\t                                clip && clip.parentNode.removeChild(clip);\n\t                                $(node, {\"clip-path\": E});\n\t                                delete o.clip;\n\t                            }\n\t                        }\n\t                    break;\n\t                    case \"path\":\n\t                        if (o.type == \"path\") {\n\t                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n\t                            o._.dirty = 1;\n\t                            if (o._.arrows) {\n\t                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                            }\n\t                        }\n\t                        break;\n\t                    case \"width\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fx) {\n\t                            att = \"x\";\n\t                            value = attrs.x;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"x\":\n\t                        if (attrs.fx) {\n\t                            value = -attrs.x - (attrs.width || 0);\n\t                        }\n\t                    case \"rx\":\n\t                        if (att == \"rx\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cx\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"height\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fy) {\n\t                            att = \"y\";\n\t                            value = attrs.y;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"y\":\n\t                        if (attrs.fy) {\n\t                            value = -attrs.y - (attrs.height || 0);\n\t                        }\n\t                    case \"ry\":\n\t                        if (att == \"ry\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cy\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"r\":\n\t                        if (o.type == \"rect\") {\n\t                            $(node, {rx: value, ry: value});\n\t                        } else {\n\t                            node.setAttribute(att, value);\n\t                        }\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"src\":\n\t                        if (o.type == \"image\") {\n\t                            node.setAttributeNS(xlink, \"href\", value);\n\t                        }\n\t                        break;\n\t                    case \"stroke-width\":\n\t                        if (o._.sx != 1 || o._.sy != 1) {\n\t                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n\t                        }\n\t                        node.setAttribute(att, value);\n\t                        if (attrs[\"stroke-dasharray\"]) {\n\t                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n\t                        }\n\t                        if (o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"stroke-dasharray\":\n\t                        addDashes(o, value, params);\n\t                        break;\n\t                    case \"fill\":\n\t                        var isURL = Str(value).match(R._ISURL);\n\t                        if (isURL) {\n\t                            el = $(\"pattern\");\n\t                            var ig = $(\"image\");\n\t                            el.id = R.createUUID();\n\t                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n\t                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n\t                            el.appendChild(ig);\n\n\t                            (function (el) {\n\t                                R._preload(isURL[1], function () {\n\t                                    var w = this.offsetWidth,\n\t                                        h = this.offsetHeight;\n\t                                    $(el, {width: w, height: h});\n\t                                    $(ig, {width: w, height: h});\n\t                                });\n\t                            })(el);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {fill: \"url(#\" + el.id + \")\"});\n\t                            o.pattern = el;\n\t                            o.pattern && updatePosition(o);\n\t                            break;\n\t                        }\n\t                        var clr = R.getRGB(value);\n\t                        if (!clr.error) {\n\t                            delete params.gradient;\n\t                            delete attrs.gradient;\n\t                            !R.is(attrs.opacity, \"undefined\") &&\n\t                                R.is(params.opacity, \"undefined\") &&\n\t                                $(node, {opacity: attrs.opacity});\n\t                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n\t                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n\t                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n\t                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n\t                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n\t                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                                if (gradient) {\n\t                                    var stops = gradient.getElementsByTagName(\"stop\");\n\t                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n\t                                }\n\t                            }\n\t                            attrs.gradient = value;\n\t                            attrs.fill = \"none\";\n\t                            break;\n\t                        }\n\t                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                    case \"stroke\":\n\t                        clr = R.getRGB(value);\n\t                        node.setAttribute(att, clr.hex);\n\t                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                        if (att == \"stroke\" && o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"gradient\":\n\t                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n\t                        break;\n\t                    case \"opacity\":\n\t                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n\t                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n\t                        }\n\t                        // fall\n\t                    case \"fill-opacity\":\n\t                        if (attrs.gradient) {\n\t                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                            if (gradient) {\n\t                                stops = gradient.getElementsByTagName(\"stop\");\n\t                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n\t                            }\n\t                            break;\n\t                        }\n\t                    default:\n\t                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n\t                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n\t                            return w.substring(1).toUpperCase();\n\t                        });\n\t                        node.style[cssrule] = value;\n\t                        o._.dirty = 1;\n\t                        node.setAttribute(att, value);\n\t                        break;\n\t                }\n\t            }\n\t        }\n\n\t        tuneText(o, params);\n\t        node.style.visibility = vis;\n\t    },\n\t    leading = 1.2,\n\t    tuneText = function (el, params) {\n\t        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n\t            return;\n\t        }\n\t        var a = el.attrs,\n\t            node = el.node,\n\t            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\n\n\t        if (params[has](\"text\")) {\n\t            a.text = params.text;\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var texts = Str(params.text).split(\"\\n\"),\n\t                tspans = [],\n\t                tspan;\n\t            for (var i = 0, ii = texts.length; i < ii; i++) {\n\t                tspan = $(\"tspan\");\n\t                i && $(tspan, {dy: fontSize * leading, x: a.x});\n\t                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n\t                node.appendChild(tspan);\n\t                tspans[i] = tspan;\n\t            }\n\t        } else {\n\t            tspans = node.getElementsByTagName(\"tspan\");\n\t            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n\t                $(tspans[i], {dy: fontSize * leading, x: a.x});\n\t            } else {\n\t                $(tspans[0], {dy: 0});\n\t            }\n\t        }\n\t        $(node, {x: a.x, y: a.y});\n\t        el._.dirty = 1;\n\t        var bb = el._getBBox(),\n\t            dif = a.y - (bb.y + bb.height / 2);\n\t        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n\t    },\n\t    getRealNode = function (node) {\n\t        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\n\t            return node.parentNode;\n\t        } else {\n\t            return node;\n\t        }\n\t    },\n\t    Element = function (node, svg) {\n\t        var X = 0,\n\t            Y = 0;\n\t        /*\\\n\t         * Element.node\n\t         [ property (object) ]\n\t         **\n\t         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t         **\n\t         * Note: Don’t mess with it.\n\t         > Usage\n\t         | // draw a circle at coordinate 10,10 with radius of 10\n\t         | var c = paper.circle(10, 10, 10);\n\t         | c.node.onclick = function () {\n\t         |     c.attr(\"fill\", \"red\");\n\t         | };\n\t        \\*/\n\t        this[0] = this.node = node;\n\t        /*\\\n\t         * Element.raphael\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to @Raphael object. In case it is not available.\n\t         > Usage\n\t         | Raphael.el.red = function () {\n\t         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n\t         |     hsb.h = 1;\n\t         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n\t         | }\n\t        \\*/\n\t        node.raphael = true;\n\t        /*\\\n\t         * Element.id\n\t         [ property (number) ]\n\t         **\n\t         * Unique id of the element. Especially useful when you want to listen to events of the element,\n\t         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n\t        \\*/\n\t        this.id = guid();\n\t        node.raphaelid = this.id;\n\n\t        /**\n\t        * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\n\t        * @returns {string} id\n\t        */\n\t        function guid() {\n\t            return (\"0000\" + (Math.random()*Math.pow(36,5) << 0).toString(36)).slice(-5);\n\t        }\n\n\t        this.matrix = R.matrix();\n\t        this.realPath = null;\n\t        /*\\\n\t         * Element.paper\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n\t         > Usage\n\t         | Raphael.el.cross = function () {\n\t         |     this.attr({fill: \"red\"});\n\t         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n\t         |         .attr({stroke: \"red\"});\n\t         | }\n\t        \\*/\n\t        this.paper = svg;\n\t        this.attrs = this.attrs || {};\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            deg: 0,\n\t            dx: 0,\n\t            dy: 0,\n\t            dirty: 1\n\t        };\n\t        !svg.bottom && (svg.bottom = this);\n\t        /*\\\n\t         * Element.prev\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the previous element in the hierarchy.\n\t        \\*/\n\t        this.prev = svg.top;\n\t        svg.top && (svg.top.next = this);\n\t        svg.top = this;\n\t        /*\\\n\t         * Element.next\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the next element in the hierarchy.\n\t        \\*/\n\t        this.next = null;\n\t    },\n\t    elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\n\t    R._engine.path = function (pathString, SVG) {\n\t        var el = $(\"path\");\n\t        SVG.canvas && SVG.canvas.appendChild(el);\n\t        var p = new Element(el, SVG);\n\t        p.type = \"path\";\n\t        setFillAndStroke(p, {\n\t            fill: \"none\",\n\t            stroke: \"#000\",\n\t            path: pathString\n\t        });\n\t        return p;\n\t    };\n\t    /*\\\n\t     * Element.rotate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds rotation by given angle around given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     - cx (number) #optional x coordinate of the centre of rotation\n\t     - cy (number) #optional y coordinate of the centre of rotation\n\t     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.scale\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds scale by given amount relative to given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - sx (number) horisontal scale amount\n\t     - sy (number) vertical scale amount\n\t     - cx (number) #optional x coordinate of the centre of scale\n\t     - cy (number) #optional y coordinate of the centre of scale\n\t     * If cx & cy aren’t specified centre of the shape is used instead.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.translate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds translation by given amount to the list of transformations of the element.\n\t     > Parameters\n\t     - dx (number) horisontal shift\n\t     - dy (number) vertical shift\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Adds transformation to the element which is separate to other attributes,\n\t     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n\t     * of transformation string is similar to the path string syntax:\n\t     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n\t     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n\t     * scale and `m` is for matrix.\n\t     *\n\t     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n\t     *\n\t     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n\t     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n\t     * coordinates as optional parameters, the default is the centre point of the element.\n\t     * Matrix accepts six parameters.\n\t     > Usage\n\t     | var el = paper.rect(10, 20, 300, 200);\n\t     | // translate 100, 100, rotate 45°, translate -100, 0\n\t     | el.transform(\"t100,100r45t-100,0\");\n\t     | // if you want you can append or prepend transformations\n\t     | el.transform(\"...t50,50\");\n\t     | el.transform(\"s2...\");\n\t     | // or even wrap\n\t     | el.transform(\"t50,50...t-50-50\");\n\t     | // to reset transformation call method with empty string\n\t     | el.transform(\"\");\n\t     | // to get current value call it without parameters\n\t     | console.log(el.transform());\n\t     > Parameters\n\t     - tstr (string) #optional transformation string\n\t     * If tstr isn’t specified\n\t     = (string) current transformation string\n\t     * else\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            return _.transform;\n\t        }\n\t        R._extractTransform(this, tstr);\n\n\t        this.clip && $(this.clip, {transform: this.matrix.invert()});\n\t        this.pattern && updatePosition(this);\n\t        this.node && $(this.node, {transform: this.matrix});\n\n\t        if (_.sx != 1 || _.sy != 1) {\n\t            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n\t            this.attr({\"stroke-width\": sw});\n\t        }\n\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hide\n\t     [ method ]\n\t     **\n\t     * Makes element invisible. See @Element.show.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hide = function () {\n\t        if(!this.removed) this.node.style.display = \"none\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.show\n\t     [ method ]\n\t     **\n\t     * Makes element visible. See @Element.hide.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.show = function () {\n\t        if(!this.removed) this.node.style.display = \"\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the paper.\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var node = getRealNode(this.node);\n\t        if (this.removed || !node.parentNode) {\n\t            return;\n\t        }\n\t        var paper = this.paper;\n\t        paper.__set__ && paper.__set__.exclude(this);\n\t        eve.unbind(\"raphael.*.*.\" + this.id);\n\t        if (this.gradient) {\n\t            paper.defs.removeChild(this.gradient);\n\t        }\n\t        R._tear(this, paper);\n\n\t        node.parentNode.removeChild(node);\n\n\t        // Remove custom data for element\n\t        this.removeData();\n\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.node.style.display == \"none\") {\n\t            this.show();\n\t            var hide = true;\n\t        }\n\t        var canvasHidden = false,\n\t            containerStyle;\n\t        if (this.paper.canvas.parentElement) {\n\t          containerStyle = this.paper.canvas.parentElement.style;\n\t        } //IE10+ can't find parentElement\n\t        else if (this.paper.canvas.parentNode) {\n\t          containerStyle = this.paper.canvas.parentNode.style;\n\t        }\n\n\t        if(containerStyle && containerStyle.display == \"none\") {\n\t          canvasHidden = true;\n\t          containerStyle.display = \"\";\n\t        }\n\t        var bbox = {};\n\t        try {\n\t            bbox = this.node.getBBox();\n\t        } catch(e) {\n\t            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\n\t            bbox = {\n\t                x: this.node.clientLeft,\n\t                y: this.node.clientTop,\n\t                width: this.node.clientWidth,\n\t                height: this.node.clientHeight\n\t            }\n\t        } finally {\n\t            bbox = bbox || {};\n\t            if(canvasHidden){\n\t              containerStyle.display = \"none\";\n\t            }\n\t        }\n\t        hide && this.hide();\n\t        return bbox;\n\t    };\n\t    /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Sets the attributes of the element.\n\t     > Parameters\n\t     - attrName (string) attribute’s name\n\t     - value (string) value\n\t     * or\n\t     - params (object) object of name/value pairs\n\t     * or\n\t     - attrName (string) attribute’s name\n\t     * or\n\t     - attrNames (array) in this case method returns array of current values for given attribute names\n\t     = (object) @Element if attrsName & value or params are passed in.\n\t     = (...) value of the attribute if only attrsName is passed in.\n\t     = (array) array of values of the attribute if attrsNames is passed in.\n\t     = (object) object of attributes if nothing is passed in.\n\t     > Possible parameters\n\t     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n\t     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n\t     o clip-rect (string) comma or space separated values: x, y, width and height\n\t     o cursor (string) CSS type of the cursor\n\t     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n\t     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n\t     o fill (string) colour, gradient or image\n\t     o fill-opacity (number)\n\t     o font (string)\n\t     o font-family (string)\n\t     o font-size (number) font size in pixels\n\t     o font-weight (string)\n\t     o height (number)\n\t     o href (string) URL, if specified element behaves as hyperlink\n\t     o opacity (number)\n\t     o path (string) SVG path string format\n\t     o r (number) radius of the circle, ellipse or rounded corner on the rect\n\t     o rx (number) horisontal radius of the ellipse\n\t     o ry (number) vertical radius of the ellipse\n\t     o src (string) image URL, only works for @Element.image element\n\t     o stroke (string) stroke colour\n\t     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n\t     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n\t     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n\t     o stroke-miterlimit (number)\n\t     o stroke-opacity (number)\n\t     o stroke-width (number) stroke width in pixels, default is '1'\n\t     o target (string) used with href\n\t     o text (string) contents of the text element. Use `\\n` for multiline text\n\t     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n\t     o title (string) will create tooltip with a given text\n\t     o transform (string) see @Element.transform\n\t     o width (number)\n\t     o x (number)\n\t     o y (number)\n\t     > Gradients\n\t     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n\t     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n\t     *\n\t     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n\t     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n\t     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n\t     > Path String\n\t     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n\t     > Colour Parsing\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n\t     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n\t     # </ul>\n\t    \\*/\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            if (name == \"transform\") {\n\t                return this._.transform;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        if (value != null) {\n\t            var params = {};\n\t            params[name] = value;\n\t        } else if (name != null && R.is(name, \"object\")) {\n\t            params = name;\n\t        }\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t            this.attrs[key] = params[key];\n\t            for (var subkey in par) if (par[has](subkey)) {\n\t                params[subkey] = par[subkey];\n\t            }\n\t        }\n\t        setFillAndStroke(this, params);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toFront\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toFront = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        node.parentNode.appendChild(node);\n\t        var svg = this.paper;\n\t        svg.top != this && R._tofront(this, svg);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toBack\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        var parentNode = node.parentNode;\n\t        parentNode.insertBefore(node, parentNode.firstChild);\n\t        R._toback(this, this.paper);\n\t        var svg = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts current object after the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var afterNode = getRealNode(element.node || element[element.length - 1].node);\n\t        if (afterNode.nextSibling) {\n\t            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\n\t        } else {\n\t            afterNode.parentNode.appendChild(node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts current object before the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var beforeNode = getRealNode(element.node || element[0].node);\n\t        beforeNode.parentNode.insertBefore(node, beforeNode);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        // Experimental. No Safari support. Use it on your own risk.\n\t        var t = this;\n\t        if (+size !== 0) {\n\t            var fltr = $(\"filter\"),\n\t                blur = $(\"feGaussianBlur\");\n\t            t.attrs.blur = size;\n\t            fltr.id = R.createUUID();\n\t            $(blur, {stdDeviation: +size || 1.5});\n\t            fltr.appendChild(blur);\n\t            t.paper.defs.appendChild(fltr);\n\t            t._blur = fltr;\n\t            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n\t        } else {\n\t            if (t._blur) {\n\t                t._blur.parentNode.removeChild(t._blur);\n\t                delete t._blur;\n\t                delete t.attrs.blur;\n\t            }\n\t            t.node.removeAttribute(\"filter\");\n\t        }\n\t        return t;\n\t    };\n\t    R._engine.circle = function (svg, x, y, r) {\n\t        var el = $(\"circle\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"circle\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.rect = function (svg, x, y, w, h, r) {\n\t        var el = $(\"rect\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"rect\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (svg, x, y, rx, ry) {\n\t        var el = $(\"ellipse\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"ellipse\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.image = function (svg, src, x, y, w, h) {\n\t        var el = $(\"image\");\n\t        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n\t        el.setAttributeNS(xlink, \"href\", src);\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n\t        res.type = \"image\";\n\t        return res;\n\t    };\n\t    R._engine.text = function (svg, x, y, text) {\n\t        var el = $(\"text\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {\n\t            x: x,\n\t            y: y,\n\t            \"text-anchor\": \"middle\",\n\t            text: text,\n\t            \"font-family\": R._availableAttrs[\"font-family\"],\n\t            \"font-size\": R._availableAttrs[\"font-size\"],\n\t            stroke: \"none\",\n\t            fill: \"#000\"\n\t        };\n\t        res.type = \"text\";\n\t        setFillAndStroke(res, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        this.width = width || this.width;\n\t        this.height = height || this.height;\n\t        this.canvas.setAttribute(\"width\", this.width);\n\t        this.canvas.setAttribute(\"height\", this.height);\n\t        if (this._viewBox) {\n\t            this.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con && con.container,\n\t            x = con.x,\n\t            y = con.y,\n\t            width = con.width,\n\t            height = con.height;\n\t        if (!container) {\n\t            throw new Error(\"SVG container not found.\");\n\t        }\n\t        var cnvs = $(\"svg\"),\n\t            css = \"overflow:hidden;\",\n\t            isFloating;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        $(cnvs, {\n\t            height: height,\n\t            version: 1.1,\n\t            width: width,\n\t            xmlns: \"http://www.w3.org/2000/svg\",\n\t            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\n\t        });\n\t        if (container == 1) {\n\t            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n\t            R._g.doc.body.appendChild(cnvs);\n\t            isFloating = 1;\n\t        } else {\n\t            cnvs.style.cssText = css + \"position:relative\";\n\t            if (container.firstChild) {\n\t                container.insertBefore(cnvs, container.firstChild);\n\t            } else {\n\t                container.appendChild(cnvs);\n\t            }\n\t        }\n\t        container = new R._Paper;\n\t        container.width = width;\n\t        container.height = height;\n\t        container.canvas = cnvs;\n\t        container.clear();\n\t        container._left = container._top = 0;\n\t        isFloating && (container.renderfix = function () {});\n\t        container.renderfix();\n\t        return container;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            size = mmax(w / paperSize.width, h / paperSize.height),\n\t            top = this.top,\n\t            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n\t            vb,\n\t            sw;\n\t        if (x == null) {\n\t            if (this._vbSize) {\n\t                size = 1;\n\t            }\n\t            delete this._vbSize;\n\t            vb = \"0 0 \" + this.width + S + this.height;\n\t        } else {\n\t            this._vbSize = size;\n\t            vb = x + S + y + S + w + S + h;\n\t        }\n\t        $(this.canvas, {\n\t            viewBox: vb,\n\t            preserveAspectRatio: aspectRatio\n\t        });\n\t        while (size && top) {\n\t            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n\t            top.attr({\"stroke-width\": sw});\n\t            top._.dirty = 1;\n\t            top._.dirtyT = 1;\n\t            top = top.prev;\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.renderfix\n\t     [ method ]\n\t     **\n\t     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\n\t     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n\t     * This method fixes the issue.\n\t     **\n\t       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n\t    \\*/\n\t    R.prototype.renderfix = function () {\n\t        var cnvs = this.canvas,\n\t            s = cnvs.style,\n\t            pos;\n\t        try {\n\t            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n\t        } catch (e) {\n\t            pos = cnvs.createSVGMatrix();\n\t        }\n\t        var left = -pos.e % 1,\n\t            top = -pos.f % 1;\n\t        if (left || top) {\n\t            if (left) {\n\t                this._left = (this._left + left) % 1;\n\t                s.left = this._left + \"px\";\n\t            }\n\t            if (top) {\n\t                this._top = (this._top + top) % 1;\n\t                s.top = this._top + \"px\";\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.clear\n\t     [ method ]\n\t     **\n\t     * Clears the paper, i.e. removes all the elements.\n\t    \\*/\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        var c = this.canvas;\n\t        while (c.firstChild) {\n\t            c.removeChild(c.firstChild);\n\t        }\n\t        this.bottom = this.top = null;\n\t        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n\t        c.appendChild(this.desc);\n\t        c.appendChild(this.defs = $(\"defs\"));\n\t    };\n\t    /*\\\n\t     * Paper.remove\n\t     [ method ]\n\t     **\n\t     * Removes the paper from the DOM.\n\t    \\*/\n\t    R.prototype.remove = function () {\n\t        eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t    };\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.vml) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        round = math.round,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        fillString = \"fill\",\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        ms = \" progid:DXImageTransform.Microsoft\",\n\t        S = \" \",\n\t        E = \"\",\n\t        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n\t        bites = /([clmz]),?([^clmz]*)/gi,\n\t        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n\t        val = /-?[^,\\s-]+/g,\n\t        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\n\t        zoom = 21600,\n\t        pathTypes = {path: 1, rect: 1, image: 1},\n\t        ovalTypes = {circle: 1, ellipse: 1},\n\t        path2vml = function (path) {\n\t            var total =  /[ahqstv]/ig,\n\t                command = R._pathToAbsolute;\n\t            Str(path).match(total) && (command = R._path2curve);\n\t            total = /[clmz]/g;\n\t            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n\t                var res = Str(path).replace(bites, function (all, command, args) {\n\t                    var vals = [],\n\t                        isMove = command.toLowerCase() == \"m\",\n\t                        res = map[command];\n\t                    args.replace(val, function (value) {\n\t                        if (isMove && vals.length == 2) {\n\t                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n\t                            vals = [];\n\t                        }\n\t                        vals.push(round(value * zoom));\n\t                    });\n\t                    return res + vals;\n\t                });\n\t                return res;\n\t            }\n\t            var pa = command(path), p, r;\n\t            res = [];\n\t            for (var i = 0, ii = pa.length; i < ii; i++) {\n\t                p = pa[i];\n\t                r = pa[i][0].toLowerCase();\n\t                r == \"z\" && (r = \"x\");\n\t                for (var j = 1, jj = p.length; j < jj; j++) {\n\t                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n\t                }\n\t                res.push(r);\n\t            }\n\t            return res.join(S);\n\t        },\n\t        compensation = function (deg, dx, dy) {\n\t            var m = R.matrix();\n\t            m.rotate(-deg, .5, .5);\n\t            return {\n\t                dx: m.x(dx, dy),\n\t                dy: m.y(dx, dy)\n\t            };\n\t        },\n\t        setCoords = function (p, sx, sy, dx, dy, deg) {\n\t            var _ = p._,\n\t                m = p.matrix,\n\t                fillpos = _.fillpos,\n\t                o = p.node,\n\t                s = o.style,\n\t                y = 1,\n\t                flip = \"\",\n\t                dxdy,\n\t                kx = zoom / sx,\n\t                ky = zoom / sy;\n\t            s.visibility = \"hidden\";\n\t            if (!sx || !sy) {\n\t                return;\n\t            }\n\t            o.coordsize = abs(kx) + S + abs(ky);\n\t            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n\t            if (deg) {\n\t                var c = compensation(deg, dx, dy);\n\t                dx = c.dx;\n\t                dy = c.dy;\n\t            }\n\t            sx < 0 && (flip += \"x\");\n\t            sy < 0 && (flip += \" y\") && (y = -1);\n\t            s.flip = flip;\n\t            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n\t            if (fillpos || _.fillsize) {\n\t                var fill = o.getElementsByTagName(fillString);\n\t                fill = fill && fill[0];\n\t                o.removeChild(fill);\n\t                if (fillpos) {\n\t                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n\t                    fill.position = c.dx * y + S + c.dy * y;\n\t                }\n\t                if (_.fillsize) {\n\t                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n\t                }\n\t                o.appendChild(fill);\n\t            }\n\t            s.visibility = \"visible\";\n\t        };\n\t    R.toString = function () {\n\t        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var addArrow = function (o, value, isEnd) {\n\t        var values = Str(value).toLowerCase().split(\"-\"),\n\t            se = isEnd ? \"end\" : \"start\",\n\t            i = values.length,\n\t            type = \"classic\",\n\t            w = \"medium\",\n\t            h = \"medium\";\n\t        while (i--) {\n\t            switch (values[i]) {\n\t                case \"block\":\n\t                case \"classic\":\n\t                case \"oval\":\n\t                case \"diamond\":\n\t                case \"open\":\n\t                case \"none\":\n\t                    type = values[i];\n\t                    break;\n\t                case \"wide\":\n\t                case \"narrow\": h = values[i]; break;\n\t                case \"long\":\n\t                case \"short\": w = values[i]; break;\n\t            }\n\t        }\n\t        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n\t        stroke[se + \"arrow\"] = type;\n\t        stroke[se + \"arrowlength\"] = w;\n\t        stroke[se + \"arrowwidth\"] = h;\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        // o.paper.canvas.style.display = \"none\";\n\t        o.attrs = o.attrs || {};\n\t        var node = o.node,\n\t            a = o.attrs,\n\t            s = node.style,\n\t            xy,\n\t            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n\t            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n\t            res = o;\n\n\n\t        for (var par in params) if (params[has](par)) {\n\t            a[par] = params[par];\n\t        }\n\t        if (newpath) {\n\t            a.path = R._getPath[o.type](o);\n\t            o._.dirty = 1;\n\t        }\n\t        params.href && (node.href = params.href);\n\t        params.title && (node.title = params.title);\n\t        params.target && (node.target = params.target);\n\t        params.cursor && (s.cursor = params.cursor);\n\t        \"blur\" in params && o.blur(params.blur);\n\t        if (params.path && o.type == \"path\" || newpath) {\n\t            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n\t            o._.dirty = 1;\n\t            if (o.type == \"image\") {\n\t                o._.fillpos = [a.x, a.y];\n\t                o._.fillsize = [a.width, a.height];\n\t                setCoords(o, 1, 1, 0, 0, 0);\n\t            }\n\t        }\n\t        \"transform\" in params && o.transform(params.transform);\n\t        if (isOval) {\n\t            var cx = +a.cx,\n\t                cy = +a.cy,\n\t                rx = +a.rx || +a.r || 0,\n\t                ry = +a.ry || +a.r || 0;\n\t            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n\t            o._.dirty = 1;\n\t        }\n\t        if (\"clip-rect\" in params) {\n\t            var rect = Str(params[\"clip-rect\"]).split(separator);\n\t            if (rect.length == 4) {\n\t                rect[2] = +rect[2] + (+rect[0]);\n\t                rect[3] = +rect[3] + (+rect[1]);\n\t                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n\t                    dstyle = div.style;\n\t                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n\t                if (!node.clipRect) {\n\t                    dstyle.position = \"absolute\";\n\t                    dstyle.top = 0;\n\t                    dstyle.left = 0;\n\t                    dstyle.width = o.paper.width + \"px\";\n\t                    dstyle.height = o.paper.height + \"px\";\n\t                    node.parentNode.insertBefore(div, node);\n\t                    div.appendChild(node);\n\t                    node.clipRect = div;\n\t                }\n\t            }\n\t            if (!params[\"clip-rect\"]) {\n\t                node.clipRect && (node.clipRect.style.clip = \"auto\");\n\t            }\n\t        }\n\t        if (o.textpath) {\n\t            var textpathStyle = o.textpath.style;\n\t            params.font && (textpathStyle.font = params.font);\n\t            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n\t            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n\t            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n\t            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n\t        }\n\t        if (\"arrow-start\" in params) {\n\t            addArrow(res, params[\"arrow-start\"]);\n\t        }\n\t        if (\"arrow-end\" in params) {\n\t            addArrow(res, params[\"arrow-end\"], 1);\n\t        }\n\t        if (params.opacity != null ||\n\t            params.fill != null ||\n\t            params.src != null ||\n\t            params.stroke != null ||\n\t            params[\"stroke-width\"] != null ||\n\t            params[\"stroke-opacity\"] != null ||\n\t            params[\"fill-opacity\"] != null ||\n\t            params[\"stroke-dasharray\"] != null ||\n\t            params[\"stroke-miterlimit\"] != null ||\n\t            params[\"stroke-linejoin\"] != null ||\n\t            params[\"stroke-linecap\"] != null) {\n\t            var fill = node.getElementsByTagName(fillString),\n\t                newfill = false;\n\t            fill = fill && fill[0];\n\t            !fill && (newfill = fill = createNode(fillString));\n\t            if (o.type == \"image\" && params.src) {\n\t                fill.src = params.src;\n\t            }\n\t            params.fill && (fill.on = true);\n\t            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n\t                fill.on = false;\n\t            }\n\t            if (fill.on && params.fill) {\n\t                var isURL = Str(params.fill).match(R._ISURL);\n\t                if (isURL) {\n\t                    fill.parentNode == node && node.removeChild(fill);\n\t                    fill.rotate = true;\n\t                    fill.src = isURL[1];\n\t                    fill.type = \"tile\";\n\t                    var bbox = o.getBBox(1);\n\t                    fill.position = bbox.x + S + bbox.y;\n\t                    o._.fillpos = [bbox.x, bbox.y];\n\n\t                    R._preload(isURL[1], function () {\n\t                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n\t                    });\n\t                } else {\n\t                    fill.color = R.getRGB(params.fill).hex;\n\t                    fill.src = E;\n\t                    fill.type = \"solid\";\n\t                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n\t                        a.fill = \"none\";\n\t                        a.gradient = params.fill;\n\t                        fill.rotate = false;\n\t                    }\n\t                }\n\t            }\n\t            if (\"fill-opacity\" in params || \"opacity\" in params) {\n\t                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n\t                opacity = mmin(mmax(opacity, 0), 1);\n\t                fill.opacity = opacity;\n\t                if (fill.src) {\n\t                    fill.color = \"none\";\n\t                }\n\t            }\n\t            node.appendChild(fill);\n\t            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n\t            newstroke = false;\n\t            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n\t            if ((params.stroke && params.stroke != \"none\") ||\n\t                params[\"stroke-width\"] ||\n\t                params[\"stroke-opacity\"] != null ||\n\t                params[\"stroke-dasharray\"] ||\n\t                params[\"stroke-miterlimit\"] ||\n\t                params[\"stroke-linejoin\"] ||\n\t                params[\"stroke-linecap\"]) {\n\t                stroke.on = true;\n\t            }\n\t            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n\t            var strokeColor = R.getRGB(params.stroke);\n\t            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n\t            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n\t            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n\t            opacity = mmin(mmax(opacity, 0), 1);\n\t            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n\t            params[\"stroke-width\"] && (stroke.weight = width);\n\t            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n\t            stroke.opacity = opacity;\n\n\t            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n\t            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n\t            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n\t            if (\"stroke-dasharray\" in params) {\n\t                var dasharray = {\n\t                    \"-\": \"shortdash\",\n\t                    \".\": \"shortdot\",\n\t                    \"-.\": \"shortdashdot\",\n\t                    \"-..\": \"shortdashdotdot\",\n\t                    \". \": \"dot\",\n\t                    \"- \": \"dash\",\n\t                    \"--\": \"longdash\",\n\t                    \"- .\": \"dashdot\",\n\t                    \"--.\": \"longdashdot\",\n\t                    \"--..\": \"longdashdotdot\"\n\t                };\n\t                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n\t            }\n\t            newstroke && node.appendChild(stroke);\n\t        }\n\t        if (res.type == \"text\") {\n\t            res.paper.canvas.style.display = E;\n\t            var span = res.paper.span,\n\t                m = 100,\n\t                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n\t            s = span.style;\n\t            a.font && (s.font = a.font);\n\t            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n\t            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n\t            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n\t            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n\t            s.fontSize = fontSize * m + \"px\";\n\t            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n\t            var brect = span.getBoundingClientRect();\n\t            res.W = a.w = (brect.right - brect.left) / m;\n\t            res.H = a.h = (brect.bottom - brect.top) / m;\n\t            // res.paper.canvas.style.display = \"none\";\n\t            res.X = a.x;\n\t            res.Y = a.y + res.H / 2;\n\n\t            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n\t            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n\t            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n\t                res._.dirty = 1;\n\t                break;\n\t            }\n\n\t            // text-anchor emulation\n\t            switch (a[\"text-anchor\"]) {\n\t                case \"start\":\n\t                    res.textpath.style[\"v-text-align\"] = \"left\";\n\t                    res.bbx = res.W / 2;\n\t                break;\n\t                case \"end\":\n\t                    res.textpath.style[\"v-text-align\"] = \"right\";\n\t                    res.bbx = -res.W / 2;\n\t                break;\n\t                default:\n\t                    res.textpath.style[\"v-text-align\"] = \"center\";\n\t                    res.bbx = 0;\n\t                break;\n\t            }\n\t            res.textpath.style[\"v-text-kern\"] = true;\n\t        }\n\t        // res.paper.canvas.style.display = E;\n\t    },\n\t    addGradientFill = function (o, gradient, fill) {\n\t        o.attrs = o.attrs || {};\n\t        var attrs = o.attrs,\n\t            pow = Math.pow,\n\t            opacity,\n\t            oindex,\n\t            type = \"linear\",\n\t            fxfy = \".5 .5\";\n\t        o.attrs.gradient = gradient;\n\t        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n\t            type = \"radial\";\n\t            if (fx && fy) {\n\t                fx = toFloat(fx);\n\t                fy = toFloat(fy);\n\t                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n\t                fxfy = fx + S + fy;\n\t            }\n\t            return E;\n\t        });\n\t        gradient = gradient.split(/\\s*\\-\\s*/);\n\t        if (type == \"linear\") {\n\t            var angle = gradient.shift();\n\t            angle = -toFloat(angle);\n\t            if (isNaN(angle)) {\n\t                return null;\n\t            }\n\t        }\n\t        var dots = R._parseDots(gradient);\n\t        if (!dots) {\n\t            return null;\n\t        }\n\t        o = o.shape || o.node;\n\t        if (dots.length) {\n\t            o.removeChild(fill);\n\t            fill.on = true;\n\t            fill.method = \"none\";\n\t            fill.color = dots[0].color;\n\t            fill.color2 = dots[dots.length - 1].color;\n\t            var clrs = [];\n\t            for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n\t            }\n\t            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n\t            if (type == \"radial\") {\n\t                fill.type = \"gradientTitle\";\n\t                fill.focus = \"100%\";\n\t                fill.focussize = \"0 0\";\n\t                fill.focusposition = fxfy;\n\t                fill.angle = 0;\n\t            } else {\n\t                // fill.rotate= true;\n\t                fill.type = \"gradient\";\n\t                fill.angle = (270 - angle) % 360;\n\t            }\n\t            o.appendChild(fill);\n\t        }\n\t        return 1;\n\t    },\n\t    Element = function (node, vml) {\n\t        this[0] = this.node = node;\n\t        node.raphael = true;\n\t        this.id = R._oid++;\n\t        node.raphaelid = this.id;\n\t        this.X = 0;\n\t        this.Y = 0;\n\t        this.attrs = {};\n\t        this.paper = vml;\n\t        this.matrix = R.matrix();\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            dx: 0,\n\t            dy: 0,\n\t            deg: 0,\n\t            dirty: 1,\n\t            dirtyT: 1\n\t        };\n\t        !vml.bottom && (vml.bottom = this);\n\t        this.prev = vml.top;\n\t        vml.top && (vml.top.next = this);\n\t        vml.top = this;\n\t        this.next = null;\n\t    };\n\t    var elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\t    elproto.transform = function (tstr) {\n\t        if (tstr == null) {\n\t            return this._.transform;\n\t        }\n\t        var vbs = this.paper._viewBoxShift,\n\t            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n\t            oldt;\n\t        if (vbs) {\n\t            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n\t        }\n\t        R._extractTransform(this, vbt + tstr);\n\t        var matrix = this.matrix.clone(),\n\t            skew = this.skew,\n\t            o = this.node,\n\t            split,\n\t            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n\t            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n\t        matrix.translate(1, 1);\n\t        if (isPatt || isGrad || this.type == \"image\") {\n\t            skew.matrix = \"1 0 0 1\";\n\t            skew.offset = \"0 0\";\n\t            split = matrix.split();\n\t            if ((isGrad && split.noRotation) || !split.isSimple) {\n\t                o.style.filter = matrix.toFilter();\n\t                var bb = this.getBBox(),\n\t                    bbt = this.getBBox(1),\n\t                    dx = bb.x - bbt.x,\n\t                    dy = bb.y - bbt.y;\n\t                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n\t                setCoords(this, 1, 1, dx, dy, 0);\n\t            } else {\n\t                o.style.filter = E;\n\t                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n\t            }\n\t        } else {\n\t            o.style.filter = E;\n\t            skew.matrix = Str(matrix);\n\t            skew.offset = matrix.offset();\n\t        }\n\t        if (oldt !== null) { // empty string value is true as well\n\t            this._.transform = oldt;\n\t            R._extractTransform(this, oldt);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (deg == null) {\n\t            return;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this._.dirtyT = 1;\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        if (this._.bbox) {\n\t            this._.bbox.x += dx;\n\t            this._.bbox.y += dy;\n\t        }\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t            isNaN(cx) && (cx = null);\n\t            isNaN(cy) && (cy = null);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        this._.dirtyT = 1;\n\t        return this;\n\t    };\n\t    elproto.hide = function () {\n\t        !this.removed && (this.node.style.display = \"none\");\n\t        return this;\n\t    };\n\t    elproto.show = function () {\n\t        !this.removed && (this.node.style.display = E);\n\t        return this;\n\t    };\n\t    // Needed to fix the vml setViewBox issues\n\t    elproto.auxGetBBox = R.el.getBBox;\n\t    elproto.getBBox = function(){\n\t      var b = this.auxGetBBox();\n\t      if (this.paper && this.paper._viewBoxShift)\n\t      {\n\t        var c = {};\n\t        var z = 1/this.paper._viewBoxShift.scale;\n\t        c.x = b.x - this.paper._viewBoxShift.dx;\n\t        c.x *= z;\n\t        c.y = b.y - this.paper._viewBoxShift.dy;\n\t        c.y *= z;\n\t        c.width  = b.width  * z;\n\t        c.height = b.height * z;\n\t        c.x2 = c.x + c.width;\n\t        c.y2 = c.y + c.height;\n\t        return c;\n\t      }\n\t      return b;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        return {\n\t            x: this.X + (this.bbx || 0) - this.W / 2,\n\t            y: this.Y - this.H,\n\t            width: this.W,\n\t            height: this.H\n\t        };\n\t    };\n\t    elproto.remove = function () {\n\t        if (this.removed || !this.node.parentNode) {\n\t            return;\n\t        }\n\t        this.paper.__set__ && this.paper.__set__.exclude(this);\n\t        R.eve.unbind(\"raphael.*.*.\" + this.id);\n\t        R._tear(this, this.paper);\n\t        this.node.parentNode.removeChild(this.node);\n\t        this.shape && this.shape.parentNode.removeChild(this.shape);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (this.attrs && value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        var params;\n\t        if (value != null) {\n\t            params = {};\n\t            params[name] = value;\n\t        }\n\t        value == null && R.is(name, \"object\") && (params = name);\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        if (params) {\n\t            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t                this.attrs[key] = params[key];\n\t                for (var subkey in par) if (par[has](subkey)) {\n\t                    params[subkey] = par[subkey];\n\t                }\n\t            }\n\t            // this.paper.canvas.style.display = \"none\";\n\t            if (params.text && this.type == \"text\") {\n\t                this.textpath.string = params.text;\n\t            }\n\t            setFillAndStroke(this, params);\n\t            // this.paper.canvas.style.display = E;\n\t        }\n\t        return this;\n\t    };\n\t    elproto.toFront = function () {\n\t        !this.removed && this.node.parentNode.appendChild(this.node);\n\t        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n\t        return this;\n\t    };\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (this.node.parentNode.firstChild != this.node) {\n\t            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n\t            R._toback(this, this.paper);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[element.length - 1];\n\t        }\n\t        if (element.node.nextSibling) {\n\t            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n\t        } else {\n\t            element.node.parentNode.appendChild(this.node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[0];\n\t        }\n\t        element.node.parentNode.insertBefore(this.node, element.node);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        var s = this.node.runtimeStyle,\n\t            f = s.filter;\n\t        f = f.replace(blurregexp, E);\n\t        if (+size !== 0) {\n\t            this.attrs.blur = size;\n\t            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n\t            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n\t        } else {\n\t            s.filter = f;\n\t            s.margin = 0;\n\t            delete this.attrs.blur;\n\t        }\n\t        return this;\n\t    };\n\n\t    R._engine.path = function (pathString, vml) {\n\t        var el = createNode(\"shape\");\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = vml.coordorigin;\n\t        var p = new Element(el, vml),\n\t            attr = {fill: \"none\", stroke: \"#000\"};\n\t        pathString && (attr.path = pathString);\n\t        p.type = \"path\";\n\t        p.path = [];\n\t        p.Path = E;\n\t        setFillAndStroke(p, attr);\n\t        vml.canvas && vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.rect = function (vml, x, y, w, h, r) {\n\t        var path = R._rectPath(x, y, w, h, r),\n\t            res = vml.path(path),\n\t            a = res.attrs;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.r = r;\n\t        a.path = path;\n\t        res.type = \"rect\";\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (vml, x, y, rx, ry) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - rx;\n\t        res.Y = y - ry;\n\t        res.W = rx * 2;\n\t        res.H = ry * 2;\n\t        res.type = \"ellipse\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            rx: rx,\n\t            ry: ry\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.circle = function (vml, x, y, r) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - r;\n\t        res.Y = y - r;\n\t        res.W = res.H = r * 2;\n\t        res.type = \"circle\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            r: r\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.image = function (vml, src, x, y, w, h) {\n\t        var path = R._rectPath(x, y, w, h),\n\t            res = vml.path(path).attr({stroke: \"none\"}),\n\t            a = res.attrs,\n\t            node = res.node,\n\t            fill = node.getElementsByTagName(fillString)[0];\n\t        a.src = src;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.path = path;\n\t        res.type = \"image\";\n\t        fill.parentNode == node && node.removeChild(fill);\n\t        fill.rotate = true;\n\t        fill.src = src;\n\t        fill.type = \"tile\";\n\t        res._.fillpos = [x, y];\n\t        res._.fillsize = [w, h];\n\t        node.appendChild(fill);\n\t        setCoords(res, 1, 1, 0, 0, 0);\n\t        return res;\n\t    };\n\t    R._engine.text = function (vml, x, y, text) {\n\t        var el = createNode(\"shape\"),\n\t            path = createNode(\"path\"),\n\t            o = createNode(\"textpath\");\n\t        x = x || 0;\n\t        y = y || 0;\n\t        text = text || \"\";\n\t        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n\t        path.textpathok = true;\n\t        o.string = Str(text);\n\t        o.on = true;\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = \"0 0\";\n\t        var p = new Element(el, vml),\n\t            attr = {\n\t                fill: \"#000\",\n\t                stroke: \"none\",\n\t                font: R._availableAttrs.font,\n\t                text: text\n\t            };\n\t        p.shape = el;\n\t        p.path = path;\n\t        p.textpath = o;\n\t        p.type = \"text\";\n\t        p.attrs.text = Str(text);\n\t        p.attrs.x = x;\n\t        p.attrs.y = y;\n\t        p.attrs.w = 1;\n\t        p.attrs.h = 1;\n\t        setFillAndStroke(p, attr);\n\t        el.appendChild(o);\n\t        el.appendChild(path);\n\t        vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        var cs = this.canvas.style;\n\t        this.width = width;\n\t        this.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        cs.width = width;\n\t        cs.height = height;\n\t        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n\t        if (this._viewBox) {\n\t            R._engine.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            width = paperSize.width,\n\t            height = paperSize.height,\n\t            H, W;\n\t        if (fit) {\n\t            H = height / h;\n\t            W = width / w;\n\t            if (w * H < width) {\n\t                x -= (width - w * H) / 2 / H;\n\t            }\n\t            if (h * W < height) {\n\t                y -= (height - h * W) / 2 / W;\n\t            }\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        this._viewBoxShift = {\n\t            dx: -x,\n\t            dy: -y,\n\t            scale: paperSize\n\t        };\n\t        this.forEach(function (el) {\n\t            el.transform(\"...\");\n\t        });\n\t        return this;\n\t    };\n\t    var createNode;\n\t    R._engine.initWin = function (win) {\n\t            var doc = win.document;\n\t            if (doc.styleSheets.length < 31) {\n\t                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            } else {\n\t                // no more room, add to the existing one\n\t                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n\t                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            }\n\t            try {\n\t                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n\t                };\n\t            } catch (e) {\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n\t                };\n\t            }\n\t        };\n\t    R._engine.initWin(R._g.win);\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con.container,\n\t            height = con.height,\n\t            s,\n\t            width = con.width,\n\t            x = con.x,\n\t            y = con.y;\n\t        if (!container) {\n\t            throw new Error(\"VML container not found.\");\n\t        }\n\t        var res = new R._Paper,\n\t            c = res.canvas = R._g.doc.createElement(\"div\"),\n\t            cs = c.style;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        res.width = width;\n\t        res.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n\t        res.coordorigin = \"0 0\";\n\t        res.span = R._g.doc.createElement(\"span\");\n\t        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n\t        c.appendChild(res.span);\n\t        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n\t        if (container == 1) {\n\t            R._g.doc.body.appendChild(c);\n\t            cs.left = x + \"px\";\n\t            cs.top = y + \"px\";\n\t            cs.position = \"absolute\";\n\t        } else {\n\t            if (container.firstChild) {\n\t                container.insertBefore(c, container.firstChild);\n\t            } else {\n\t                container.appendChild(c);\n\t            }\n\t        }\n\t        res.renderfix = function () {};\n\t        return res;\n\t    };\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        this.canvas.innerHTML = E;\n\t        this.span = R._g.doc.createElement(\"span\");\n\t        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n\t        this.canvas.appendChild(this.span);\n\t        this.bottom = this.top = null;\n\t    };\n\t    R.prototype.remove = function () {\n\t        R.eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        return true;\n\t    };\n\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n;","import Mousetrap from 'mousetrap';\nimport ShortcutsNavigation from './shortcuts_navigation';\n\nexport default class ShortcutsNetwork extends ShortcutsNavigation {\n  constructor(graph) {\n    super();\n\n    Mousetrap.bind(['left', 'h'], graph.scrollLeft);\n    Mousetrap.bind(['right', 'l'], graph.scrollRight);\n    Mousetrap.bind(['up', 'k'], graph.scrollUp);\n    Mousetrap.bind(['down', 'j'], graph.scrollDown);\n    Mousetrap.bind(['shift+up', 'shift+k'], graph.scrollTop);\n    Mousetrap.bind(['shift+down', 'shift+j'], graph.scrollBottom);\n\n    this.enabledHelp.push('.hidden-shortcut.network');\n  }\n}\n","import Raphael from 'raphael/raphael';\n\nRaphael.prototype.commitTooltip = function commitTooltip(x, y, commit) {\n  const boxWidth = 300;\n  const icon = this.image(gon.relative_url_root + commit.author.icon, x, y, 20, 20);\n  const nameText = this.text(x + 25, y + 10, commit.author.name);\n  const idText = this.text(x, y + 35, commit.id);\n  const messageText = this.text(x, y + 50, commit.message.replace(/\\r?\\n/g, ' \\n '));\n  const textSet = this.set(icon, nameText, idText, messageText).attr({\n    'text-anchor': 'start',\n    font: '12px Monaco, monospace',\n  });\n  nameText.attr({\n    font: '14px Arial',\n    'font-weight': 'bold',\n  });\n  idText.attr({\n    fill: '#AAA',\n  });\n  messageText.node.style['white-space'] = 'pre';\n  this.textWrap(messageText, boxWidth - 50);\n  const rect = this.rect(x - 10, y - 10, boxWidth, 100, 4).attr({\n    fill: '#FFF',\n    stroke: '#000',\n    'stroke-linecap': 'round',\n    'stroke-width': 2,\n  });\n  const tooltip = this.set(rect, textSet);\n  rect.attr({\n    height: tooltip.getBBox().height + 10,\n    width: tooltip.getBBox().width + 10,\n  });\n  tooltip.transform(['t', 20, 20]);\n  return tooltip;\n};\n\nRaphael.prototype.textWrap = function testWrap(t, width) {\n  const content = t.attr('text');\n  const abc = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  t.attr({\n    text: abc,\n  });\n  const letterWidth = t.getBBox().width / abc.length;\n  t.attr({\n    text: content,\n  });\n  const words = content.split(' ');\n  let x = 0;\n  const s = [];\n  for (let j = 0, len = words.length; j < len; j += 1) {\n    const word = words[j];\n    if (x + (word.length * letterWidth) > width) {\n      s.push('\\n');\n      x = 0;\n    }\n    if (word === '\\n') {\n      s.push('\\n');\n      x = 0;\n    } else {\n      s.push(`${word} `);\n      x += word.length * letterWidth;\n    }\n  }\n  t.attr({\n    text: s.join('').trim(),\n  });\n  const b = t.getBBox();\n  const h = Math.abs(b.y2) + 1;\n  return t.attr({\n    y: h,\n  });\n};\n\nexport default Raphael;\n","/* eslint-disable func-names, no-var, wrap-iife, quotes, comma-dangle, one-var, one-var-declaration-per-line, no-loop-func, no-floating-decimal, consistent-return, no-unused-vars, prefer-template, prefer-arrow-callback, camelcase, max-len */\n\nimport $ from 'jquery';\nimport { __ } from '../locale';\nimport axios from '../lib/utils/axios_utils';\nimport flash from '../flash';\nimport Raphael from './raphael';\n\nexport default (function() {\n  function BranchGraph(element1, options1) {\n    this.element = element1;\n    this.options = options1;\n    this.scrollTop = this.scrollTop.bind(this);\n    this.scrollBottom = this.scrollBottom.bind(this);\n    this.scrollRight = this.scrollRight.bind(this);\n    this.scrollLeft = this.scrollLeft.bind(this);\n    this.scrollUp = this.scrollUp.bind(this);\n    this.scrollDown = this.scrollDown.bind(this);\n    this.preparedCommits = {};\n    this.mtime = 0;\n    this.mspace = 0;\n    this.parents = {};\n    this.colors = [\"#000\"];\n    this.offsetX = 150;\n    this.offsetY = 20;\n    this.unitTime = 30;\n    this.unitSpace = 10;\n    this.prev_start = -1;\n    this.load();\n  }\n\n  BranchGraph.prototype.load = function() {\n    axios.get(this.options.url)\n      .then(({ data }) => {\n        $(\".loading\", this.element).hide();\n        this.prepareData(data.days, data.commits);\n        this.buildGraph();\n      })\n      .catch(() => __('Error fetching network graph.'));\n  };\n\n  BranchGraph.prototype.prepareData = function(days, commits) {\n    var c, ch, cw, j, len, ref;\n    this.days = days;\n    this.commits = commits;\n    this.collectParents();\n    this.graphHeight = $(this.element).height();\n    this.graphWidth = $(this.element).width();\n    ch = Math.max(this.graphHeight, this.offsetY + this.unitTime * this.mtime + 150);\n    cw = Math.max(this.graphWidth, this.offsetX + this.unitSpace * this.mspace + 300);\n    this.r = Raphael(this.element.get(0), cw, ch);\n    this.top = this.r.set();\n    this.barHeight = Math.max(this.graphHeight, this.unitTime * this.days.length + 320);\n    ref = this.commits;\n    for (j = 0, len = ref.length; j < len; j += 1) {\n      c = ref[j];\n      if (c.id in this.parents) {\n        c.isParent = true;\n      }\n      this.preparedCommits[c.id] = c;\n      this.markCommit(c);\n    }\n    return this.collectColors();\n  };\n\n  BranchGraph.prototype.collectParents = function() {\n    var c, j, len, p, ref, results;\n    ref = this.commits;\n    results = [];\n    for (j = 0, len = ref.length; j < len; j += 1) {\n      c = ref[j];\n      this.mtime = Math.max(this.mtime, c.time);\n      this.mspace = Math.max(this.mspace, c.space);\n      results.push((function() {\n        var l, len1, ref1, results1;\n        ref1 = c.parents;\n        results1 = [];\n        for (l = 0, len1 = ref1.length; l < len1; l += 1) {\n          p = ref1[l];\n          this.parents[p[0]] = true;\n          results1.push(this.mspace = Math.max(this.mspace, p[1]));\n        }\n        return results1;\n      }).call(this));\n    }\n    return results;\n  };\n\n  BranchGraph.prototype.collectColors = function() {\n    var k, results;\n    k = 0;\n    results = [];\n    while (k < this.mspace) {\n      this.colors.push(Raphael.getColor(.8));\n      // Skipping a few colors in the spectrum to get more contrast between colors\n      Raphael.getColor();\n      Raphael.getColor();\n      results.push(k += 1);\n    }\n    return results;\n  };\n\n  BranchGraph.prototype.buildGraph = function() {\n    var cuday, cumonth, day, j, len, mm, ref;\n    const { r } = this;\n    cuday = 0;\n    cumonth = \"\";\n    r.rect(0, 0, 40, this.barHeight).attr({\n      fill: \"#222\"\n    });\n    r.rect(40, 0, 30, this.barHeight).attr({\n      fill: \"#444\"\n    });\n    ref = this.days;\n\n    for (mm = 0, len = ref.length; mm < len; mm += 1) {\n      day = ref[mm];\n      if (cuday !== day[0] || cumonth !== day[1]) {\n        // Dates\n        r.text(55, this.offsetY + this.unitTime * mm, day[0]).attr({\n          font: \"12px Monaco, monospace\",\n          fill: \"#BBB\"\n        });\n        [cuday] = day;\n      }\n      if (cumonth !== day[1]) {\n        // Months\n        r.text(20, this.offsetY + this.unitTime * mm, day[1]).attr({\n          font: \"12px Monaco, monospace\",\n          fill: \"#EEE\"\n        });\n\n        // eslint-disable-next-line prefer-destructuring\n        cumonth = day[1];\n      }\n    }\n    this.renderPartialGraph();\n    return this.bindEvents();\n  };\n\n  BranchGraph.prototype.renderPartialGraph = function() {\n    var commit, end, i, isGraphEdge, start, x, y;\n    start = Math.floor((this.element.scrollTop() - this.offsetY) / this.unitTime) - 10;\n    if (start < 0) {\n      isGraphEdge = true;\n      start = 0;\n    }\n    end = start + 40;\n    if (this.commits.length < end) {\n      isGraphEdge = true;\n      end = this.commits.length;\n    }\n    if (this.prev_start === -1 || Math.abs(this.prev_start - start) > 10 || isGraphEdge) {\n      i = start;\n      this.prev_start = start;\n      while (i < end) {\n        commit = this.commits[i];\n        i += 1;\n        if (commit.hasDrawn !== true) {\n          x = this.offsetX + this.unitSpace * (this.mspace - commit.space);\n          y = this.offsetY + this.unitTime * commit.time;\n          this.drawDot(x, y, commit);\n          this.drawLines(x, y, commit);\n          this.appendLabel(x, y, commit);\n          this.appendAnchor(x, y, commit);\n          commit.hasDrawn = true;\n        }\n      }\n      return this.top.toFront();\n    }\n  };\n\n  BranchGraph.prototype.bindEvents = function() {\n    const { element } = this;\n\n    return $(element).scroll((function(_this) {\n      return function(event) {\n        return _this.renderPartialGraph();\n      };\n    })(this));\n  };\n\n  BranchGraph.prototype.scrollDown = function() {\n    this.element.scrollTop(this.element.scrollTop() + 50);\n    return this.renderPartialGraph();\n  };\n\n  BranchGraph.prototype.scrollUp = function() {\n    this.element.scrollTop(this.element.scrollTop() - 50);\n    return this.renderPartialGraph();\n  };\n\n  BranchGraph.prototype.scrollLeft = function() {\n    this.element.scrollLeft(this.element.scrollLeft() - 50);\n    return this.renderPartialGraph();\n  };\n\n  BranchGraph.prototype.scrollRight = function() {\n    this.element.scrollLeft(this.element.scrollLeft() + 50);\n    return this.renderPartialGraph();\n  };\n\n  BranchGraph.prototype.scrollBottom = function() {\n    return this.element.scrollTop(this.element.find('svg').height());\n  };\n\n  BranchGraph.prototype.scrollTop = function() {\n    return this.element.scrollTop(0);\n  };\n\n  BranchGraph.prototype.appendLabel = function(x, y, commit) {\n    var label, rect, shortrefs, text, textbox, triangle;\n\n    if (!commit.refs) {\n      return;\n    }\n\n    const { r } = this;\n    shortrefs = commit.refs;\n    // Truncate if longer than 15 chars\n    if (shortrefs.length > 17) {\n      shortrefs = shortrefs.substr(0, 15) + \"…\";\n    }\n    text = r.text(x + 4, y, shortrefs).attr({\n      \"text-anchor\": \"start\",\n      font: \"10px Monaco, monospace\",\n      fill: \"#FFF\",\n      title: commit.refs\n    });\n    textbox = text.getBBox();\n    // Create rectangle based on the size of the textbox\n    rect = r.rect(x, y - 7, textbox.width + 5, textbox.height + 5, 4).attr({\n      fill: \"#000\",\n      \"fill-opacity\": .5,\n      stroke: \"none\"\n    });\n    triangle = r.path([\"M\", x - 5, y, \"L\", x - 15, y - 4, \"L\", x - 15, y + 4, \"Z\"]).attr({\n      fill: \"#000\",\n      \"fill-opacity\": .5,\n      stroke: \"none\"\n    });\n    label = r.set(rect, text);\n    label.transform([\"t\", -rect.getBBox().width - 15, 0]);\n    // Set text to front\n    return text.toFront();\n  };\n\n  BranchGraph.prototype.appendAnchor = function(x, y, commit) {\n    const { r, top, options } = this;\n    const anchor = r.circle(x, y, 10).attr({\n      fill: \"#000\",\n      opacity: 0,\n      cursor: \"pointer\"\n    }).click(function() {\n      return window.open(options.commit_url.replace(\"%s\", commit.id), \"_blank\");\n    }).hover(function() {\n      this.tooltip = r.commitTooltip(x + 5, y, commit);\n      return top.push(this.tooltip.insertBefore(this));\n    }, function() {\n      return this.tooltip && this.tooltip.remove() && delete this.tooltip;\n    });\n    return top.push(anchor);\n  };\n\n  BranchGraph.prototype.drawDot = function(x, y, commit) {\n    const { r } = this;\n    r.circle(x, y, 3).attr({\n      fill: this.colors[commit.space],\n      stroke: \"none\"\n    });\n\n    const avatar_box_x = this.offsetX + this.unitSpace * this.mspace + 10;\n    const avatar_box_y = y - 10;\n\n    r.rect(avatar_box_x, avatar_box_y, 20, 20).attr({\n      stroke: this.colors[commit.space],\n      \"stroke-width\": 2\n    });\n    r.image(commit.author.icon, avatar_box_x, avatar_box_y, 20, 20);\n    return r.text(this.offsetX + this.unitSpace * this.mspace + 35, y, commit.message.split(\"\\n\")[0]).attr({\n      \"text-anchor\": \"start\",\n      font: \"14px Monaco, monospace\"\n    });\n  };\n\n  BranchGraph.prototype.drawLines = function(x, y, commit) {\n    var arrow, color, i, len, offset, parent, parentCommit, parentX1, parentX2, parentY, route;\n    const { r } = this;\n    const ref = commit.parents;\n    const results = [];\n\n    for (i = 0, len = ref.length; i < len; i += 1) {\n      parent = ref[i];\n      parentCommit = this.preparedCommits[parent[0]];\n      parentY = this.offsetY + this.unitTime * parentCommit.time;\n      parentX1 = this.offsetX + this.unitSpace * (this.mspace - parentCommit.space);\n      parentX2 = this.offsetX + this.unitSpace * (this.mspace - parent[1]);\n      // Set line color\n      if (parentCommit.space <= commit.space) {\n        color = this.colors[commit.space];\n      } else {\n        color = this.colors[parentCommit.space];\n      }\n      // Build line shape\n      if (parent[1] === commit.space) {\n        offset = [0, 5];\n        arrow = \"l-2,5,4,0,-2,-5,0,5\";\n      } else if (parent[1] < commit.space) {\n        offset = [3, 3];\n        arrow = \"l5,0,-2,4,-3,-4,4,2\";\n      } else {\n        offset = [-3, 3];\n        arrow = \"l-5,0,2,4,3,-4,-4,2\";\n      }\n      // Start point\n      route = [\"M\", x + offset[0], y + offset[1]];\n      // Add arrow if not first parent\n      if (i > 0) {\n        route.push(arrow);\n      }\n      // Circumvent if overlap\n      if (commit.space !== parentCommit.space || commit.space !== parent[1]) {\n        route.push(\"L\", parentX2, y + 10, \"L\", parentX2, parentY - 5);\n      }\n      // End point\n      route.push(\"L\", parentX1, parentY);\n      results.push(r.path(route).attr({\n        stroke: color,\n        \"stroke-width\": 2\n      }));\n    }\n    return results;\n  };\n\n  BranchGraph.prototype.markCommit = function(commit) {\n    if (commit.id === this.options.commit_id) {\n      const { r } = this;\n      const x = this.offsetX + this.unitSpace * (this.mspace - commit.space);\n      const y = this.offsetY + this.unitTime * commit.time;\n      r.path([\"M\", x + 5, y, \"L\", x + 15, y + 4, \"L\", x + 15, y - 4, \"Z\"]).attr({\n        fill: \"#000\",\n        \"fill-opacity\": .5,\n        stroke: \"none\"\n      });\n      // Displayed in the center\n      return this.element.scrollTop(y - this.graphHeight / 2);\n    }\n  };\n\n  return BranchGraph;\n})();\n","/* eslint-disable func-names, wrap-iife, no-var, quotes, quote-props, prefer-template, comma-dangle, max-len */\n\nimport $ from 'jquery';\nimport BranchGraph from '../../../network/branch_graph';\n\nexport default (function() {\n  function Network(opts) {\n    var vph;\n    $(\"#filter_ref\").click(function() {\n      return $(this).closest('form').submit();\n    });\n    this.branch_graph = new BranchGraph($(\".network-graph\"), opts);\n    vph = $(window).height() - 250;\n    $('.network-graph').css({\n      'height': vph + 'px'\n    });\n  }\n\n  return Network;\n})();\n","import $ from 'jquery';\nimport ShortcutsNetwork from '../../../../shortcuts_network';\nimport Network from '../network';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (!$('.network-graph').length) return;\n\n  const networkGraph = new Network({\n    url: $('.network-graph').attr('data-url'),\n    commit_url: $('.network-graph').attr('data-commit-url'),\n    ref: $('.network-graph').attr('data-ref'),\n    commit_id: $('.network-graph').attr('data-commit-id'),\n  });\n\n  // eslint-disable-next-line no-new\n  new ShortcutsNetwork(networkGraph.branch_graph);\n});\n"],"sourceRoot":""}