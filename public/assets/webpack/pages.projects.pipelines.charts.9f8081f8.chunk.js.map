{"version":3,"sources":["webpack:///./pages/projects/pipelines/charts/index.js"],"names":["options","scaleOverlay","responsive","maintainAspectRatio","document","addEventListener","chartTimesData","JSON","parse","getElementById","innerHTML","chartsData","data","labels","datasets","fillColor","strokeColor","barStrokeWidth","barValueSpacing","barDatasetSpacing","values","window","innerWidth","scaleFontSize","chart_js__WEBPACK_IMPORTED_MODULE_1___default","a","jquery__WEBPACK_IMPORTED_MODULE_0___default","get","getContext","Bar","forEach","scope","chartScope","pointColor","pointStrokeColor","totalValues","successValues","ctx","$","Line"],"mappings":"qIAGMA,GACJC,cAAc,EACdC,YAAY,EACZC,qBAAqB,GA2BvBC,SAASC,iBAAiB,mBAAoB,WAC5C,IAAMC,EAAiBC,KAAKC,MAAMJ,SAASK,eAAe,4BAA4BC,WAChFC,EAAaJ,KAAKC,MAAMJ,SAASK,eAAe,uBAAuBC,WACvEE,GACJC,OAAQP,EAAeO,OACvBC,WACEC,UAAW,wBACXC,YAAa,sBACbC,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,EACnBP,KAAMN,EAAec,UAIrBC,OAAOC,WAAa,MAEtBtB,EAAQuB,cAAgB,GAG1B,IAAIC,EAAAC,EAAMC,IAAE,qBAAqBC,IAAI,GAAGC,WAAW,OAAOC,IAAIjB,EAAMZ,GAEpEW,EAAWmB,QAAQ,SAAAC,GAAA,OA7CbnB,GACJC,QAFgBmB,EA8CqBD,GA5ClBlB,OACnBC,WACEC,UAAW,UACXC,YAAa,UACbiB,WAAY,UACZC,iBAAkB,OAClBtB,KAAMoB,EAAWG,cAGjBpB,UAAW,UACXC,YAAa,UACbiB,WAAY,UACZC,iBAAkB,OAClBtB,KAAMoB,EAAWI,iBAIfC,EAAMX,IAAAY,IAAMN,EAAWD,MAAjB,SAA+BJ,IAAI,GAAGC,WAAW,WAE7D,IAAIJ,EAAAC,EAAMY,GAAKE,KAAK3B,EAAMZ,GArBT,IAACgC,EACZpB,EAkBAyB","file":"pages.projects.pipelines.charts.9f8081f8.chunk.js","sourcesContent":["import $ from 'jquery';\nimport Chart from 'chart.js';\n\nconst options = {\n  scaleOverlay: true,\n  responsive: true,\n  maintainAspectRatio: false,\n};\n\nconst buildChart = (chartScope) => {\n  const data = {\n    labels: chartScope.labels,\n    datasets: [{\n      fillColor: '#707070',\n      strokeColor: '#707070',\n      pointColor: '#707070',\n      pointStrokeColor: '#EEE',\n      data: chartScope.totalValues,\n    },\n    {\n      fillColor: '#1aaa55',\n      strokeColor: '#1aaa55',\n      pointColor: '#1aaa55',\n      pointStrokeColor: '#fff',\n      data: chartScope.successValues,\n    },\n    ],\n  };\n  const ctx = $(`#${chartScope.scope}Chart`).get(0).getContext('2d');\n\n  new Chart(ctx).Line(data, options);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const chartTimesData = JSON.parse(document.getElementById('pipelinesTimesChartsData').innerHTML);\n  const chartsData = JSON.parse(document.getElementById('pipelinesChartsData').innerHTML);\n  const data = {\n    labels: chartTimesData.labels,\n    datasets: [{\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,1)',\n      barStrokeWidth: 1,\n      barValueSpacing: 1,\n      barDatasetSpacing: 1,\n      data: chartTimesData.values,\n    }],\n  };\n\n  if (window.innerWidth < 768) {\n    // Scale fonts if window width lower than 768px (iPad portrait)\n    options.scaleFontSize = 8;\n  }\n\n  new Chart($('#build_timesChart').get(0).getContext('2d')).Bar(data, options);\n\n  chartsData.forEach(scope => buildChart(scope));\n});\n"],"sourceRoot":""}