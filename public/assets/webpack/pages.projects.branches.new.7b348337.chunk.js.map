{"version":3,"sources":["webpack:///./pages/projects/branches/new/index.js","webpack:///./ref_select_dropdown.js","webpack:///./new_branch_form.js"],"names":["document","addEventListener","_new_branch_form__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_0___default","JSON","parse","getElementById","innerHTML","__webpack_exports__","RefSelectDropdown","$dropdownButton","availableRefs","_classCallCheck","this","availableRefsValue","glDropdown","data","filterable","filterByText","remote","fieldName","filterInput","selectable","isSelectable","branch","$el","hasClass","text","id","toggleLabel","$dropdownContainer","closest","$fieldInput","$","$filterInput","on","e","keyCode","which","ref","val","trim","removeClass","NewBranchForm","form","validate","bind","branchNameError","find","name","_ref_select_dropdown__WEBPACK_IMPORTED_MODULE_1__","setupRestrictions","addBinding","init","length","trigger","endsWith","invalid","single","startsWith","pattern","prefix","conjunction","restrictions","errorMessage","errors","formatter","unique","validator","_this","indexOf","empty","values","value","call","push","restriction","formatted","map","test","join","matched","match","concat","reduce","append"],"mappings":"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","file":"pages.projects.branches.new.7b348337.chunk.js","sourcesContent":["import $ from 'jquery';\nimport NewBranchForm from '~/new_branch_form';\n\ndocument.addEventListener('DOMContentLoaded', () => (\n  new NewBranchForm($('.js-create-branch-form'), JSON.parse(document.getElementById('availableRefs').innerHTML))\n));\n","import $ from 'jquery';\n\nclass RefSelectDropdown {\n  constructor($dropdownButton, availableRefs) {\n    const availableRefsValue = availableRefs || JSON.parse(document.getElementById('availableRefs').innerHTML);\n    $dropdownButton.glDropdown({\n      data: availableRefsValue,\n      filterable: true,\n      filterByText: true,\n      remote: false,\n      fieldName: $dropdownButton.data('fieldName'),\n      filterInput: 'input[type=\"search\"]',\n      selectable: true,\n      isSelectable(branch, $el) {\n        return !$el.hasClass('is-active');\n      },\n      text(branch) {\n        return branch;\n      },\n      id(branch) {\n        return branch;\n      },\n      toggleLabel(branch) {\n        return branch;\n      },\n    });\n\n    const $dropdownContainer = $dropdownButton.closest('.dropdown');\n    const $fieldInput = $(`input[name=\"${$dropdownButton.data('fieldName')}\"]`, $dropdownContainer);\n    const $filterInput = $('input[type=\"search\"]', $dropdownContainer);\n\n    $filterInput.on('keyup', (e) => {\n      const keyCode = e.keyCode || e.which;\n      if (keyCode !== 13) return;\n\n      const ref = $filterInput.val().trim();\n      if (ref === '') {\n        return;\n      }\n\n      $fieldInput.val(ref);\n      $('.dropdown-toggle-text', $dropdownButton).text(ref);\n\n      $dropdownContainer.removeClass('open');\n    });\n  }\n}\n\nexport default RefSelectDropdown;\n","/* eslint-disable func-names, no-var, one-var, max-len, wrap-iife, consistent-return, comma-dangle, one-var-declaration-per-line, quotes, no-return-assign, prefer-arrow-callback, prefer-template, no-shadow, no-else-return, max-len */\n\nimport $ from 'jquery';\nimport RefSelectDropdown from './ref_select_dropdown';\n\nexport default class NewBranchForm {\n  constructor(form, availableRefs) {\n    this.validate = this.validate.bind(this);\n    this.branchNameError = form.find('.js-branch-name-error');\n    this.name = form.find('.js-branch-name');\n    this.ref = form.find('#ref');\n    new RefSelectDropdown($('.js-branch-select'), availableRefs); // eslint-disable-line no-new\n    this.setupRestrictions();\n    this.addBinding();\n    this.init();\n  }\n\n  addBinding() {\n    return this.name.on('blur', this.validate);\n  }\n\n  init() {\n    if (this.name.length && this.name.val().length > 0) {\n      return this.name.trigger('blur');\n    }\n  }\n\n  setupRestrictions() {\n    var endsWith, invalid, single, startsWith;\n    startsWith = {\n      pattern: /^(\\/|\\.)/g,\n      prefix: \"can't start with\",\n      conjunction: \"or\"\n    };\n    endsWith = {\n      pattern: /(\\/|\\.|\\.lock)$/g,\n      prefix: \"can't end in\",\n      conjunction: \"or\"\n    };\n    invalid = {\n      pattern: /(\\s|~|\\^|:|\\?|\\*|\\[|\\\\|\\.\\.|@\\{|\\/{2,}){1}/g,\n      prefix: \"can't contain\",\n      conjunction: \", \"\n    };\n    single = {\n      pattern: /^@+$/g,\n      prefix: \"can't be\",\n      conjunction: \"or\"\n    };\n    return this.restrictions = [startsWith, invalid, endsWith, single];\n  }\n\n  validate() {\n    var errorMessage, errors, formatter, unique, validator;\n    const { indexOf } = [];\n\n    this.branchNameError.empty();\n    unique = function(values, value) {\n      if (indexOf.call(values, value) === -1) {\n        values.push(value);\n      }\n      return values;\n    };\n    formatter = function(values, restriction) {\n      var formatted;\n      formatted = values.map(function(value) {\n        switch (false) {\n          case !/\\s/.test(value):\n            return 'spaces';\n          case !/\\/{2,}/g.test(value):\n            return 'consecutive slashes';\n          default:\n            return \"'\" + value + \"'\";\n        }\n      });\n      return restriction.prefix + \" \" + (formatted.join(restriction.conjunction));\n    };\n    validator = (function(_this) {\n      return function(errors, restriction) {\n        var matched;\n        matched = _this.name.val().match(restriction.pattern);\n        if (matched) {\n          return errors.concat(formatter(matched.reduce(unique, []), restriction));\n        } else {\n          return errors;\n        }\n      };\n    })(this);\n    errors = this.restrictions.reduce(validator, []);\n    if (errors.length > 0) {\n      errorMessage = $(\"<span/>\").text(errors.join(', '));\n      return this.branchNameError.append(errorMessage);\n    }\n  }\n}\n"],"sourceRoot":""}