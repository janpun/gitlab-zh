{"version":3,"sources":["webpack:///./snippet/snippet_bundle.js","webpack:///./pages/projects/init_form.js","webpack:///./dropzone_input.js","webpack:///./lib/utils/text_markdown.js","webpack:///./gl_form.js","webpack:///./zen_mode.js","webpack:///./pages/projects/snippets/edit/index.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/mousetrap/plugins/pause/mousetrap-pause.js"],"names":["jquery__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","editor","ace","edit","on","val","getValue","$formEl","_zen_mode__WEBPACK_IMPORTED_MODULE_0__","_gl_form__WEBPACK_IMPORTED_MODULE_1__","dropzoneInput","form","$attachButton","find","$attachingFileMessage","$cancelButton","$retryLink","$uploadProgress","$uploadingErrorContainer","$uploadingErrorMessage","$uploadingProgressContainer","uploadsPath","window","uploads_path","maxFileSize","gon","max_file_size","formTextarea","handlePaste","pasteText","addFileToForm","updateAttachingMessage","isImage","getFilename","uploadFile","wrap","event","$mdArea","closest","setupMarkdownPreview","$formDropzone","parent","addClass","append","dropzone","url","dictDefaultMessage","clickable","paramName","maxFilesize","uploadMultiple","headers","csrf","previewContainer","processing","jquery_default","alert","dragover","css","dragleave","removeClass","drop","focus","success","header","response","processingFileCount","this","getQueuedFiles","length","getUploadingFiles","shouldPad","link","markdown","error","file","errorMessage","arguments","undefined","xhr","message","responseText","html","totaluploadprogress","totalUploadProgress","files","text","Math","round","sending","removedfile","queuecomplete","remove","trigger","child","children","e","preventDefault","stopPropagation","dropzone_default","a","forElement","get","removeAllFiles","dropzoneInstance","target","querySelector","failedFiles","map","failedFile","status","ERROR","accepted","addFile","pasteEvent","originalEvent","clipboardData","items","image","filename","getAsFile","data","i","item","type","indexOf","formattedText","textarea","caretStart","selectionStart","caretEnd","selectionEnd","textEnd","beforeSelection","substring","afterSelection","setSelectionRange","style","height","scrollHeight","dispatchEvent","Event","path","underscore_default","escape","value","getData","split","closeSpinner","formData","FormData","axios_utils","post","then","_ref","md","$child","index","replace","insertToTextArea","catch","messageContainer","attachingMessage","filesCount","filter","click","autoDiscover","updateText","textArea","tag","blockTag","$textArea","selected","selectedText","textToInsert","selectedSplit","startChar","removedLastNewLine","removedFirstNewLine","currentLineEmpty","lastNewLine","substr","lastIndexOf","test","before","trim","lineBefore","after","lineAfter","blockTagText","join","Object","common_utils","wrapped","pos","moveCursor","insertMarkdownText","gl_form_GLForm","GLForm","_this","enableGFM","_classCallCheck","assign","gfm_auto_complete","dataSources","gl","GfmAutoComplete","keys","forEach","destroy","setupForm","clearEventListeners","autoComplete","isNewForm","is","utils","disableButtonIfEmptyField","setup","autosize_default","addEventListeners","off","$this","hide","show","isAutosizeable","setupAutosize","_this2","setHeightData","bind","destroyAutosize","setTimeout","outerHeight","dropzone__WEBPACK_IMPORTED_MODULE_2___default","ZenMode","active_backdrop","active_textarea","document","currentTarget","enter","exit","keyCode","backdrop","mousetrap__WEBPACK_IMPORTED_MODULE_3___default","pause","removeAttr","unpause","scrollTo","$dropzone","hasClass","enable","zen_area","offset","addEventListener","_snippet_snippet_bundle__WEBPACK_IMPORTED_MODULE_1__","_pages_projects_init_form__WEBPACK_IMPORTED_MODULE_2__","Mousetrap","self","_originalStopCallback","stopCallback","enabled","element","combo"],"mappings":"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","file":"pages.projects.snippets.edit.a9566778.chunk.js","sourcesContent":["/* global ace */\n\nimport $ from 'jquery';\n\nexport default () => {\n  const editor = ace.edit('editor');\n\n  $('.snippet-form-holder form').on('submit', () => {\n    $('.snippet-file-content').val(editor.getValue());\n  });\n};\n","import ZenMode from '~/zen_mode';\nimport GLForm from '~/gl_form';\n\nexport default function ($formEl) {\n  new ZenMode(); // eslint-disable-line no-new\n  new GLForm($formEl); // eslint-disable-line no-new\n}\n","import $ from 'jquery';\nimport Dropzone from 'dropzone';\nimport _ from 'underscore';\nimport './preview_markdown';\nimport csrf from './lib/utils/csrf';\nimport axios from './lib/utils/axios_utils';\n\nDropzone.autoDiscover = false;\n\nexport default function dropzoneInput(form) {\n  const divHover = '<div class=\"div-dropzone-hover\"></div>';\n  const iconPaperclip = '<i class=\"fa fa-paperclip div-dropzone-icon\"></i>';\n  const $attachButton = form.find('.button-attach-file');\n  const $attachingFileMessage = form.find('.attaching-file-message');\n  const $cancelButton = form.find('.button-cancel-uploading-files');\n  const $retryLink = form.find('.retry-uploading-link');\n  const $uploadProgress = form.find('.uploading-progress');\n  const $uploadingErrorContainer = form.find('.uploading-error-container');\n  const $uploadingErrorMessage = form.find('.uploading-error-message');\n  const $uploadingProgressContainer = form.find('.uploading-progress-container');\n  const uploadsPath = window.uploads_path || null;\n  const maxFileSize = gon.max_file_size || 10;\n  const formTextarea = form.find('.js-gfm-input');\n  let handlePaste;\n  let pasteText;\n  let addFileToForm;\n  let updateAttachingMessage;\n  let isImage;\n  let getFilename;\n  let uploadFile;\n\n  formTextarea.wrap('<div class=\"div-dropzone\"></div>');\n  formTextarea.on('paste', event => handlePaste(event));\n\n  // Add dropzone area to the form.\n  const $mdArea = formTextarea.closest('.md-area');\n  form.setupMarkdownPreview();\n  const $formDropzone = form.find('.div-dropzone');\n  $formDropzone.parent().addClass('div-dropzone-wrapper');\n  $formDropzone.append(divHover);\n  $formDropzone.find('.div-dropzone-hover').append(iconPaperclip);\n\n  if (!uploadsPath) {\n    $formDropzone.addClass('js-invalid-dropzone');\n    return;\n  }\n\n  const dropzone = $formDropzone.dropzone({\n    url: uploadsPath,\n    dictDefaultMessage: '',\n    clickable: true,\n    paramName: 'file',\n    maxFilesize: maxFileSize,\n    uploadMultiple: false,\n    headers: csrf.headers,\n    previewContainer: false,\n    processing: () => $('.div-dropzone-alert').alert('close'),\n    dragover: () => {\n      $mdArea.addClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0.7);\n    },\n    dragleave: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n    },\n    drop: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n      formTextarea.focus();\n    },\n    success(header, response) {\n      const processingFileCount = this.getQueuedFiles().length + this.getUploadingFiles().length;\n      const shouldPad = processingFileCount >= 1;\n\n      pasteText(response.link.markdown, shouldPad);\n      // Show 'Attach a file' link only when all files have been uploaded.\n      if (!processingFileCount) $attachButton.removeClass('hide');\n      addFileToForm(response.link.url);\n    },\n    error: (file, errorMessage = 'Attaching the file failed.', xhr) => {\n      // If 'error' event is fired by dropzone, the second parameter is error message.\n      // If the 'errorMessage' parameter is empty, the default error message is set.\n      // If the 'error' event is fired by backend (xhr) error response, the third parameter is\n      // xhr object (xhr.responseText is error message).\n      // On error we hide the 'Attach' and 'Cancel' buttons\n      // and show an error.\n\n      // If there's xhr error message, let's show it instead of dropzone's one.\n      const message = xhr ? xhr.responseText : errorMessage;\n\n      $uploadingErrorContainer.removeClass('hide');\n      $uploadingErrorMessage.html(message);\n      $attachButton.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n    totaluploadprogress(totalUploadProgress) {\n      updateAttachingMessage(this.files, $attachingFileMessage);\n      $uploadProgress.text(`${Math.round(totalUploadProgress)}%`);\n    },\n    sending: () => {\n      // DOM elements already exist.\n      // Instead of dynamically generating them,\n      // we just either hide or show them.\n      $attachButton.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n      $uploadingProgressContainer.removeClass('hide');\n      $cancelButton.removeClass('hide');\n    },\n    removedfile: () => {\n      $attachButton.removeClass('hide');\n      $cancelButton.addClass('hide');\n      $uploadingProgressContainer.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n    },\n    queuecomplete: () => {\n      $('.dz-preview').remove();\n      $('.markdown-area').trigger('input');\n\n      $uploadingProgressContainer.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n  });\n\n  const child = $(dropzone[0]).children('textarea');\n\n  // removeAllFiles(true) stops uploading files (if any)\n  // and remove them from dropzone files queue.\n  $cancelButton.on('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dropzone.forElement($formDropzone.get(0)).removeAllFiles(true);\n  });\n\n  // If 'error' event is fired, we store a failed files,\n  // clear dropzone files queue, change status of failed files to undefined,\n  // and add that files to the dropzone files queue again.\n  // addFile() adds file to dropzone files queue and upload it.\n  $retryLink.on('click', (e) => {\n    const dropzoneInstance = Dropzone.forElement(e.target.closest('.js-main-target-form').querySelector('.div-dropzone'));\n    const failedFiles = dropzoneInstance.files;\n\n    e.preventDefault();\n\n    // 'true' parameter of removeAllFiles() cancels\n    // uploading of files that are being uploaded at the moment.\n    dropzoneInstance.removeAllFiles(true);\n\n    failedFiles.map((failedFile) => {\n      const file = failedFile;\n\n      if (file.status === Dropzone.ERROR) {\n        file.status = undefined;\n        file.accepted = undefined;\n      }\n\n      return dropzoneInstance.addFile(file);\n    });\n  });\n  // eslint-disable-next-line consistent-return\n  handlePaste = (event) => {\n    const pasteEvent = event.originalEvent;\n    if (pasteEvent.clipboardData && pasteEvent.clipboardData.items) {\n      const image = isImage(pasteEvent);\n      if (image) {\n        event.preventDefault();\n        const filename = getFilename(pasteEvent) || 'image.png';\n        const text = `{{${filename}}}`;\n        pasteText(text);\n        return uploadFile(image.getAsFile(), filename);\n      }\n    }\n  };\n\n  isImage = (data) => {\n    let i = 0;\n    while (i < data.clipboardData.items.length) {\n      const item = data.clipboardData.items[i];\n      if (item.type.indexOf('image') !== -1) {\n        return item;\n      }\n      i += 1;\n    }\n    return false;\n  };\n\n  pasteText = (text, shouldPad) => {\n    let formattedText = text;\n    if (shouldPad) {\n      formattedText += '\\n\\n';\n    }\n    const textarea = child.get(0);\n    const caretStart = textarea.selectionStart;\n    const caretEnd = textarea.selectionEnd;\n    const textEnd = $(child).val().length;\n    const beforeSelection = $(child).val().substring(0, caretStart);\n    const afterSelection = $(child).val().substring(caretEnd, textEnd);\n    $(child).val(beforeSelection + formattedText + afterSelection);\n    textarea.setSelectionRange(caretStart + formattedText.length, caretEnd + formattedText.length);\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    formTextarea.get(0).dispatchEvent(new Event('input'));\n    return formTextarea.trigger('input');\n  };\n\n  addFileToForm = (path) => {\n    $(form).append(`<input type=\"hidden\" name=\"files[]\" value=\"${_.escape(path)}\">`);\n  };\n\n  getFilename = (e) => {\n    let value;\n    if (window.clipboardData && window.clipboardData.getData) {\n      value = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      value = e.clipboardData.getData('text/plain');\n    }\n    value = value.split('\\r');\n    return value[0];\n  };\n\n  const showSpinner = () => $uploadingProgressContainer.removeClass('hide');\n\n  const closeSpinner = () => $uploadingProgressContainer.addClass('hide');\n\n  const showError = (message) => {\n    $uploadingErrorContainer.removeClass('hide');\n    $uploadingErrorMessage.html(message);\n  };\n\n  const closeAlertMessage = () => form.find('.div-dropzone-alert').alert('close');\n\n  const insertToTextArea = (filename, url) => {\n    const $child = $(child);\n    $child.val((index, val) => val.replace(`{{${filename}}}`, url));\n\n    $child.trigger('change');\n  };\n\n  uploadFile = (item, filename) => {\n    const formData = new FormData();\n    formData.append('file', item, filename);\n\n    showSpinner();\n    closeAlertMessage();\n\n    axios.post(uploadsPath, formData)\n      .then(({ data }) => {\n        const md = data.link.markdown;\n\n        insertToTextArea(filename, md);\n        closeSpinner();\n      })\n      .catch((e) => {\n        showError(e.response.data.message);\n        closeSpinner();\n      });\n  };\n\n  updateAttachingMessage = (files, messageContainer) => {\n    let attachingMessage;\n    const filesCount = files.filter(file => file.status === 'uploading' || file.status === 'queued').length;\n\n    // Dinamycally change uploading files text depending on files number in\n    // dropzone files queue.\n    if (filesCount > 1) {\n      attachingMessage = `Attaching ${filesCount} files -`;\n    } else {\n      attachingMessage = 'Attaching a file -';\n    }\n\n    messageContainer.text(attachingMessage);\n  };\n\n  form.find('.markdown-selector').click(function onMarkdownClick(e) {\n    e.preventDefault();\n    $(this).closest('.gfm-form').find('.div-dropzone').click();\n    formTextarea.focus();\n  });\n}\n","/* eslint-disable func-names, no-var, no-param-reassign, quotes, one-var, one-var-declaration-per-line, operator-assignment, no-else-return, prefer-template, prefer-arrow-callback, max-len, consistent-return, no-unused-vars, max-len */\nimport $ from 'jquery';\nimport { insertText } from '~/lib/utils/common_utils';\n\nfunction selectedText(text, textarea) {\n  return text.substring(textarea.selectionStart, textarea.selectionEnd);\n}\n\nfunction lineBefore(text, textarea) {\n  var split;\n  split = text.substring(0, textarea.selectionStart).trim().split('\\n');\n  return split[split.length - 1];\n}\n\nfunction lineAfter(text, textarea) {\n  return text.substring(textarea.selectionEnd).trim().split('\\n')[0];\n}\n\nfunction blockTagText(text, textArea, blockTag, selected) {\n  const before = lineBefore(text, textArea);\n  const after = lineAfter(text, textArea);\n  if (before === blockTag && after === blockTag) {\n    // To remove the block tag we have to select the line before & after\n    if (blockTag != null) {\n      textArea.selectionStart = textArea.selectionStart - (blockTag.length + 1);\n      textArea.selectionEnd = textArea.selectionEnd + (blockTag.length + 1);\n    }\n    return selected;\n  } else {\n    return blockTag + \"\\n\" + selected + \"\\n\" + blockTag;\n  }\n}\n\nfunction moveCursor(textArea, tag, wrapped, removedLastNewLine) {\n  var pos;\n  if (!textArea.setSelectionRange) {\n    return;\n  }\n  if (textArea.selectionStart === textArea.selectionEnd) {\n    if (wrapped) {\n      pos = textArea.selectionStart - tag.length;\n    } else {\n      pos = textArea.selectionStart;\n    }\n\n    if (removedLastNewLine) {\n      pos -= 1;\n    }\n\n    return textArea.setSelectionRange(pos, pos);\n  }\n}\n\nexport function insertMarkdownText(textArea, text, tag, blockTag, selected, wrap) {\n  var textToInsert, inserted, selectedSplit, startChar, removedLastNewLine, removedFirstNewLine, currentLineEmpty, lastNewLine;\n  removedLastNewLine = false;\n  removedFirstNewLine = false;\n  currentLineEmpty = false;\n\n  // Remove the first newline\n  if (selected.indexOf('\\n') === 0) {\n    removedFirstNewLine = true;\n    selected = selected.replace(/\\n+/, '');\n  }\n\n  // Remove the last newline\n  if (textArea.selectionEnd - textArea.selectionStart > selected.replace(/\\n$/, '').length) {\n    removedLastNewLine = true;\n    selected = selected.replace(/\\n$/, '');\n  }\n\n  selectedSplit = selected.split('\\n');\n\n  if (!wrap) {\n    lastNewLine = textArea.value.substr(0, textArea.selectionStart).lastIndexOf('\\n');\n\n    // Check whether the current line is empty or consists only of spaces(=handle as empty)\n    if (/^\\s*$/.test(textArea.value.substring(lastNewLine, textArea.selectionStart))) {\n      currentLineEmpty = true;\n    }\n  }\n\n  startChar = !wrap && !currentLineEmpty && textArea.selectionStart > 0 ? '\\n' : '';\n\n  if (selectedSplit.length > 1 && (!wrap || (blockTag != null && blockTag !== ''))) {\n    if (blockTag != null && blockTag !== '') {\n      textToInsert = blockTagText(text, textArea, blockTag, selected);\n    } else {\n      textToInsert = selectedSplit.map(function(val) {\n        if (val.indexOf(tag) === 0) {\n          return \"\" + (val.replace(tag, ''));\n        } else {\n          return \"\" + tag + val;\n        }\n      }).join('\\n');\n    }\n  } else {\n    textToInsert = \"\" + startChar + tag + selected + (wrap ? tag : ' ');\n  }\n\n  if (removedFirstNewLine) {\n    textToInsert = '\\n' + textToInsert;\n  }\n\n  if (removedLastNewLine) {\n    textToInsert += '\\n';\n  }\n\n  insertText(textArea, textToInsert);\n  return moveCursor(textArea, tag, wrap, removedLastNewLine);\n}\n\nfunction updateText(textArea, tag, blockTag, wrap) {\n  var $textArea, selected, text;\n  $textArea = $(textArea);\n  textArea = $textArea.get(0);\n  text = $textArea.val();\n  selected = selectedText(text, textArea);\n  $textArea.focus();\n  return insertMarkdownText(textArea, text, tag, blockTag, selected, wrap);\n}\n\nfunction replaceRange(s, start, end, substitute) {\n  return s.substring(0, start) + substitute + s.substring(end);\n}\n\nexport function addMarkdownListeners(form) {\n  return $('.js-md', form).off('click').on('click', function() {\n    const $this = $(this);\n    return updateText($this.closest('.md-area').find('textarea'), $this.data('mdTag'), $this.data('mdBlock'), !$this.data('mdPrepend'));\n  });\n}\n\nexport function removeMarkdownListeners(form) {\n  return $('.js-md', form).off('click');\n}\n","import $ from 'jquery';\nimport autosize from 'autosize';\nimport GfmAutoComplete, * as GFMConfig from './gfm_auto_complete';\nimport dropzoneInput from './dropzone_input';\nimport { addMarkdownListeners, removeMarkdownListeners } from './lib/utils/text_markdown';\n\nexport default class GLForm {\n  constructor(form, enableGFM = {}) {\n    this.form = form;\n    this.textarea = this.form.find('textarea.js-gfm-input');\n    this.enableGFM = Object.assign({}, GFMConfig.defaultAutocompleteConfig, enableGFM);\n    // Disable autocomplete for keywords which do not have dataSources available\n    const dataSources = (gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources) || {};\n    Object.keys(this.enableGFM).forEach(item => {\n      if (item !== 'emojis') {\n        this.enableGFM[item] = !!dataSources[item];\n      }\n    });\n    // Before we start, we should clean up any previous data for this form\n    this.destroy();\n    // Setup the form\n    this.setupForm();\n    this.form.data('glForm', this);\n  }\n\n  destroy() {\n    // Clean form listeners\n    this.clearEventListeners();\n    if (this.autoComplete) {\n      this.autoComplete.destroy();\n    }\n    this.form.data('glForm', null);\n  }\n\n  setupForm() {\n    const isNewForm = this.form.is(':not(.gfm-form)');\n    this.form.removeClass('js-new-note-form');\n    if (isNewForm) {\n      this.form.find('.div-dropzone').remove();\n      this.form.addClass('gfm-form');\n      // remove notify commit author checkbox for non-commit notes\n      gl.utils.disableButtonIfEmptyField(this.form.find('.js-note-text'), this.form.find('.js-comment-button, .js-note-new-discussion'));\n      this.autoComplete = new GfmAutoComplete(gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources);\n      this.autoComplete.setup(this.form.find('.js-gfm-input'), this.enableGFM);\n      dropzoneInput(this.form);\n      autosize(this.textarea);\n    }\n    // form and textarea event listeners\n    this.addEventListeners();\n    addMarkdownListeners(this.form);\n    // hide discard button\n    this.form.find('.js-note-discard').hide();\n    this.form.show();\n    if (this.isAutosizeable) this.setupAutosize();\n  }\n\n  setupAutosize() {\n    this.textarea.off('autosize:resized')\n      .on('autosize:resized', this.setHeightData.bind(this));\n\n    this.textarea.off('mouseup.autosize')\n      .on('mouseup.autosize', this.destroyAutosize.bind(this));\n\n    setTimeout(() => {\n      autosize(this.textarea);\n      this.textarea.css('resize', 'vertical');\n    }, 0);\n  }\n\n  setHeightData() {\n    this.textarea.data('height', this.textarea.outerHeight());\n  }\n\n  destroyAutosize() {\n    const outerHeight = this.textarea.outerHeight();\n\n    if (this.textarea.data('height') === outerHeight) return;\n\n    autosize.destroy(this.textarea);\n\n    this.textarea.data('height', outerHeight);\n    this.textarea.outerHeight(outerHeight);\n    this.textarea.css('max-height', window.outerHeight);\n  }\n\n  clearEventListeners() {\n    this.textarea.off('focus');\n    this.textarea.off('blur');\n    removeMarkdownListeners(this.form);\n  }\n\n  addEventListeners() {\n    this.textarea.on('focus', function focusTextArea() {\n      $(this).closest('.md-area').addClass('is-focused');\n    });\n    this.textarea.on('blur', function blurTextArea() {\n      $(this).closest('.md-area').removeClass('is-focused');\n    });\n  }\n}\n","/* eslint-disable func-names, wrap-iife, prefer-arrow-callback, no-unused-vars, consistent-return, camelcase, comma-dangle, max-len, class-methods-use-this */\n\n// Zen Mode (full screen) textarea\n//\n/*= provides zen_mode:enter */\n/*= provides zen_mode:leave */\n\nimport $ from 'jquery';\nimport 'vendor/jquery.scrollTo';\nimport Dropzone from 'dropzone';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/pause/mousetrap-pause';\n\nDropzone.autoDiscover = false;\n\n//\n// ### Events\n//\n// `zen_mode:enter`\n//\n// Fired when the \"Edit in fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-enter\n//\n// `zen_mode:leave`\n//\n// Fired when the \"Leave Fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-leave\n//\n\nexport default class ZenMode {\n  constructor() {\n    this.active_backdrop = null;\n    this.active_textarea = null;\n    $(document).on('click', '.js-zen-enter', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:enter');\n    });\n    $(document).on('click', '.js-zen-leave', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:leave');\n    });\n    $(document).on('zen_mode:enter', (function(_this) {\n      return function(e) {\n        return _this.enter($(e.target).closest('.md-area').find('.zen-backdrop'));\n      };\n    })(this));\n    $(document).on('zen_mode:leave', (function(_this) {\n      return function(e) {\n        return _this.exit();\n      };\n    })(this));\n    $(document).on('keydown', function(e) {\n      // Esc\n      if (e.keyCode === 27) {\n        e.preventDefault();\n        return $(document).trigger('zen_mode:leave');\n      }\n    });\n  }\n\n  enter(backdrop) {\n    Mousetrap.pause();\n    this.active_backdrop = $(backdrop);\n    this.active_backdrop.addClass('fullscreen');\n    this.active_textarea = this.active_backdrop.find('textarea');\n    // Prevent a user-resized textarea from persisting to fullscreen\n    this.active_textarea.removeAttr('style');\n    this.active_textarea.focus();\n  }\n\n  exit() {\n    if (this.active_textarea) {\n      Mousetrap.unpause();\n      this.active_textarea.closest('.zen-backdrop').removeClass('fullscreen');\n      this.scrollTo(this.active_textarea);\n      this.active_textarea = null;\n      this.active_backdrop = null;\n\n      const $dropzone = $('.div-dropzone');\n      if ($dropzone && !$dropzone.hasClass('js-invalid-dropzone')) {\n        Dropzone.forElement('.div-dropzone').enable();\n      }\n    }\n  }\n\n  scrollTo(zen_area) {\n    return $.scrollTo(zen_area, 0, {\n      offset: -150\n    });\n  }\n}\n","import $ from 'jquery';\nimport initSnippet from '~/snippet/snippet_bundle';\nimport initForm from '~/pages/projects/init_form';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initSnippet();\n  initForm($('.snippet-form'));\n});\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n */\n/* global Mousetrap:true */\nMousetrap = (function(Mousetrap) {\n    var self = Mousetrap,\n        _originalStopCallback = self.stopCallback,\n        enabled = true;\n\n    self.stopCallback = function(e, element, combo) {\n        if (!enabled) {\n            return true;\n        }\n\n        return _originalStopCallback(e, element, combo);\n    };\n\n    self.pause = function() {\n        enabled = false;\n    };\n\n    self.unpause = function() {\n        enabled = true;\n    };\n\n    return self;\n}) (Mousetrap);\n"],"sourceRoot":""}