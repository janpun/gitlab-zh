{"version":3,"sources":["webpack:///./ref_select_dropdown.js","webpack:///./dropzone_input.js","webpack:///./lib/utils/text_markdown.js","webpack:///./gl_form.js","webpack:///./zen_mode.js","webpack:///./pages/projects/tags/new/index.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/mousetrap/plugins/pause/mousetrap-pause.js"],"names":["__webpack_exports__","RefSelectDropdown","$dropdownButton","availableRefs","_classCallCheck","this","availableRefsValue","JSON","parse","document","getElementById","innerHTML","glDropdown","data","filterable","filterByText","remote","fieldName","filterInput","selectable","isSelectable","branch","$el","hasClass","text","id","toggleLabel","$dropdownContainer","closest","$fieldInput","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","$filterInput","on","e","keyCode","which","ref","val","trim","removeClass","dropzoneInput","form","$attachButton","find","$attachingFileMessage","$cancelButton","$retryLink","$uploadProgress","$uploadingErrorContainer","$uploadingErrorMessage","$uploadingProgressContainer","uploadsPath","window","uploads_path","maxFileSize","gon","max_file_size","formTextarea","handlePaste","pasteText","addFileToForm","updateAttachingMessage","isImage","getFilename","uploadFile","wrap","event","$mdArea","setupMarkdownPreview","$formDropzone","parent","addClass","append","dropzone","url","dictDefaultMessage","clickable","paramName","maxFilesize","uploadMultiple","headers","csrf","previewContainer","processing","jquery_default","alert","dragover","css","dragleave","drop","focus","success","header","response","processingFileCount","getQueuedFiles","length","getUploadingFiles","shouldPad","link","markdown","error","file","errorMessage","arguments","undefined","xhr","message","responseText","html","totaluploadprogress","totalUploadProgress","files","Math","round","sending","removedfile","queuecomplete","remove","trigger","child","children","preventDefault","stopPropagation","dropzone_default","a","forElement","get","removeAllFiles","dropzoneInstance","target","querySelector","failedFiles","map","failedFile","status","ERROR","accepted","addFile","pasteEvent","originalEvent","clipboardData","items","image","filename","getAsFile","i","item","type","indexOf","formattedText","textarea","caretStart","selectionStart","caretEnd","selectionEnd","textEnd","beforeSelection","substring","afterSelection","setSelectionRange","style","height","scrollHeight","dispatchEvent","Event","path","underscore_default","escape","value","getData","split","closeSpinner","formData","FormData","axios_utils","post","then","_ref","md","$child","index","replace","insertToTextArea","catch","messageContainer","attachingMessage","filesCount","filter","click","autoDiscover","updateText","textArea","tag","blockTag","$textArea","selected","selectedText","textToInsert","selectedSplit","startChar","removedLastNewLine","removedFirstNewLine","currentLineEmpty","lastNewLine","substr","lastIndexOf","test","before","lineBefore","after","lineAfter","blockTagText","join","Object","common_utils","wrapped","pos","moveCursor","insertMarkdownText","gl_form_GLForm","GLForm","_this","enableGFM","assign","gfm_auto_complete","dataSources","gl","GfmAutoComplete","keys","forEach","destroy","setupForm","clearEventListeners","autoComplete","isNewForm","is","utils","disableButtonIfEmptyField","setup","autosize_default","addEventListeners","off","$this","hide","show","isAutosizeable","setupAutosize","_this2","setHeightData","bind","destroyAutosize","setTimeout","outerHeight","dropzone__WEBPACK_IMPORTED_MODULE_2___default","ZenMode","active_backdrop","active_textarea","currentTarget","enter","exit","backdrop","mousetrap__WEBPACK_IMPORTED_MODULE_3___default","pause","removeAttr","unpause","scrollTo","$dropzone","enable","zen_area","offset","addEventListener","_zen_mode__WEBPACK_IMPORTED_MODULE_2__","_gl_form__WEBPACK_IMPORTED_MODULE_3__","_ref_select_dropdown__WEBPACK_IMPORTED_MODULE_1__","Mousetrap","self","_originalStopCallback","stopCallback","enabled","element","combo"],"mappings":"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","file":"pages.projects.tags.new.2cd648e0.chunk.js","sourcesContent":["import $ from 'jquery';\n\nclass RefSelectDropdown {\n  constructor($dropdownButton, availableRefs) {\n    const availableRefsValue = availableRefs || JSON.parse(document.getElementById('availableRefs').innerHTML);\n    $dropdownButton.glDropdown({\n      data: availableRefsValue,\n      filterable: true,\n      filterByText: true,\n      remote: false,\n      fieldName: $dropdownButton.data('fieldName'),\n      filterInput: 'input[type=\"search\"]',\n      selectable: true,\n      isSelectable(branch, $el) {\n        return !$el.hasClass('is-active');\n      },\n      text(branch) {\n        return branch;\n      },\n      id(branch) {\n        return branch;\n      },\n      toggleLabel(branch) {\n        return branch;\n      },\n    });\n\n    const $dropdownContainer = $dropdownButton.closest('.dropdown');\n    const $fieldInput = $(`input[name=\"${$dropdownButton.data('fieldName')}\"]`, $dropdownContainer);\n    const $filterInput = $('input[type=\"search\"]', $dropdownContainer);\n\n    $filterInput.on('keyup', (e) => {\n      const keyCode = e.keyCode || e.which;\n      if (keyCode !== 13) return;\n\n      const ref = $filterInput.val().trim();\n      if (ref === '') {\n        return;\n      }\n\n      $fieldInput.val(ref);\n      $('.dropdown-toggle-text', $dropdownButton).text(ref);\n\n      $dropdownContainer.removeClass('open');\n    });\n  }\n}\n\nexport default RefSelectDropdown;\n","import $ from 'jquery';\nimport Dropzone from 'dropzone';\nimport _ from 'underscore';\nimport './preview_markdown';\nimport csrf from './lib/utils/csrf';\nimport axios from './lib/utils/axios_utils';\n\nDropzone.autoDiscover = false;\n\nexport default function dropzoneInput(form) {\n  const divHover = '<div class=\"div-dropzone-hover\"></div>';\n  const iconPaperclip = '<i class=\"fa fa-paperclip div-dropzone-icon\"></i>';\n  const $attachButton = form.find('.button-attach-file');\n  const $attachingFileMessage = form.find('.attaching-file-message');\n  const $cancelButton = form.find('.button-cancel-uploading-files');\n  const $retryLink = form.find('.retry-uploading-link');\n  const $uploadProgress = form.find('.uploading-progress');\n  const $uploadingErrorContainer = form.find('.uploading-error-container');\n  const $uploadingErrorMessage = form.find('.uploading-error-message');\n  const $uploadingProgressContainer = form.find('.uploading-progress-container');\n  const uploadsPath = window.uploads_path || null;\n  const maxFileSize = gon.max_file_size || 10;\n  const formTextarea = form.find('.js-gfm-input');\n  let handlePaste;\n  let pasteText;\n  let addFileToForm;\n  let updateAttachingMessage;\n  let isImage;\n  let getFilename;\n  let uploadFile;\n\n  formTextarea.wrap('<div class=\"div-dropzone\"></div>');\n  formTextarea.on('paste', event => handlePaste(event));\n\n  // Add dropzone area to the form.\n  const $mdArea = formTextarea.closest('.md-area');\n  form.setupMarkdownPreview();\n  const $formDropzone = form.find('.div-dropzone');\n  $formDropzone.parent().addClass('div-dropzone-wrapper');\n  $formDropzone.append(divHover);\n  $formDropzone.find('.div-dropzone-hover').append(iconPaperclip);\n\n  if (!uploadsPath) {\n    $formDropzone.addClass('js-invalid-dropzone');\n    return;\n  }\n\n  const dropzone = $formDropzone.dropzone({\n    url: uploadsPath,\n    dictDefaultMessage: '',\n    clickable: true,\n    paramName: 'file',\n    maxFilesize: maxFileSize,\n    uploadMultiple: false,\n    headers: csrf.headers,\n    previewContainer: false,\n    processing: () => $('.div-dropzone-alert').alert('close'),\n    dragover: () => {\n      $mdArea.addClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0.7);\n    },\n    dragleave: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n    },\n    drop: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n      formTextarea.focus();\n    },\n    success(header, response) {\n      const processingFileCount = this.getQueuedFiles().length + this.getUploadingFiles().length;\n      const shouldPad = processingFileCount >= 1;\n\n      pasteText(response.link.markdown, shouldPad);\n      // Show 'Attach a file' link only when all files have been uploaded.\n      if (!processingFileCount) $attachButton.removeClass('hide');\n      addFileToForm(response.link.url);\n    },\n    error: (file, errorMessage = 'Attaching the file failed.', xhr) => {\n      // If 'error' event is fired by dropzone, the second parameter is error message.\n      // If the 'errorMessage' parameter is empty, the default error message is set.\n      // If the 'error' event is fired by backend (xhr) error response, the third parameter is\n      // xhr object (xhr.responseText is error message).\n      // On error we hide the 'Attach' and 'Cancel' buttons\n      // and show an error.\n\n      // If there's xhr error message, let's show it instead of dropzone's one.\n      const message = xhr ? xhr.responseText : errorMessage;\n\n      $uploadingErrorContainer.removeClass('hide');\n      $uploadingErrorMessage.html(message);\n      $attachButton.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n    totaluploadprogress(totalUploadProgress) {\n      updateAttachingMessage(this.files, $attachingFileMessage);\n      $uploadProgress.text(`${Math.round(totalUploadProgress)}%`);\n    },\n    sending: () => {\n      // DOM elements already exist.\n      // Instead of dynamically generating them,\n      // we just either hide or show them.\n      $attachButton.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n      $uploadingProgressContainer.removeClass('hide');\n      $cancelButton.removeClass('hide');\n    },\n    removedfile: () => {\n      $attachButton.removeClass('hide');\n      $cancelButton.addClass('hide');\n      $uploadingProgressContainer.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n    },\n    queuecomplete: () => {\n      $('.dz-preview').remove();\n      $('.markdown-area').trigger('input');\n\n      $uploadingProgressContainer.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n  });\n\n  const child = $(dropzone[0]).children('textarea');\n\n  // removeAllFiles(true) stops uploading files (if any)\n  // and remove them from dropzone files queue.\n  $cancelButton.on('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dropzone.forElement($formDropzone.get(0)).removeAllFiles(true);\n  });\n\n  // If 'error' event is fired, we store a failed files,\n  // clear dropzone files queue, change status of failed files to undefined,\n  // and add that files to the dropzone files queue again.\n  // addFile() adds file to dropzone files queue and upload it.\n  $retryLink.on('click', (e) => {\n    const dropzoneInstance = Dropzone.forElement(e.target.closest('.js-main-target-form').querySelector('.div-dropzone'));\n    const failedFiles = dropzoneInstance.files;\n\n    e.preventDefault();\n\n    // 'true' parameter of removeAllFiles() cancels\n    // uploading of files that are being uploaded at the moment.\n    dropzoneInstance.removeAllFiles(true);\n\n    failedFiles.map((failedFile) => {\n      const file = failedFile;\n\n      if (file.status === Dropzone.ERROR) {\n        file.status = undefined;\n        file.accepted = undefined;\n      }\n\n      return dropzoneInstance.addFile(file);\n    });\n  });\n  // eslint-disable-next-line consistent-return\n  handlePaste = (event) => {\n    const pasteEvent = event.originalEvent;\n    if (pasteEvent.clipboardData && pasteEvent.clipboardData.items) {\n      const image = isImage(pasteEvent);\n      if (image) {\n        event.preventDefault();\n        const filename = getFilename(pasteEvent) || 'image.png';\n        const text = `{{${filename}}}`;\n        pasteText(text);\n        return uploadFile(image.getAsFile(), filename);\n      }\n    }\n  };\n\n  isImage = (data) => {\n    let i = 0;\n    while (i < data.clipboardData.items.length) {\n      const item = data.clipboardData.items[i];\n      if (item.type.indexOf('image') !== -1) {\n        return item;\n      }\n      i += 1;\n    }\n    return false;\n  };\n\n  pasteText = (text, shouldPad) => {\n    let formattedText = text;\n    if (shouldPad) {\n      formattedText += '\\n\\n';\n    }\n    const textarea = child.get(0);\n    const caretStart = textarea.selectionStart;\n    const caretEnd = textarea.selectionEnd;\n    const textEnd = $(child).val().length;\n    const beforeSelection = $(child).val().substring(0, caretStart);\n    const afterSelection = $(child).val().substring(caretEnd, textEnd);\n    $(child).val(beforeSelection + formattedText + afterSelection);\n    textarea.setSelectionRange(caretStart + formattedText.length, caretEnd + formattedText.length);\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    formTextarea.get(0).dispatchEvent(new Event('input'));\n    return formTextarea.trigger('input');\n  };\n\n  addFileToForm = (path) => {\n    $(form).append(`<input type=\"hidden\" name=\"files[]\" value=\"${_.escape(path)}\">`);\n  };\n\n  getFilename = (e) => {\n    let value;\n    if (window.clipboardData && window.clipboardData.getData) {\n      value = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      value = e.clipboardData.getData('text/plain');\n    }\n    value = value.split('\\r');\n    return value[0];\n  };\n\n  const showSpinner = () => $uploadingProgressContainer.removeClass('hide');\n\n  const closeSpinner = () => $uploadingProgressContainer.addClass('hide');\n\n  const showError = (message) => {\n    $uploadingErrorContainer.removeClass('hide');\n    $uploadingErrorMessage.html(message);\n  };\n\n  const closeAlertMessage = () => form.find('.div-dropzone-alert').alert('close');\n\n  const insertToTextArea = (filename, url) => {\n    const $child = $(child);\n    $child.val((index, val) => val.replace(`{{${filename}}}`, url));\n\n    $child.trigger('change');\n  };\n\n  uploadFile = (item, filename) => {\n    const formData = new FormData();\n    formData.append('file', item, filename);\n\n    showSpinner();\n    closeAlertMessage();\n\n    axios.post(uploadsPath, formData)\n      .then(({ data }) => {\n        const md = data.link.markdown;\n\n        insertToTextArea(filename, md);\n        closeSpinner();\n      })\n      .catch((e) => {\n        showError(e.response.data.message);\n        closeSpinner();\n      });\n  };\n\n  updateAttachingMessage = (files, messageContainer) => {\n    let attachingMessage;\n    const filesCount = files.filter(file => file.status === 'uploading' || file.status === 'queued').length;\n\n    // Dinamycally change uploading files text depending on files number in\n    // dropzone files queue.\n    if (filesCount > 1) {\n      attachingMessage = `Attaching ${filesCount} files -`;\n    } else {\n      attachingMessage = 'Attaching a file -';\n    }\n\n    messageContainer.text(attachingMessage);\n  };\n\n  form.find('.markdown-selector').click(function onMarkdownClick(e) {\n    e.preventDefault();\n    $(this).closest('.gfm-form').find('.div-dropzone').click();\n    formTextarea.focus();\n  });\n}\n","/* eslint-disable func-names, no-var, no-param-reassign, quotes, one-var, one-var-declaration-per-line, operator-assignment, no-else-return, prefer-template, prefer-arrow-callback, max-len, consistent-return, no-unused-vars, max-len */\nimport $ from 'jquery';\nimport { insertText } from '~/lib/utils/common_utils';\n\nfunction selectedText(text, textarea) {\n  return text.substring(textarea.selectionStart, textarea.selectionEnd);\n}\n\nfunction lineBefore(text, textarea) {\n  var split;\n  split = text.substring(0, textarea.selectionStart).trim().split('\\n');\n  return split[split.length - 1];\n}\n\nfunction lineAfter(text, textarea) {\n  return text.substring(textarea.selectionEnd).trim().split('\\n')[0];\n}\n\nfunction blockTagText(text, textArea, blockTag, selected) {\n  const before = lineBefore(text, textArea);\n  const after = lineAfter(text, textArea);\n  if (before === blockTag && after === blockTag) {\n    // To remove the block tag we have to select the line before & after\n    if (blockTag != null) {\n      textArea.selectionStart = textArea.selectionStart - (blockTag.length + 1);\n      textArea.selectionEnd = textArea.selectionEnd + (blockTag.length + 1);\n    }\n    return selected;\n  } else {\n    return blockTag + \"\\n\" + selected + \"\\n\" + blockTag;\n  }\n}\n\nfunction moveCursor(textArea, tag, wrapped, removedLastNewLine) {\n  var pos;\n  if (!textArea.setSelectionRange) {\n    return;\n  }\n  if (textArea.selectionStart === textArea.selectionEnd) {\n    if (wrapped) {\n      pos = textArea.selectionStart - tag.length;\n    } else {\n      pos = textArea.selectionStart;\n    }\n\n    if (removedLastNewLine) {\n      pos -= 1;\n    }\n\n    return textArea.setSelectionRange(pos, pos);\n  }\n}\n\nexport function insertMarkdownText(textArea, text, tag, blockTag, selected, wrap) {\n  var textToInsert, inserted, selectedSplit, startChar, removedLastNewLine, removedFirstNewLine, currentLineEmpty, lastNewLine;\n  removedLastNewLine = false;\n  removedFirstNewLine = false;\n  currentLineEmpty = false;\n\n  // Remove the first newline\n  if (selected.indexOf('\\n') === 0) {\n    removedFirstNewLine = true;\n    selected = selected.replace(/\\n+/, '');\n  }\n\n  // Remove the last newline\n  if (textArea.selectionEnd - textArea.selectionStart > selected.replace(/\\n$/, '').length) {\n    removedLastNewLine = true;\n    selected = selected.replace(/\\n$/, '');\n  }\n\n  selectedSplit = selected.split('\\n');\n\n  if (!wrap) {\n    lastNewLine = textArea.value.substr(0, textArea.selectionStart).lastIndexOf('\\n');\n\n    // Check whether the current line is empty or consists only of spaces(=handle as empty)\n    if (/^\\s*$/.test(textArea.value.substring(lastNewLine, textArea.selectionStart))) {\n      currentLineEmpty = true;\n    }\n  }\n\n  startChar = !wrap && !currentLineEmpty && textArea.selectionStart > 0 ? '\\n' : '';\n\n  if (selectedSplit.length > 1 && (!wrap || (blockTag != null && blockTag !== ''))) {\n    if (blockTag != null && blockTag !== '') {\n      textToInsert = blockTagText(text, textArea, blockTag, selected);\n    } else {\n      textToInsert = selectedSplit.map(function(val) {\n        if (val.indexOf(tag) === 0) {\n          return \"\" + (val.replace(tag, ''));\n        } else {\n          return \"\" + tag + val;\n        }\n      }).join('\\n');\n    }\n  } else {\n    textToInsert = \"\" + startChar + tag + selected + (wrap ? tag : ' ');\n  }\n\n  if (removedFirstNewLine) {\n    textToInsert = '\\n' + textToInsert;\n  }\n\n  if (removedLastNewLine) {\n    textToInsert += '\\n';\n  }\n\n  insertText(textArea, textToInsert);\n  return moveCursor(textArea, tag, wrap, removedLastNewLine);\n}\n\nfunction updateText(textArea, tag, blockTag, wrap) {\n  var $textArea, selected, text;\n  $textArea = $(textArea);\n  textArea = $textArea.get(0);\n  text = $textArea.val();\n  selected = selectedText(text, textArea);\n  $textArea.focus();\n  return insertMarkdownText(textArea, text, tag, blockTag, selected, wrap);\n}\n\nfunction replaceRange(s, start, end, substitute) {\n  return s.substring(0, start) + substitute + s.substring(end);\n}\n\nexport function addMarkdownListeners(form) {\n  return $('.js-md', form).off('click').on('click', function() {\n    const $this = $(this);\n    return updateText($this.closest('.md-area').find('textarea'), $this.data('mdTag'), $this.data('mdBlock'), !$this.data('mdPrepend'));\n  });\n}\n\nexport function removeMarkdownListeners(form) {\n  return $('.js-md', form).off('click');\n}\n","import $ from 'jquery';\nimport autosize from 'autosize';\nimport GfmAutoComplete, * as GFMConfig from './gfm_auto_complete';\nimport dropzoneInput from './dropzone_input';\nimport { addMarkdownListeners, removeMarkdownListeners } from './lib/utils/text_markdown';\n\nexport default class GLForm {\n  constructor(form, enableGFM = {}) {\n    this.form = form;\n    this.textarea = this.form.find('textarea.js-gfm-input');\n    this.enableGFM = Object.assign({}, GFMConfig.defaultAutocompleteConfig, enableGFM);\n    // Disable autocomplete for keywords which do not have dataSources available\n    const dataSources = (gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources) || {};\n    Object.keys(this.enableGFM).forEach(item => {\n      if (item !== 'emojis') {\n        this.enableGFM[item] = !!dataSources[item];\n      }\n    });\n    // Before we start, we should clean up any previous data for this form\n    this.destroy();\n    // Setup the form\n    this.setupForm();\n    this.form.data('glForm', this);\n  }\n\n  destroy() {\n    // Clean form listeners\n    this.clearEventListeners();\n    if (this.autoComplete) {\n      this.autoComplete.destroy();\n    }\n    this.form.data('glForm', null);\n  }\n\n  setupForm() {\n    const isNewForm = this.form.is(':not(.gfm-form)');\n    this.form.removeClass('js-new-note-form');\n    if (isNewForm) {\n      this.form.find('.div-dropzone').remove();\n      this.form.addClass('gfm-form');\n      // remove notify commit author checkbox for non-commit notes\n      gl.utils.disableButtonIfEmptyField(this.form.find('.js-note-text'), this.form.find('.js-comment-button, .js-note-new-discussion'));\n      this.autoComplete = new GfmAutoComplete(gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources);\n      this.autoComplete.setup(this.form.find('.js-gfm-input'), this.enableGFM);\n      dropzoneInput(this.form);\n      autosize(this.textarea);\n    }\n    // form and textarea event listeners\n    this.addEventListeners();\n    addMarkdownListeners(this.form);\n    // hide discard button\n    this.form.find('.js-note-discard').hide();\n    this.form.show();\n    if (this.isAutosizeable) this.setupAutosize();\n  }\n\n  setupAutosize() {\n    this.textarea.off('autosize:resized')\n      .on('autosize:resized', this.setHeightData.bind(this));\n\n    this.textarea.off('mouseup.autosize')\n      .on('mouseup.autosize', this.destroyAutosize.bind(this));\n\n    setTimeout(() => {\n      autosize(this.textarea);\n      this.textarea.css('resize', 'vertical');\n    }, 0);\n  }\n\n  setHeightData() {\n    this.textarea.data('height', this.textarea.outerHeight());\n  }\n\n  destroyAutosize() {\n    const outerHeight = this.textarea.outerHeight();\n\n    if (this.textarea.data('height') === outerHeight) return;\n\n    autosize.destroy(this.textarea);\n\n    this.textarea.data('height', outerHeight);\n    this.textarea.outerHeight(outerHeight);\n    this.textarea.css('max-height', window.outerHeight);\n  }\n\n  clearEventListeners() {\n    this.textarea.off('focus');\n    this.textarea.off('blur');\n    removeMarkdownListeners(this.form);\n  }\n\n  addEventListeners() {\n    this.textarea.on('focus', function focusTextArea() {\n      $(this).closest('.md-area').addClass('is-focused');\n    });\n    this.textarea.on('blur', function blurTextArea() {\n      $(this).closest('.md-area').removeClass('is-focused');\n    });\n  }\n}\n","/* eslint-disable func-names, wrap-iife, prefer-arrow-callback, no-unused-vars, consistent-return, camelcase, comma-dangle, max-len, class-methods-use-this */\n\n// Zen Mode (full screen) textarea\n//\n/*= provides zen_mode:enter */\n/*= provides zen_mode:leave */\n\nimport $ from 'jquery';\nimport 'vendor/jquery.scrollTo';\nimport Dropzone from 'dropzone';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/pause/mousetrap-pause';\n\nDropzone.autoDiscover = false;\n\n//\n// ### Events\n//\n// `zen_mode:enter`\n//\n// Fired when the \"Edit in fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-enter\n//\n// `zen_mode:leave`\n//\n// Fired when the \"Leave Fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-leave\n//\n\nexport default class ZenMode {\n  constructor() {\n    this.active_backdrop = null;\n    this.active_textarea = null;\n    $(document).on('click', '.js-zen-enter', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:enter');\n    });\n    $(document).on('click', '.js-zen-leave', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:leave');\n    });\n    $(document).on('zen_mode:enter', (function(_this) {\n      return function(e) {\n        return _this.enter($(e.target).closest('.md-area').find('.zen-backdrop'));\n      };\n    })(this));\n    $(document).on('zen_mode:leave', (function(_this) {\n      return function(e) {\n        return _this.exit();\n      };\n    })(this));\n    $(document).on('keydown', function(e) {\n      // Esc\n      if (e.keyCode === 27) {\n        e.preventDefault();\n        return $(document).trigger('zen_mode:leave');\n      }\n    });\n  }\n\n  enter(backdrop) {\n    Mousetrap.pause();\n    this.active_backdrop = $(backdrop);\n    this.active_backdrop.addClass('fullscreen');\n    this.active_textarea = this.active_backdrop.find('textarea');\n    // Prevent a user-resized textarea from persisting to fullscreen\n    this.active_textarea.removeAttr('style');\n    this.active_textarea.focus();\n  }\n\n  exit() {\n    if (this.active_textarea) {\n      Mousetrap.unpause();\n      this.active_textarea.closest('.zen-backdrop').removeClass('fullscreen');\n      this.scrollTo(this.active_textarea);\n      this.active_textarea = null;\n      this.active_backdrop = null;\n\n      const $dropzone = $('.div-dropzone');\n      if ($dropzone && !$dropzone.hasClass('js-invalid-dropzone')) {\n        Dropzone.forElement('.div-dropzone').enable();\n      }\n    }\n  }\n\n  scrollTo(zen_area) {\n    return $.scrollTo(zen_area, 0, {\n      offset: -150\n    });\n  }\n}\n","import $ from 'jquery';\nimport RefSelectDropdown from '../../../../ref_select_dropdown';\nimport ZenMode from '../../../../zen_mode';\nimport GLForm from '../../../../gl_form';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new ZenMode(); // eslint-disable-line no-new\n  new GLForm($('.tag-form')); // eslint-disable-line no-new\n  new RefSelectDropdown($('.js-branch-select')); // eslint-disable-line no-new\n});\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n */\n/* global Mousetrap:true */\nMousetrap = (function(Mousetrap) {\n    var self = Mousetrap,\n        _originalStopCallback = self.stopCallback,\n        enabled = true;\n\n    self.stopCallback = function(e, element, combo) {\n        if (!enabled) {\n            return true;\n        }\n\n        return _originalStopCallback(e, element, combo);\n    };\n\n    self.pause = function() {\n        enabled = false;\n    };\n\n    self.unpause = function() {\n        enabled = true;\n    };\n\n    return self;\n}) (Mousetrap);\n"],"sourceRoot":""}