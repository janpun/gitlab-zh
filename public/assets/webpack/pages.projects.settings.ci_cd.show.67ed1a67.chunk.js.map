{"version":3,"sources":["webpack:///./settings_panels.js","webpack:///./create_item_dropdown.js","webpack:///./toggle_buttons.js","webpack:///./behaviors/secret_values.js","webpack:///./ci_variable_list/ci_variable_list.js","webpack:///./ci_variable_list/ajax_variable_list.js","webpack:///./lib/utils/http_status.js","webpack:///./pages/projects/settings/ci_cd/show/index.js"],"names":["expandSection","$section","find","text","off","scrollTop","addClass","hasClass","one","removeClass","toggleSection","on","closeSection","initSettingsPanels","jquery__WEBPACK_IMPORTED_MODULE_0___default","each","i","elm","window","location","hash","$target","length","CreateItemDropdown","options","_classCallCheck","this","defaultToggleLabel","fieldName","onSelect","getDataOption","getData","getDataRemote","filterRemote","createNewItemFromValueOption","createNewItemFromValue","$dropdown","$dropdownContainer","parent","$dropdownFooter","$createButton","buildDropdown","bindEvents","toggleFooter","_this","glDropdown","data","bind","filterable","search","fields","selectable","toggleLabel","selected","underscore__WEBPACK_IMPORTED_MODULE_0___default","a","escape","title","item","id","onFilter","toggleCreateNewButton","clicked","e","preventDefault","html","val","onClickCreateWildcard","refreshData","selectRowAtIndex","remote","execute","term","callback","_this2","arguments","undefined","uniqueData","selectedItem","some","concat","newValue","toggleState","toggleClass","updateToggle","toggle","isOn","classList","setupToggleButtons","container","clickCallback","querySelectorAll","forEach","input","querySelector","Object","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","value","addEventListener","previousIsOn","setAttribute","Promise","resolve","then","catch","removeAttribute","trigger","_flash__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","SecretValues","_ref","_ref$valueSelector","valueSelector","_ref$placeholderSelec","placeholderSelector","revealButton","isRevealed","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_1__","dataset","secretRevealStatus","updateDom","onRevealButtonClicked","previousIsRevealed","values","placeholder","textContent","_locale__WEBPACK_IMPORTED_MODULE_0__","ALL_ENVIRONMENTS_STRING","createEnvironmentItem","VariableList","formField","$container","environmentDropdownMap","WeakMap","inputMap","selector","default","key","secret_value","protected","environment_scope","_destroy","secretValues","_behaviors_secret_values__WEBPACK_IMPORTED_MODULE_5__","init","index","rowEl","initRow","removeRow","currentTarget","closest","inputSelector","keys","map","name","join","$row","is","checkIfRowTouched","$lastRow","last","insertRow","_toggle_buttons__WEBPACK_IMPORTED_MODULE_3__","css","$environmentSelect","createItemDropdown","_create_item_dropdown__WEBPACK_IMPORTED_MODULE_4__","getEnvironmentValues","refreshDropdownData","clearDropdown","set","_this3","$rowClone","clone","removeAttr","entry","remove","after","row","attr","hide","_this4","$el","isEnabled","_this5","toArray","slice","resultant","$input","valueMap","reduce","prevValueMap","envInput","_extends","_this6","environmentDropdown","get","AjaxVariableList","saveButton","errorBox","_ref$formField","saveEndpoint","variableList","_ci_variable_list__WEBPACK_IMPORTED_MODULE_6__","onSaveClicked","loadingIcon","toggleEnableRow","_lib_utils_axios_utils__WEBPACK_IMPORTED_MODULE_1__","patch","variables_attributes","getAllData","validateStatus","status","_lib_utils_http_status__WEBPACK_IMPORTED_MODULE_5__","OK","MULTIPLE_CHOICES","BAD_REQUEST","res","errors","errorList","updateRowsWithPersistedVariables","variables","hideValues","innerHTML","errorString","_flash__WEBPACK_IMPORTED_MODULE_3__","persistedVariables","persistedVariableMap","variableMap","variable","destroyInput","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_4__","persistedVariable","__webpack_require__","d","__webpack_exports__","successCodes","httpStatusCodes","ABORTED","CREATED","ACCEPTED","NON_AUTHORITATIVE_INFORMATION","NO_CONTENT","RESET_CONTENT","PARTIAL_CONTENT","MULTI_STATUS","ALREADY_REPORTED","IM_USED","NOT_FOUND","document","_settings_panels__WEBPACK_IMPORTED_MODULE_0__","runnerToken","_behaviors_secret_values__WEBPACK_IMPORTED_MODULE_1__","variableListEl","_ci_variable_list_ajax_variable_list__WEBPACK_IMPORTED_MODULE_2__","autoDevOpsExtraSettings","instanceDefaultBadge","event","target","style","display","checked"],"mappings":"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","file":"pages.projects.settings.ci_cd.show.67ed1a67.chunk.js","sourcesContent":["import $ from 'jquery';\n\nfunction expandSection($section) {\n  $section.find('.js-settings-toggle').text('Collapse');\n  $section.find('.settings-content').off('scroll.expandSection').scrollTop(0);\n  $section.addClass('expanded');\n  if (!$section.hasClass('no-animate')) {\n    $section.addClass('animating')\n      .one('animationend.animateSection', () => $section.removeClass('animating'));\n  }\n}\n\nfunction closeSection($section) {\n  $section.find('.js-settings-toggle').text('Expand');\n  $section.find('.settings-content').on('scroll.expandSection', () => expandSection($section));\n  $section.removeClass('expanded');\n  if (!$section.hasClass('no-animate')) {\n    $section.addClass('animating')\n      .one('animationend.animateSection', () => $section.removeClass('animating'));\n  }\n}\n\nfunction toggleSection($section) {\n  $section.removeClass('no-animate');\n  if ($section.hasClass('expanded')) {\n    closeSection($section);\n  } else {\n    expandSection($section);\n  }\n}\n\nexport default function initSettingsPanels() {\n  $('.settings').each((i, elm) => {\n    const $section = $(elm);\n    $section.on('click.toggleSection', '.js-settings-toggle', () => toggleSection($section));\n\n    if (!$section.hasClass('expanded')) {\n      $section.find('.settings-content').on('scroll.expandSection', () => {\n        $section.removeClass('no-animate');\n        expandSection($section);\n      });\n    }\n  });\n\n  if (window.location.hash) {\n    const $target = $(window.location.hash);\n    if ($target.length && $target.hasClass('settings')) {\n      expandSection($target);\n    }\n  }\n}\n","import _ from 'underscore';\n\nexport default class CreateItemDropdown {\n  /**\n   * @param {Object} options containing\n   *                         `$dropdown` target element\n   *                          `onSelect` event callback\n   * $dropdown must be an element created using `dropdown_tag()` rails helper\n   */\n  constructor(options) {\n    this.defaultToggleLabel = options.defaultToggleLabel;\n    this.fieldName = options.fieldName;\n    this.onSelect = options.onSelect || (() => {});\n    this.getDataOption = options.getData;\n    this.getDataRemote = !!options.filterRemote;\n    this.createNewItemFromValueOption = options.createNewItemFromValue;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$createButton = this.$dropdownContainer.find('.js-dropdown-create-new-item');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.toggleFooter(true);\n  }\n\n  buildDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.getData.bind(this),\n      filterable: true,\n      filterRemote: this.getDataRemote,\n      search: {\n        fields: ['text'],\n      },\n      selectable: true,\n      toggleLabel(selected) {\n        return (selected && 'id' in selected) ? _.escape(selected.title) : this.defaultToggleLabel;\n      },\n      fieldName: this.fieldName,\n      text(item) {\n        return _.escape(item.text);\n      },\n      id(item) {\n        return _.escape(item.id);\n      },\n      onFilter: this.toggleCreateNewButton.bind(this),\n      clicked: (options) => {\n        options.e.preventDefault();\n        this.onSelect();\n      },\n    });\n  }\n\n  clearDropdown() {\n    this.$dropdownContainer.find('.dropdown-content').html('');\n    this.$dropdownContainer.find('.dropdown-input-field').val('');\n  }\n\n  bindEvents() {\n    this.$createButton.on('click', this.onClickCreateWildcard.bind(this));\n  }\n\n  onClickCreateWildcard(e) {\n    e.preventDefault();\n\n    this.refreshData();\n    this.$dropdown.data('glDropdown').selectRowAtIndex();\n  }\n\n  refreshData() {\n    // Refresh the dropdown's data, which ends up calling `getData`\n    this.$dropdown.data('glDropdown').remote.execute();\n  }\n\n  getData(term, callback) {\n    this.getDataOption(term, (data = []) => {\n      // Ensure the selected item isn't already in the data to avoid duplicates\n      const alreadyHasSelectedItem = this.selectedItem && data.some(item =>\n        item.id === this.selectedItem.id,\n      );\n\n      let uniqueData = data;\n      if (!alreadyHasSelectedItem) {\n        uniqueData = data.concat(this.selectedItem || []);\n      }\n\n      callback(uniqueData);\n    });\n  }\n\n  createNewItemFromValue(newValue) {\n    if (this.createNewItemFromValueOption) {\n      return this.createNewItemFromValueOption(newValue);\n    }\n\n    return {\n      title: newValue,\n      id: newValue,\n      text: newValue,\n    };\n  }\n\n  toggleCreateNewButton(newValue) {\n    if (newValue) {\n      this.selectedItem = this.createNewItemFromValue(newValue);\n\n      this.$dropdownContainer\n        .find('.js-dropdown-create-new-item code')\n        .text(newValue);\n    }\n\n    this.toggleFooter(!newValue);\n  }\n\n  toggleFooter(toggleState) {\n    this.$dropdownFooter.toggleClass('hidden', toggleState);\n  }\n}\n","import $ from 'jquery';\nimport Flash from './flash';\nimport { __ } from './locale';\nimport { convertPermissionToBoolean } from './lib/utils/common_utils';\n\n/*\n example HAML:\n ```\n  %button.js-project-feature-toggle.project-feature-toggle{ type: \"button\",\n    class: \"#{'is-checked' if enabled?}\",\n    'aria-label': _('Toggle Kubernetes Cluster') }\n    %input{ type: \"hidden\", class: 'js-project-feature-toggle-input', value: enabled? }\n  ```\n*/\n\nfunction updateToggle(toggle, isOn) {\n  toggle.classList.toggle('is-checked', isOn);\n}\n\nfunction onToggleClicked(toggle, input, clickCallback) {\n  const previousIsOn = convertPermissionToBoolean(input.value);\n\n  // Visually change the toggle and start loading\n  updateToggle(toggle, !previousIsOn);\n  toggle.setAttribute('disabled', true);\n  toggle.classList.toggle('is-loading', true);\n\n  Promise.resolve(clickCallback(!previousIsOn, toggle))\n    .then(() => {\n      // Actually change the input value\n      input.setAttribute('value', !previousIsOn);\n    })\n    .catch(() => {\n      // Revert the visuals if something goes wrong\n      updateToggle(toggle, previousIsOn);\n    })\n    .then(() => {\n      // Remove the loading indicator in any case\n      toggle.removeAttribute('disabled');\n      toggle.classList.toggle('is-loading', false);\n\n      $(input).trigger('trigger-change');\n    })\n    .catch(() => {\n      Flash(__('Something went wrong when toggling the button'));\n    });\n}\n\nexport default function setupToggleButtons(container, clickCallback = () => {}) {\n  const toggles = container.querySelectorAll('.js-project-feature-toggle');\n\n  toggles.forEach((toggle) => {\n    const input = toggle.querySelector('.js-project-feature-toggle-input');\n    const isOn = convertPermissionToBoolean(input.value);\n\n    // Get the visible toggle in sync with the hidden input\n    updateToggle(toggle, isOn);\n\n    toggle.addEventListener('click', onToggleClicked.bind(null, toggle, input, clickCallback));\n  });\n}\n","import { n__ } from '../locale';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\n\nexport default class SecretValues {\n  constructor({\n    container,\n    valueSelector = '.js-secret-value',\n    placeholderSelector = '.js-secret-value-placeholder',\n  }) {\n    this.container = container;\n    this.valueSelector = valueSelector;\n    this.placeholderSelector = placeholderSelector;\n  }\n\n  init() {\n    this.revealButton = this.container.querySelector('.js-secret-value-reveal-button');\n\n    if (this.revealButton) {\n      const isRevealed = convertPermissionToBoolean(this.revealButton.dataset.secretRevealStatus);\n      this.updateDom(isRevealed);\n\n      this.revealButton.addEventListener('click', this.onRevealButtonClicked.bind(this));\n    }\n  }\n\n  onRevealButtonClicked() {\n    const previousIsRevealed = convertPermissionToBoolean(\n      this.revealButton.dataset.secretRevealStatus,\n    );\n    this.updateDom(!previousIsRevealed);\n  }\n\n  updateDom(isRevealed) {\n    const values = this.container.querySelectorAll(this.valueSelector);\n    values.forEach((value) => {\n      value.classList.toggle('hide', !isRevealed);\n    });\n\n    const placeholders = this.container.querySelectorAll(this.placeholderSelector);\n    placeholders.forEach((placeholder) => {\n      placeholder.classList.toggle('hide', isRevealed);\n    });\n\n    this.revealButton.textContent = isRevealed ? n__('Hide value', 'Hide values', values.length) : n__('Reveal value', 'Reveal values', values.length);\n    this.revealButton.dataset.secretRevealStatus = isRevealed;\n  }\n}\n","import $ from 'jquery';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\nimport { s__ } from '../locale';\nimport setupToggleButtons from '../toggle_buttons';\nimport CreateItemDropdown from '../create_item_dropdown';\nimport SecretValues from '../behaviors/secret_values';\n\nconst ALL_ENVIRONMENTS_STRING = s__('CiVariable|All environments');\n\nfunction createEnvironmentItem(value) {\n  return {\n    title: value === '*' ? ALL_ENVIRONMENTS_STRING : value,\n    id: value,\n    text: value === '*' ? s__('CiVariable|* (All environments)') : value,\n  };\n}\n\nexport default class VariableList {\n  constructor({\n    container,\n    formField,\n  }) {\n    this.$container = $(container);\n    this.formField = formField;\n    this.environmentDropdownMap = new WeakMap();\n\n    this.inputMap = {\n      id: {\n        selector: '.js-ci-variable-input-id',\n        default: '',\n      },\n      key: {\n        selector: '.js-ci-variable-input-key',\n        default: '',\n      },\n      secret_value: {\n        selector: '.js-ci-variable-input-value',\n        default: '',\n      },\n      protected: {\n        selector: '.js-ci-variable-input-protected',\n        default: 'false',\n      },\n      environment_scope: {\n        // We can't use a `.js-` class here because\n        // gl_dropdown replaces the <input> and doesn't copy over the class\n        // See https://gitlab.com/gitlab-org/gitlab-ce/issues/42458\n        selector: `input[name=\"${this.formField}[variables_attributes][][environment_scope]\"]`,\n        default: '*',\n      },\n      _destroy: {\n        selector: '.js-ci-variable-input-destroy',\n        default: '',\n      },\n    };\n\n    this.secretValues = new SecretValues({\n      container: this.$container[0],\n      valueSelector: '.js-row:not(:last-child) .js-secret-value',\n      placeholderSelector: '.js-row:not(:last-child) .js-secret-value-placeholder',\n    });\n  }\n\n  init() {\n    this.bindEvents();\n    this.secretValues.init();\n  }\n\n  bindEvents() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      this.initRow(rowEl);\n    });\n\n    this.$container.on('click', '.js-row-remove-button', (e) => {\n      e.preventDefault();\n      this.removeRow($(e.currentTarget).closest('.js-row'));\n    });\n\n    const inputSelector = Object.keys(this.inputMap)\n      .map(name => this.inputMap[name].selector)\n      .join(',');\n\n    // Remove any empty rows except the last row\n    this.$container.on('blur', inputSelector, (e) => {\n      const $row = $(e.currentTarget).closest('.js-row');\n\n      if ($row.is(':not(:last-child)') && !this.checkIfRowTouched($row)) {\n        this.removeRow($row);\n      }\n    });\n\n    // Always make sure there is an empty last row\n    this.$container.on('input trigger-change', inputSelector, () => {\n      const $lastRow = this.$container.find('.js-row').last();\n\n      if (this.checkIfRowTouched($lastRow)) {\n        this.insertRow($lastRow);\n      }\n    });\n  }\n\n  initRow(rowEl) {\n    const $row = $(rowEl);\n\n    setupToggleButtons($row[0]);\n\n    // Reset the resizable textarea\n    $row.find(this.inputMap.secret_value.selector).css('height', '');\n\n    const $environmentSelect = $row.find('.js-variable-environment-toggle');\n    if ($environmentSelect.length) {\n      const createItemDropdown = new CreateItemDropdown({\n        $dropdown: $environmentSelect,\n        defaultToggleLabel: ALL_ENVIRONMENTS_STRING,\n        fieldName: `${this.formField}[variables_attributes][][environment_scope]`,\n        getData: (term, callback) => callback(this.getEnvironmentValues()),\n        createNewItemFromValue: createEnvironmentItem,\n        onSelect: () => {\n          // Refresh the other dropdowns in the variable list\n          // so they have the new value we just picked\n          this.refreshDropdownData();\n\n          $row.find(this.inputMap.environment_scope.selector).trigger('trigger-change');\n        },\n      });\n\n      // Clear out any data that might have been left-over from the row clone\n      createItemDropdown.clearDropdown();\n\n      this.environmentDropdownMap.set($row[0], createItemDropdown);\n    }\n  }\n\n  insertRow($row) {\n    const $rowClone = $row.clone();\n    $rowClone.removeAttr('data-is-persisted');\n\n    // Reset the inputs to their defaults\n    Object.keys(this.inputMap).forEach((name) => {\n      const entry = this.inputMap[name];\n      $rowClone.find(entry.selector).val(entry.default);\n    });\n\n    // Close any dropdowns\n    $rowClone.find('.dropdown-menu.show').each((index, $dropdown) => {\n      $dropdown.classList.remove('show');\n    });\n\n    this.initRow($rowClone);\n\n    $row.after($rowClone);\n  }\n\n  removeRow(row) {\n    const $row = $(row);\n    const isPersisted = convertPermissionToBoolean($row.attr('data-is-persisted'));\n\n    if (isPersisted) {\n      $row.hide();\n      $row\n        // eslint-disable-next-line no-underscore-dangle\n        .find(this.inputMap._destroy.selector)\n        .val(true);\n    } else {\n      $row.remove();\n    }\n\n    // Refresh the other dropdowns in the variable list\n    // so any value with the variable deleted is gone\n    this.refreshDropdownData();\n  }\n\n  checkIfRowTouched($row) {\n    return Object.keys(this.inputMap).some((name) => {\n      const entry = this.inputMap[name];\n      const $el = $row.find(entry.selector);\n      return $el.length && $el.val() !== entry.default;\n    });\n  }\n\n  toggleEnableRow(isEnabled = true) {\n    this.$container.find(this.inputMap.key.selector).attr('disabled', !isEnabled);\n    this.$container.find('.js-row-remove-button').attr('disabled', !isEnabled);\n  }\n\n  hideValues() {\n    this.secretValues.updateDom(false);\n  }\n\n  getAllData() {\n    // Ignore the last empty row because we don't want to try persist\n    // a blank variable and run into validation problems.\n    const validRows = this.$container.find('.js-row').toArray().slice(0, -1);\n\n    return validRows.map((rowEl) => {\n      const resultant = {};\n      Object.keys(this.inputMap).forEach((name) => {\n        const entry = this.inputMap[name];\n        const $input = $(rowEl).find(entry.selector);\n        if ($input.length) {\n          resultant[name] = $input.val();\n        }\n      });\n\n      return resultant;\n    });\n  }\n\n  getEnvironmentValues() {\n    const valueMap = this.$container.find(this.inputMap.environment_scope.selector).toArray()\n      .reduce((prevValueMap, envInput) => ({\n        ...prevValueMap,\n        [envInput.value]: envInput.value,\n      }), {});\n\n    return Object.keys(valueMap).map(createEnvironmentItem);\n  }\n\n  refreshDropdownData() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      const environmentDropdown = this.environmentDropdownMap.get(rowEl);\n      if (environmentDropdown) {\n        environmentDropdown.refreshData();\n      }\n    });\n  }\n}\n","import _ from 'underscore';\nimport axios from '../lib/utils/axios_utils';\nimport { s__ } from '../locale';\nimport Flash from '../flash';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\nimport statusCodes from '../lib/utils/http_status';\nimport VariableList from './ci_variable_list';\n\nfunction generateErrorBoxContent(errors) {\n  const errorList = [].concat(errors).map(errorString => `\n    <li>\n      ${_.escape(errorString)}\n    </li>\n  `);\n\n  return `\n    <p>\n      ${s__('CiVariable|Validation failed')}\n    </p>\n    <ul>\n      ${errorList.join('')}\n    </ul>\n  `;\n}\n\n// Used for the variable list on CI/CD projects/groups settings page\nexport default class AjaxVariableList {\n  constructor({\n    container,\n    saveButton,\n    errorBox,\n    formField = 'variables',\n    saveEndpoint,\n  }) {\n    this.container = container;\n    this.saveButton = saveButton;\n    this.errorBox = errorBox;\n    this.saveEndpoint = saveEndpoint;\n\n    this.variableList = new VariableList({\n      container: this.container,\n      formField,\n    });\n\n    this.bindEvents();\n    this.variableList.init();\n  }\n\n  bindEvents() {\n    this.saveButton.addEventListener('click', this.onSaveClicked.bind(this));\n  }\n\n  onSaveClicked() {\n    const loadingIcon = this.saveButton.querySelector('.js-secret-variables-save-loading-icon');\n    loadingIcon.classList.toggle('hide', false);\n    this.errorBox.classList.toggle('hide', true);\n    // We use this to prevent a user from changing a key before we have a chance\n    // to match it up in `updateRowsWithPersistedVariables`\n    this.variableList.toggleEnableRow(false);\n\n    return axios.patch(this.saveEndpoint, {\n      variables_attributes: this.variableList.getAllData(),\n    }, {\n      // We want to be able to process the `res.data` from a 400 error response\n      // and print the validation messages such as duplicate variable keys\n      validateStatus: status => (\n          status >= statusCodes.OK &&\n          status < statusCodes.MULTIPLE_CHOICES\n        ) ||\n        status === statusCodes.BAD_REQUEST,\n    })\n      .then((res) => {\n        loadingIcon.classList.toggle('hide', true);\n        this.variableList.toggleEnableRow(true);\n\n        if (res.status === statusCodes.OK && res.data) {\n          this.updateRowsWithPersistedVariables(res.data.variables);\n          this.variableList.hideValues();\n        } else if (res.status === statusCodes.BAD_REQUEST) {\n          // Validation failed\n          this.errorBox.innerHTML = generateErrorBoxContent(res.data);\n          this.errorBox.classList.toggle('hide', false);\n        }\n      })\n      .catch(() => {\n        loadingIcon.classList.toggle('hide', true);\n        this.variableList.toggleEnableRow(true);\n        Flash(s__('CiVariable|Error occured while saving variables'));\n      });\n  }\n\n  updateRowsWithPersistedVariables(persistedVariables = []) {\n    const persistedVariableMap = [].concat(persistedVariables).reduce((variableMap, variable) => ({\n      ...variableMap,\n      [variable.key]: variable,\n    }), {});\n\n    this.container.querySelectorAll('.js-row').forEach((row) => {\n      // If we submitted a row that was destroyed, remove it so we don't try\n      // to destroy it again which would cause a BE error\n      const destroyInput = row.querySelector('.js-ci-variable-input-destroy');\n      if (convertPermissionToBoolean(destroyInput.value)) {\n        row.remove();\n      // Update the ID input so any future edits and `_destroy` will apply on the BE\n      } else {\n        const key = row.querySelector('.js-ci-variable-input-key').value;\n        const persistedVariable = persistedVariableMap[key];\n\n        if (persistedVariable) {\n          // eslint-disable-next-line no-param-reassign\n          row.querySelector('.js-ci-variable-input-id').value = persistedVariable.id;\n          row.setAttribute('data-is-persisted', 'true');\n        }\n      }\n    });\n  }\n}\n","/**\n * exports HTTP status codes\n */\n\nconst httpStatusCodes = {\n  ABORTED: 0,\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n  MULTI_STATUS: 207,\n  ALREADY_REPORTED: 208,\n  IM_USED: 226,\n  MULTIPLE_CHOICES: 300,\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n};\n\nexport const successCodes = [\n  httpStatusCodes.OK,\n  httpStatusCodes.CREATED,\n  httpStatusCodes.ACCEPTED,\n  httpStatusCodes.NON_AUTHORITATIVE_INFORMATION,\n  httpStatusCodes.NO_CONTENT,\n  httpStatusCodes.RESET_CONTENT,\n  httpStatusCodes.PARTIAL_CONTENT,\n  httpStatusCodes.MULTI_STATUS,\n  httpStatusCodes.ALREADY_REPORTED,\n  httpStatusCodes.IM_USED,\n];\n\nexport default httpStatusCodes;\n","import initSettingsPanels from '~/settings_panels';\nimport SecretValues from '~/behaviors/secret_values';\nimport AjaxVariableList from '~/ci_variable_list/ajax_variable_list';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Initialize expandable settings panels\n  initSettingsPanels();\n\n  const runnerToken = document.querySelector('.js-secret-runner-token');\n  if (runnerToken) {\n    const runnerTokenSecretValue = new SecretValues({\n      container: runnerToken,\n    });\n    runnerTokenSecretValue.init();\n  }\n\n  const variableListEl = document.querySelector('.js-ci-variable-list-section');\n  // eslint-disable-next-line no-new\n  new AjaxVariableList({\n    container: variableListEl,\n    saveButton: variableListEl.querySelector('.js-secret-variables-save-button'),\n    errorBox: variableListEl.querySelector('.js-ci-variable-error-box'),\n    saveEndpoint: variableListEl.dataset.saveEndpoint,\n  });\n\n  // hide extra auto devops settings based checkbox state\n  const autoDevOpsExtraSettings = document.querySelector('.js-extra-settings');\n  const instanceDefaultBadge = document.querySelector('.js-instance-default-badge');\n  document.querySelector('.js-toggle-extra-settings').addEventListener('click', event => {\n    const { target } = event;\n    if (instanceDefaultBadge) instanceDefaultBadge.style.display = 'none';\n    autoDevOpsExtraSettings.classList.toggle('hidden', !target.checked);\n  });\n});\n"],"sourceRoot":""}