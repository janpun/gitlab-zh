{"version":3,"sources":["webpack:///./create_item_dropdown.js","webpack:///./toggle_buttons.js","webpack:///./behaviors/secret_values.js","webpack:///./ci_variable_list/ci_variable_list.js","webpack:///./pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue?4971","webpack:///pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue","webpack:///./pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue","webpack:///./pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue?865e","webpack:///./pages/projects/pipeline_schedules/shared/components/timezone_dropdown.js","webpack:///./pages/projects/pipeline_schedules/shared/components/target_branch_dropdown.js","webpack:///./pages/projects/pipeline_schedules/shared/init_form.js","webpack:///./ci_variable_list/native_form_variable_list.js"],"names":["CreateItemDropdown","options","_classCallCheck","this","defaultToggleLabel","fieldName","onSelect","getDataOption","getData","getDataRemote","filterRemote","createNewItemFromValueOption","createNewItemFromValue","$dropdown","$dropdownContainer","parent","$dropdownFooter","find","$createButton","buildDropdown","bindEvents","toggleFooter","_this","glDropdown","data","bind","filterable","search","fields","selectable","toggleLabel","selected","underscore__WEBPACK_IMPORTED_MODULE_0___default","a","escape","title","text","item","id","onFilter","toggleCreateNewButton","clicked","e","preventDefault","html","val","on","onClickCreateWildcard","refreshData","selectRowAtIndex","remote","execute","term","callback","_this2","arguments","length","undefined","uniqueData","selectedItem","some","concat","newValue","toggleState","toggleClass","updateToggle","toggle","isOn","classList","setupToggleButtons","container","clickCallback","querySelectorAll","forEach","input","querySelector","Object","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","value","addEventListener","previousIsOn","setAttribute","Promise","resolve","then","catch","removeAttribute","jquery__WEBPACK_IMPORTED_MODULE_0___default","trigger","_flash__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","SecretValues","_ref","_ref$valueSelector","valueSelector","_ref$placeholderSelec","placeholderSelector","revealButton","isRevealed","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_1__","dataset","secretRevealStatus","updateDom","onRevealButtonClicked","previousIsRevealed","values","placeholder","textContent","_locale__WEBPACK_IMPORTED_MODULE_0__","ALL_ENVIRONMENTS_STRING","createEnvironmentItem","VariableList","formField","$container","environmentDropdownMap","WeakMap","inputMap","selector","default","key","secret_value","protected","environment_scope","_destroy","secretValues","_behaviors_secret_values__WEBPACK_IMPORTED_MODULE_5__","init","each","index","rowEl","initRow","removeRow","currentTarget","closest","inputSelector","keys","map","name","join","$row","is","checkIfRowTouched","$lastRow","last","insertRow","_toggle_buttons__WEBPACK_IMPORTED_MODULE_3__","css","$environmentSelect","createItemDropdown","_create_item_dropdown__WEBPACK_IMPORTED_MODULE_4__","getEnvironmentValues","refreshDropdownData","clearDropdown","set","_this3","$rowClone","clone","removeAttr","entry","remove","after","row","attr","hide","_this4","$el","isEnabled","_this5","toArray","slice","resultant","$input","valueMap","reduce","prevValueMap","envInput","_extends","_this6","environmentDropdown","get","components_interval_pattern_inputvue_type_script_lang_js","props","initialCronInterval","type","String","required","inputNameAttribute","cronInterval","cronIntervalPresets","everyDay","everyWeek","everyMonth","cronSyntaxUrl","customInputEnabled","computed","intervalIsPreset","underscore_default","contains","isEditable","watch","$nextTick","gl","pipelineScheduleFieldErrors","updateFormValidityState","created","enableCustomInput","methods","toggleCustomInput","shouldEnable","interval_pattern_input","componentNormalizer","_vm","_h","$createElement","_c","_self","staticClass","attrs","domProps","checked","click","$event","_v","for","_s","s__","href","target","__","directives","rawName","expression","_q","change","disabled","composing","TimezoneDropdown","jquery_default","$dropdownToggle","timezoneData","initDefaultTimezone","initDropdown","cfg","updateInputValue","formatTimezone","setDropdownToggle","offset","prefix","Math","abs","formatUtcOffset","initialValue","selectedObj","identifier","TargetBranchDropdown","target_branch_dropdown_classCallCheck","initDefaultBranch","formatBranchesList","defaultBranch","vue_esm","use","translate","intervalPatternMount","document","getElementById","initialInterval","el","components","intervalPatternInput","render","createElement","formElement","timezoneDropdown","timezone_dropdown","targetBranchDropdown","target_branch_dropdown","gl_field_errors","native_form_variable_list","setupNativeFormVariableList","_ref$formField","variableList","_ci_variable_list__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"commons~pages.projects.pipeline_schedules.create~pages.projects.pipeline_schedules.edit~pages.projec~7a8162b6.fbaf6b2f.chunk.js","sourcesContent":["import _ from 'underscore';\n\nexport default class CreateItemDropdown {\n  /**\n   * @param {Object} options containing\n   *                         `$dropdown` target element\n   *                          `onSelect` event callback\n   * $dropdown must be an element created using `dropdown_tag()` rails helper\n   */\n  constructor(options) {\n    this.defaultToggleLabel = options.defaultToggleLabel;\n    this.fieldName = options.fieldName;\n    this.onSelect = options.onSelect || (() => {});\n    this.getDataOption = options.getData;\n    this.getDataRemote = !!options.filterRemote;\n    this.createNewItemFromValueOption = options.createNewItemFromValue;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$createButton = this.$dropdownContainer.find('.js-dropdown-create-new-item');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.toggleFooter(true);\n  }\n\n  buildDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.getData.bind(this),\n      filterable: true,\n      filterRemote: this.getDataRemote,\n      search: {\n        fields: ['text'],\n      },\n      selectable: true,\n      toggleLabel(selected) {\n        return (selected && 'id' in selected) ? _.escape(selected.title) : this.defaultToggleLabel;\n      },\n      fieldName: this.fieldName,\n      text(item) {\n        return _.escape(item.text);\n      },\n      id(item) {\n        return _.escape(item.id);\n      },\n      onFilter: this.toggleCreateNewButton.bind(this),\n      clicked: (options) => {\n        options.e.preventDefault();\n        this.onSelect();\n      },\n    });\n  }\n\n  clearDropdown() {\n    this.$dropdownContainer.find('.dropdown-content').html('');\n    this.$dropdownContainer.find('.dropdown-input-field').val('');\n  }\n\n  bindEvents() {\n    this.$createButton.on('click', this.onClickCreateWildcard.bind(this));\n  }\n\n  onClickCreateWildcard(e) {\n    e.preventDefault();\n\n    this.refreshData();\n    this.$dropdown.data('glDropdown').selectRowAtIndex();\n  }\n\n  refreshData() {\n    // Refresh the dropdown's data, which ends up calling `getData`\n    this.$dropdown.data('glDropdown').remote.execute();\n  }\n\n  getData(term, callback) {\n    this.getDataOption(term, (data = []) => {\n      // Ensure the selected item isn't already in the data to avoid duplicates\n      const alreadyHasSelectedItem = this.selectedItem && data.some(item =>\n        item.id === this.selectedItem.id,\n      );\n\n      let uniqueData = data;\n      if (!alreadyHasSelectedItem) {\n        uniqueData = data.concat(this.selectedItem || []);\n      }\n\n      callback(uniqueData);\n    });\n  }\n\n  createNewItemFromValue(newValue) {\n    if (this.createNewItemFromValueOption) {\n      return this.createNewItemFromValueOption(newValue);\n    }\n\n    return {\n      title: newValue,\n      id: newValue,\n      text: newValue,\n    };\n  }\n\n  toggleCreateNewButton(newValue) {\n    if (newValue) {\n      this.selectedItem = this.createNewItemFromValue(newValue);\n\n      this.$dropdownContainer\n        .find('.js-dropdown-create-new-item code')\n        .text(newValue);\n    }\n\n    this.toggleFooter(!newValue);\n  }\n\n  toggleFooter(toggleState) {\n    this.$dropdownFooter.toggleClass('hidden', toggleState);\n  }\n}\n","import $ from 'jquery';\nimport Flash from './flash';\nimport { __ } from './locale';\nimport { convertPermissionToBoolean } from './lib/utils/common_utils';\n\n/*\n example HAML:\n ```\n  %button.js-project-feature-toggle.project-feature-toggle{ type: \"button\",\n    class: \"#{'is-checked' if enabled?}\",\n    'aria-label': _('Toggle Kubernetes Cluster') }\n    %input{ type: \"hidden\", class: 'js-project-feature-toggle-input', value: enabled? }\n  ```\n*/\n\nfunction updateToggle(toggle, isOn) {\n  toggle.classList.toggle('is-checked', isOn);\n}\n\nfunction onToggleClicked(toggle, input, clickCallback) {\n  const previousIsOn = convertPermissionToBoolean(input.value);\n\n  // Visually change the toggle and start loading\n  updateToggle(toggle, !previousIsOn);\n  toggle.setAttribute('disabled', true);\n  toggle.classList.toggle('is-loading', true);\n\n  Promise.resolve(clickCallback(!previousIsOn, toggle))\n    .then(() => {\n      // Actually change the input value\n      input.setAttribute('value', !previousIsOn);\n    })\n    .catch(() => {\n      // Revert the visuals if something goes wrong\n      updateToggle(toggle, previousIsOn);\n    })\n    .then(() => {\n      // Remove the loading indicator in any case\n      toggle.removeAttribute('disabled');\n      toggle.classList.toggle('is-loading', false);\n\n      $(input).trigger('trigger-change');\n    })\n    .catch(() => {\n      Flash(__('Something went wrong when toggling the button'));\n    });\n}\n\nexport default function setupToggleButtons(container, clickCallback = () => {}) {\n  const toggles = container.querySelectorAll('.js-project-feature-toggle');\n\n  toggles.forEach((toggle) => {\n    const input = toggle.querySelector('.js-project-feature-toggle-input');\n    const isOn = convertPermissionToBoolean(input.value);\n\n    // Get the visible toggle in sync with the hidden input\n    updateToggle(toggle, isOn);\n\n    toggle.addEventListener('click', onToggleClicked.bind(null, toggle, input, clickCallback));\n  });\n}\n","import { n__ } from '../locale';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\n\nexport default class SecretValues {\n  constructor({\n    container,\n    valueSelector = '.js-secret-value',\n    placeholderSelector = '.js-secret-value-placeholder',\n  }) {\n    this.container = container;\n    this.valueSelector = valueSelector;\n    this.placeholderSelector = placeholderSelector;\n  }\n\n  init() {\n    this.revealButton = this.container.querySelector('.js-secret-value-reveal-button');\n\n    if (this.revealButton) {\n      const isRevealed = convertPermissionToBoolean(this.revealButton.dataset.secretRevealStatus);\n      this.updateDom(isRevealed);\n\n      this.revealButton.addEventListener('click', this.onRevealButtonClicked.bind(this));\n    }\n  }\n\n  onRevealButtonClicked() {\n    const previousIsRevealed = convertPermissionToBoolean(\n      this.revealButton.dataset.secretRevealStatus,\n    );\n    this.updateDom(!previousIsRevealed);\n  }\n\n  updateDom(isRevealed) {\n    const values = this.container.querySelectorAll(this.valueSelector);\n    values.forEach((value) => {\n      value.classList.toggle('hide', !isRevealed);\n    });\n\n    const placeholders = this.container.querySelectorAll(this.placeholderSelector);\n    placeholders.forEach((placeholder) => {\n      placeholder.classList.toggle('hide', isRevealed);\n    });\n\n    this.revealButton.textContent = isRevealed ? n__('Hide value', 'Hide values', values.length) : n__('Reveal value', 'Reveal values', values.length);\n    this.revealButton.dataset.secretRevealStatus = isRevealed;\n  }\n}\n","import $ from 'jquery';\nimport { convertPermissionToBoolean } from '../lib/utils/common_utils';\nimport { s__ } from '../locale';\nimport setupToggleButtons from '../toggle_buttons';\nimport CreateItemDropdown from '../create_item_dropdown';\nimport SecretValues from '../behaviors/secret_values';\n\nconst ALL_ENVIRONMENTS_STRING = s__('CiVariable|All environments');\n\nfunction createEnvironmentItem(value) {\n  return {\n    title: value === '*' ? ALL_ENVIRONMENTS_STRING : value,\n    id: value,\n    text: value === '*' ? s__('CiVariable|* (All environments)') : value,\n  };\n}\n\nexport default class VariableList {\n  constructor({\n    container,\n    formField,\n  }) {\n    this.$container = $(container);\n    this.formField = formField;\n    this.environmentDropdownMap = new WeakMap();\n\n    this.inputMap = {\n      id: {\n        selector: '.js-ci-variable-input-id',\n        default: '',\n      },\n      key: {\n        selector: '.js-ci-variable-input-key',\n        default: '',\n      },\n      secret_value: {\n        selector: '.js-ci-variable-input-value',\n        default: '',\n      },\n      protected: {\n        selector: '.js-ci-variable-input-protected',\n        default: 'false',\n      },\n      environment_scope: {\n        // We can't use a `.js-` class here because\n        // gl_dropdown replaces the <input> and doesn't copy over the class\n        // See https://gitlab.com/gitlab-org/gitlab-ce/issues/42458\n        selector: `input[name=\"${this.formField}[variables_attributes][][environment_scope]\"]`,\n        default: '*',\n      },\n      _destroy: {\n        selector: '.js-ci-variable-input-destroy',\n        default: '',\n      },\n    };\n\n    this.secretValues = new SecretValues({\n      container: this.$container[0],\n      valueSelector: '.js-row:not(:last-child) .js-secret-value',\n      placeholderSelector: '.js-row:not(:last-child) .js-secret-value-placeholder',\n    });\n  }\n\n  init() {\n    this.bindEvents();\n    this.secretValues.init();\n  }\n\n  bindEvents() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      this.initRow(rowEl);\n    });\n\n    this.$container.on('click', '.js-row-remove-button', (e) => {\n      e.preventDefault();\n      this.removeRow($(e.currentTarget).closest('.js-row'));\n    });\n\n    const inputSelector = Object.keys(this.inputMap)\n      .map(name => this.inputMap[name].selector)\n      .join(',');\n\n    // Remove any empty rows except the last row\n    this.$container.on('blur', inputSelector, (e) => {\n      const $row = $(e.currentTarget).closest('.js-row');\n\n      if ($row.is(':not(:last-child)') && !this.checkIfRowTouched($row)) {\n        this.removeRow($row);\n      }\n    });\n\n    // Always make sure there is an empty last row\n    this.$container.on('input trigger-change', inputSelector, () => {\n      const $lastRow = this.$container.find('.js-row').last();\n\n      if (this.checkIfRowTouched($lastRow)) {\n        this.insertRow($lastRow);\n      }\n    });\n  }\n\n  initRow(rowEl) {\n    const $row = $(rowEl);\n\n    setupToggleButtons($row[0]);\n\n    // Reset the resizable textarea\n    $row.find(this.inputMap.secret_value.selector).css('height', '');\n\n    const $environmentSelect = $row.find('.js-variable-environment-toggle');\n    if ($environmentSelect.length) {\n      const createItemDropdown = new CreateItemDropdown({\n        $dropdown: $environmentSelect,\n        defaultToggleLabel: ALL_ENVIRONMENTS_STRING,\n        fieldName: `${this.formField}[variables_attributes][][environment_scope]`,\n        getData: (term, callback) => callback(this.getEnvironmentValues()),\n        createNewItemFromValue: createEnvironmentItem,\n        onSelect: () => {\n          // Refresh the other dropdowns in the variable list\n          // so they have the new value we just picked\n          this.refreshDropdownData();\n\n          $row.find(this.inputMap.environment_scope.selector).trigger('trigger-change');\n        },\n      });\n\n      // Clear out any data that might have been left-over from the row clone\n      createItemDropdown.clearDropdown();\n\n      this.environmentDropdownMap.set($row[0], createItemDropdown);\n    }\n  }\n\n  insertRow($row) {\n    const $rowClone = $row.clone();\n    $rowClone.removeAttr('data-is-persisted');\n\n    // Reset the inputs to their defaults\n    Object.keys(this.inputMap).forEach((name) => {\n      const entry = this.inputMap[name];\n      $rowClone.find(entry.selector).val(entry.default);\n    });\n\n    // Close any dropdowns\n    $rowClone.find('.dropdown-menu.show').each((index, $dropdown) => {\n      $dropdown.classList.remove('show');\n    });\n\n    this.initRow($rowClone);\n\n    $row.after($rowClone);\n  }\n\n  removeRow(row) {\n    const $row = $(row);\n    const isPersisted = convertPermissionToBoolean($row.attr('data-is-persisted'));\n\n    if (isPersisted) {\n      $row.hide();\n      $row\n        // eslint-disable-next-line no-underscore-dangle\n        .find(this.inputMap._destroy.selector)\n        .val(true);\n    } else {\n      $row.remove();\n    }\n\n    // Refresh the other dropdowns in the variable list\n    // so any value with the variable deleted is gone\n    this.refreshDropdownData();\n  }\n\n  checkIfRowTouched($row) {\n    return Object.keys(this.inputMap).some((name) => {\n      const entry = this.inputMap[name];\n      const $el = $row.find(entry.selector);\n      return $el.length && $el.val() !== entry.default;\n    });\n  }\n\n  toggleEnableRow(isEnabled = true) {\n    this.$container.find(this.inputMap.key.selector).attr('disabled', !isEnabled);\n    this.$container.find('.js-row-remove-button').attr('disabled', !isEnabled);\n  }\n\n  hideValues() {\n    this.secretValues.updateDom(false);\n  }\n\n  getAllData() {\n    // Ignore the last empty row because we don't want to try persist\n    // a blank variable and run into validation problems.\n    const validRows = this.$container.find('.js-row').toArray().slice(0, -1);\n\n    return validRows.map((rowEl) => {\n      const resultant = {};\n      Object.keys(this.inputMap).forEach((name) => {\n        const entry = this.inputMap[name];\n        const $input = $(rowEl).find(entry.selector);\n        if ($input.length) {\n          resultant[name] = $input.val();\n        }\n      });\n\n      return resultant;\n    });\n  }\n\n  getEnvironmentValues() {\n    const valueMap = this.$container.find(this.inputMap.environment_scope.selector).toArray()\n      .reduce((prevValueMap, envInput) => ({\n        ...prevValueMap,\n        [envInput.value]: envInput.value,\n      }), {});\n\n    return Object.keys(valueMap).map(createEnvironmentItem);\n  }\n\n  refreshDropdownData() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      const environmentDropdown = this.environmentDropdownMap.get(rowEl);\n      if (environmentDropdown) {\n        environmentDropdown.refreshData();\n      }\n    });\n  }\n}\n","import mod from \"-!../../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interval_pattern_input.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interval_pattern_input.vue?vue&type=script&lang=js\"","<script>\n  import _ from 'underscore';\n\n  export default {\n    props: {\n      initialCronInterval: {\n        type: String,\n        required: false,\n        default: '',\n      },\n    },\n    data() {\n      return {\n        inputNameAttribute: 'schedule[cron]',\n        cronInterval: this.initialCronInterval,\n        cronIntervalPresets: {\n          everyDay: '0 4 * * *',\n          everyWeek: '0 4 * * 0',\n          everyMonth: '0 4 1 * *',\n        },\n        cronSyntaxUrl: 'https://en.wikipedia.org/wiki/Cron',\n        customInputEnabled: false,\n      };\n    },\n    computed: {\n      intervalIsPreset() {\n        return _.contains(this.cronIntervalPresets, this.cronInterval);\n      },\n      // The text input is editable when there's a custom interval, or when it's\n      // a preset interval and the user clicks the 'custom' radio button\n      isEditable() {\n        return !!(this.customInputEnabled || !this.intervalIsPreset);\n      },\n    },\n    watch: {\n      cronInterval() {\n        // updates field validation state when model changes, as\n        // glFieldError only updates on input.\n        this.$nextTick(() => {\n          gl.pipelineScheduleFieldErrors.updateFormValidityState();\n        });\n      },\n    },\n    created() {\n      if (this.intervalIsPreset) {\n        this.enableCustomInput = false;\n      }\n    },\n    methods: {\n      toggleCustomInput(shouldEnable) {\n        this.customInputEnabled = shouldEnable;\n\n        if (shouldEnable) {\n          // We need to change the value so other radios don't remain selected\n          // because the model (cronInterval) hasn't changed. The server trims it.\n          this.cronInterval = `${this.cronInterval} `;\n        }\n      },\n    },\n  };\n</script>\n\n<template>\n  <div class=\"interval-pattern-form-group\">\n    <div class=\"cron-preset-radio-input\">\n      <input\n        id=\"custom\"\n        :name=\"inputNameAttribute\"\n        :value=\"cronInterval\"\n        :checked=\"isEditable\"\n        class=\"label-bold\"\n        type=\"radio\"\n        @click=\"toggleCustomInput(true)\"\n      />\n\n      <label for=\"custom\">\n        {{ s__('PipelineSheduleIntervalPattern|Custom') }}\n      </label>\n\n      <span class=\"cron-syntax-link-wrap\">\n        (<a\n          :href=\"cronSyntaxUrl\"\n          target=\"_blank\"\n        >\n          {{ __('Cron syntax') }}\n        </a>)\n      </span>\n    </div>\n\n    <div class=\"cron-preset-radio-input\">\n      <input\n        id=\"every-day\"\n        v-model=\"cronInterval\"\n        :name=\"inputNameAttribute\"\n        :value=\"cronIntervalPresets.everyDay\"\n        class=\"label-bold\"\n        type=\"radio\"\n        @click=\"toggleCustomInput(false)\"\n      />\n\n      <label\n        class=\"label-bold\"\n        for=\"every-day\"\n      >\n        {{ __('Every day (at 4:00am)') }}\n      </label>\n    </div>\n\n    <div class=\"cron-preset-radio-input\">\n      <input\n        id=\"every-week\"\n        v-model=\"cronInterval\"\n        :name=\"inputNameAttribute\"\n        :value=\"cronIntervalPresets.everyWeek\"\n        class=\"label-bold\"\n        type=\"radio\"\n        @click=\"toggleCustomInput(false)\"\n      />\n\n      <label\n        class=\"label-bold\"\n        for=\"every-week\"\n      >\n        {{ __('Every week (Sundays at 4:00am)') }}\n      </label>\n    </div>\n\n    <div class=\"cron-preset-radio-input\">\n      <input\n        id=\"every-month\"\n        v-model=\"cronInterval\"\n        :name=\"inputNameAttribute\"\n        :value=\"cronIntervalPresets.everyMonth\"\n        class=\"label-bold\"\n        type=\"radio\"\n        @click=\"toggleCustomInput(false)\"\n      />\n\n      <label\n        class=\"label-bold\"\n        for=\"every-month\"\n      >\n        {{ __('Every month (on the 1st at 4:00am)') }}\n      </label>\n    </div>\n\n    <div class=\"cron-interval-input-wrapper\">\n      <input\n        id=\"schedule_cron\"\n        :placeholder=\"__('Define a custom pattern with cron syntax')\"\n        v-model=\"cronInterval\"\n        :name=\"inputNameAttribute\"\n        :disabled=\"!isEditable\"\n        class=\"form-control inline cron-interval-input\"\n        type=\"text\"\n        required=\"true\"\n      />\n    </div>\n  </div>\n</template>\n","import { render, staticRenderFns } from \"./interval_pattern_input.vue?vue&type=template&id=0719dcb4\"\nimport script from \"./interval_pattern_input.vue?vue&type=script&lang=js\"\nexport * from \"./interval_pattern_input.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interval-pattern-form-group\"},[_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{staticClass:\"label-bold\",attrs:{\"id\":\"custom\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronInterval,\"checked\":_vm.isEditable},on:{\"click\":function($event){_vm.toggleCustomInput(true)}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"custom\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.s__('PipelineSheduleIntervalPattern|Custom'))+\"\\n    \")]),_vm._v(\" \"),_c('span',{staticClass:\"cron-syntax-link-wrap\"},[_vm._v(\"\\n      (\"),_c('a',{attrs:{\"href\":_vm.cronSyntaxUrl,\"target\":\"_blank\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.__('Cron syntax'))+\"\\n      \")]),_vm._v(\")\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-day\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyDay,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyDay)},on:{\"click\":function($event){_vm.toggleCustomInput(false)},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyDay}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-day\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.__('Every day (at 4:00am)'))+\"\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-week\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyWeek,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyWeek)},on:{\"click\":function($event){_vm.toggleCustomInput(false)},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyWeek}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-week\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.__('Every week (Sundays at 4:00am)'))+\"\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-month\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyMonth,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyMonth)},on:{\"click\":function($event){_vm.toggleCustomInput(false)},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyMonth}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-month\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.__('Every month (on the 1st at 4:00am)'))+\"\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-interval-input-wrapper\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"form-control inline cron-interval-input\",attrs:{\"id\":\"schedule_cron\",\"placeholder\":_vm.__('Define a custom pattern with cron syntax'),\"name\":_vm.inputNameAttribute,\"disabled\":!_vm.isEditable,\"type\":\"text\",\"required\":\"true\"},domProps:{\"value\":(_vm.cronInterval)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.cronInterval=$event.target.value}}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable class-methods-use-this */\n\nimport $ from 'jquery';\n\nconst defaultTimezone = 'UTC';\n\nexport default class TimezoneDropdown {\n  constructor() {\n    this.$dropdown = $('.js-timezone-dropdown');\n    this.$dropdownToggle = this.$dropdown.find('.dropdown-toggle-text');\n    this.$input = $('#schedule_cron_timezone');\n    this.timezoneData = this.$dropdown.data('data');\n    this.initDefaultTimezone();\n    this.initDropdown();\n  }\n\n  initDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.timezoneData,\n      filterable: true,\n      selectable: true,\n      toggleLabel: item => item.name,\n      search: {\n        fields: ['name'],\n      },\n      clicked: cfg => this.updateInputValue(cfg),\n      text: item => this.formatTimezone(item),\n    });\n\n    this.setDropdownToggle();\n  }\n\n  formatUtcOffset(offset) {\n    let prefix = '';\n\n    if (offset > 0) {\n      prefix = '+';\n    } else if (offset < 0) {\n      prefix = '-';\n    }\n\n    return `${prefix} ${Math.abs(offset / 3600)}`;\n  }\n\n  formatTimezone(item) {\n    return `[UTC ${this.formatUtcOffset(item.offset)}] ${item.name}`;\n  }\n\n  initDefaultTimezone() {\n    const initialValue = this.$input.val();\n\n    if (!initialValue) {\n      this.$input.val(defaultTimezone);\n    }\n  }\n\n  setDropdownToggle() {\n    const initialValue = this.$input.val();\n\n    this.$dropdownToggle.text(initialValue);\n  }\n\n  updateInputValue({ selectedObj, e }) {\n    e.preventDefault();\n    this.$input.val(selectedObj.identifier);\n    gl.pipelineScheduleFieldErrors.updateFormValidityState();\n  }\n}\n","import $ from 'jquery';\n\nexport default class TargetBranchDropdown {\n  constructor() {\n    this.$dropdown = $('.js-target-branch-dropdown');\n    this.$dropdownToggle = this.$dropdown.find('.dropdown-toggle-text');\n    this.$input = $('#schedule_ref');\n    this.initDefaultBranch();\n    this.initDropdown();\n  }\n\n  initDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.formatBranchesList(),\n      filterable: true,\n      selectable: true,\n      toggleLabel: item => item.name,\n      search: {\n        fields: ['name'],\n      },\n      clicked: cfg => this.updateInputValue(cfg),\n      text: item => item.name,\n    });\n\n    this.setDropdownToggle();\n  }\n\n  formatBranchesList() {\n    return this.$dropdown.data('data')\n      .map(val => ({ name: val }));\n  }\n\n  setDropdownToggle() {\n    const initialValue = this.$input.val();\n\n    this.$dropdownToggle.text(initialValue);\n  }\n\n  initDefaultBranch() {\n    const initialValue = this.$input.val();\n    const defaultBranch = this.$dropdown.data('defaultBranch');\n\n    if (!initialValue) {\n      this.$input.val(defaultBranch);\n    }\n  }\n\n  updateInputValue({ selectedObj, e }) {\n    e.preventDefault();\n\n    this.$input.val(selectedObj.name);\n    gl.pipelineScheduleFieldErrors.updateFormValidityState();\n  }\n}\n","import $ from 'jquery';\nimport Vue from 'vue';\nimport Translate from '../../../../vue_shared/translate';\nimport GlFieldErrors from '../../../../gl_field_errors';\nimport intervalPatternInput from './components/interval_pattern_input.vue';\nimport TimezoneDropdown from './components/timezone_dropdown';\nimport TargetBranchDropdown from './components/target_branch_dropdown';\nimport setupNativeFormVariableList from '../../../../ci_variable_list/native_form_variable_list';\n\nVue.use(Translate);\n\nfunction initIntervalPatternInput() {\n  const intervalPatternMount = document.getElementById('interval-pattern-input');\n  const initialCronInterval = intervalPatternMount ? intervalPatternMount.dataset.initialInterval : '';\n\n  return new Vue({\n    el: intervalPatternMount,\n    components: {\n      intervalPatternInput,\n    },\n    render(createElement) {\n      return createElement('interval-pattern-input', {\n        props: {\n          initialCronInterval,\n        },\n      });\n    },\n  });\n}\n\nexport default () => {\n  /* Most of the form is written in haml, but for fields with more complex behaviors,\n   * you should mount individual Vue components here. If at some point components need\n   * to share state, it may make sense to refactor the whole form to Vue */\n\n  initIntervalPatternInput();\n\n  // Initialize non-Vue JS components in the form\n\n  const formElement = document.getElementById('new-pipeline-schedule-form');\n\n  gl.timezoneDropdown = new TimezoneDropdown();\n  gl.targetBranchDropdown = new TargetBranchDropdown();\n  gl.pipelineScheduleFieldErrors = new GlFieldErrors(formElement);\n\n  setupNativeFormVariableList({\n    container: $('.js-ci-variable-list-section'),\n    formField: 'schedule',\n  });\n};\n","import $ from 'jquery';\nimport VariableList from './ci_variable_list';\n\n// Used for the variable list on scheduled pipeline edit page\nexport default function setupNativeFormVariableList({\n  container,\n  formField = 'variables',\n}) {\n  const $container = $(container);\n\n  const variableList = new VariableList({\n    container: $container,\n    formField,\n  });\n  variableList.init();\n\n  // Clear out the names in the empty last row so it\n  // doesn't get submitted and throw validation errors\n  $container.closest('form').on('submit trigger-submit', () => {\n    const $lastRow = $container.find('.js-row').last();\n\n    const isTouched = variableList.checkIfRowTouched($lastRow);\n    if (!isTouched) {\n      $lastRow.find('input, textarea').attr('name', '');\n    }\n  });\n}\n"],"sourceRoot":""}