{"version":3,"sources":["webpack:///./task_list.js","webpack:///./vue_shared/components/skeleton_loading_container.vue?e0bd","webpack:///./vue_shared/components/skeleton_loading_container.vue?9d12","webpack:///vue_shared/components/skeleton_loading_container.vue","webpack:///./vue_shared/components/skeleton_loading_container.vue","webpack:///./droplab/plugins/input_setter.js","webpack:///./blob/viewer/index.js","webpack:///./comment_type_toggle.js","webpack:///./notes.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/deckar01-task_list/dist/task_list.js","webpack:///./line_highlighter.js","webpack:///./init_notes.js","webpack:///./snippet/snippet_embed.js","webpack:///./dropzone_input.js","webpack:///./lib/utils/text_markdown.js","webpack:///./gl_form.js","webpack:///./zen_mode.js","webpack:///./pages/snippets/show/index.js","webpack:///./autosave.js","webpack:////var/cache/omnibus/src/gitlab-rails/node_modules/mousetrap/plugins/pause/mousetrap-pause.js"],"names":["TaskList","options","arguments","length","undefined","_classCallCheck","this","selector","dataType","fieldName","onSuccess","onError","e","errorMessages","response","data","_typeof","errors","join","_flash__WEBPACK_IMPORTED_MODULE_3__","init","disable","jquery__WEBPACK_IMPORTED_MODULE_0___default","taskList","document","on","update","bind","off","_this","$target","target","patchData","val","_lib_utils_axios_utils__WEBPACK_IMPORTED_MODULE_2__","patch","attr","then","_ref","catch","err","components_skeleton_loading_containervue_type_script_lang_js","props","small","type","Boolean","required","default","lines","Number","computed","lineClasses","Array","fill","map","_","i","component","Object","componentNormalizer","_h","$createElement","_c","_self","staticClass","class","animation-container-small","_l","css","index","key","__webpack_exports__","InputSetter","hook","destroyed","config","eventWrapper","addEvents","setInputs","list","addEventListener","removeEvents","removeEventListener","selectedItem","detail","selected","isArray","forEach","setInput","input","trigger","newValue","getAttribute","valueAttribute","inputAttribute","hasAttribute","setAttribute","tagName","value","textContent","destroy","BlobViewer","initAuxiliaryViewer","initRichViewer","initMainViewers","$fileHolder","switcher","querySelector","switcherBtns","querySelectorAll","copySourceBtn","simpleViewer","richViewer","initBindings","switchToInitialViewer","initialViewerName","window","location","hash","indexOf","switchToViewer","from","el","switchViewHandler","classList","contains","blur","currentTarget","preventDefault","remove","activeViewer","add","tooltip","name","_this2","newViewer","oldButton","newButton","oldViewer","toggleCopyButtonState","loadViewer","viewer","renderGFM","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_2__","_flash__WEBPACK_IMPORTED_MODULE_1__","auxiliaryViewer","dataset","richType","initViewer","promise","module","error","Promise","all","__webpack_require__","viewerParam","url","resolve","_lib_utils_axios_utils__WEBPACK_IMPORTED_MODULE_3__","get","innerHTML","html","assign","input_setter","comment_type_toggle","CommentTypeToggle","opts","dropdownTrigger","dropdownList","noteTypeInput","submitButton","closeButton","reopenButton","droplab","drop_lab","setConfig","push","normalizeNewlines","str","replace","autosize","autosize_default","a","REGEX_QUICK_ACTIONS","notes_Notes","Notes","notes_url","note_ids","last_fetched_at","view","enableGFM","gfm_auto_complete","notes_classCallCheck","updateTargetButtons","updateComment","visibilityChange","cancelDiscussionForm","onAddDiffNote","onAddImageDiffNote","setupDiscussionNoteForm","onReplyToDiscussionNote","removeNote","cancelEdit","updateNote","addDiscussionNote","addNoteError","addNote","resetMainTargetForm","refresh","keydownNoteText","toggleCommitList","postComment","clearFlashWrapper","clearFlash","onHashChange","updatedNotesTrackingMap","noteable_url","URL","notesCountBadge","jquery_default","find","basePollingInterval","maxPollingSteps","$wrapperEl","common_utils","cleanBinding","addBinding","setPollingInterval","setupMainTargetNoteForm","task_list","collapseLongCommitList","setViewType","clone","addClass","insertAfter","url_utility","$anchor","getElementById","loadLazyDiff","instance","js_cookie_default","showEditForm","removeAttachment","updateFormAttachment","onClickRetryLazyLoad","reenableTargetFormSubmitButton","$textarea","discussionNoteForm","editNote","myLastNote","which","$","gon","current_user_id","closest","confirm","removeDiscussionNoteForm","removeNoteEditForm","interval","clearInterval","setInterval","pollingInterval","hidden","getContent","refreshing","axios_utils","headers","X-Last-Fetched-At","notes","each","note","renderNote","shouldReset","nthInterval","Math","pow","initRefresh","noteEntity","votesBlock","commands_changes","checkMergeRequestStatus","eq","awards_handler","awardsHandler","addAwardToEmojiBar","emoji_award","scrollToAwards","$note","datetime_utility","updateNoteTargetSelector","$noteToCleanHighlight","$form","$notesList","discussion_html","renderDiscussionNote","valid","id","isNewNote","$newNote","animateAppendNote","setupNewNote","updateNotesCount","isUpdatedNote","isEditing","hasClass","initialContent","text","trim","currentContent","sanitizedNoteNote","isTextareaUntouched","putConflictEditWarningInPlace","$updatedNote","animateUpdateNote","commands_only","keys","addFlash","parentTimeline","discussionContainer","form","row","lineType","diffAvatarContainer","discussion_id","discussion_line_code","on_image","isParallelView","prevAll","first","diff_discussion_html","$discussion","after","$notes","contentContainerClass","split","append","children","gl","diffNotesCompileComponents","discussion_resolvable","renderDiscussionAvatar","changesDiscussionContainer","avatarHolder","createElement","click","reset","event","createEvent","initEvent","dispatchEvent","formClone","setupNoteForm","removeClass","parents","initCommentTypeToggle","textarea","glForm","gl_form","autosave","formParentTimeline","$parentTimeline","flash","isNewDiffComment","discussionId","mergeRequestId","ResolveService","toggleResolveForDiscussion","$targetNote","$noteEntityEl","revertNoteEditForm","replaceWith","$el","isAllowed","show","scrollTo","$editForm","getEditFormSelector","$currentlyEditing","checkContentToAllowEditing","putEditFormInPlace","noteId","hide","insertBefore","enable","noteElId","prev","diffNoteApps","$destroy","notesTr","$diffFile","removeBadgeEvent","CustomEvent","badgeNumber","replyToDiscussionNote","replyLink","cleanForm","dataHolder","diffFileData","discussionID","focus","link","$link","showReplyInput","toggleDiffNote","clickEvent","newForm","$noteContainer","appendTo","addForm","hasNotes","replyButton","rowCssToAdd","_ref2","forceShow","_ref2$showReplyInput","nextRow","next","targetRow","is","lineTypeSelector","notesContentSelector","notesContent","isCurrentlyShown","showNow","toggleClass","blurEvent","filename","closebtn","closetext","discardbtn","reopenbtn","reopentext","$originalContentEl","originalContent","postUrl","targetId","targetType","markdownVersion","updateCount","parseInt","$retryButton","prop","$container","renderPlaceholderComponent","$errorContainer","$successContainer","_ref3","renderDiffContent","$element","$closestSystemCommitList","siblings","systemNotes","has","systemNote","$systemNote","headerMessage","_len","flashParams","_key","flashContainer","Function","prototype","apply","concat","style","display","content","formData","serialize","formContent","underscore_default","escape","formAction","formContentOriginal","test","tempFormContent","executedCommands","filter","command","RegExp","description","toLowerCase","_ref4","uniqueId","isDiscussionNote","currentUsername","currentUserFullname","currentUserAvatar","discussionClass","$tempNote","_ref5","_this3","$submitBtn","$closeBtn","parent","isMainForm","isDiscussionForm","isDiscussionResolve","_getFormData","getFormData","noteUniqueId","systemNoteUniqueId","hasQuickActions","$notesContainer","stripQuickActions","createPlaceholderNote","current_username","current_user_fullname","current_user_avatar_url","createPlaceholderSystemNote","getQuickActionDescription","ajax_cache","GfmAutoComplete","dataSources","commands","post","res","notePosition","_JSON$parse","JSON","parse","x","y","width","height","addBadgeEvent","handleQuickActions","closestDiffFile","_this4","$editingNote","$noteBodyText","_getFormData2","cachedNoteBodyText","_ref6","updateNoteError","initDroplab","addTargetClass","vue_esm","components","SkeletonLoadingContainer","skeleton_loading_container","render","prepend","fileHolder","syntax_highlight","noteIds","inArray","mrWidget","checkStatus","noteHtml","jQuery","factory","modules","installedModules","moduleId","exports","l","call","m","c","d","getter","o","defineProperty","configurable","enumerable","n","__esModule","object","property","hasOwnProperty","p","s","NodeArray","item","nodeList","slice","className","parentNode","eventName","Event","bubbles","cancelable","initCustomEvent","el1","container","field","updateTaskList","checkbox","disabled","changeEvent","changedEvent","checkboxes","checked","defaultPrevented","updateSource","incomplete","complete","escapePattern","incompletePattern","completePattern","itemPattern","startFencesPattern","endFencesPattern","itemsInParasPattern","source","itemIndex","clean","inCodeBlock","line","len","ref","results","match","fn","method","jquery__WEBPACK_IMPORTED_MODULE_0__","LineHighlighter","highlightLineClass","fileHolderSelector","scrollFileHolder","_hash","setHash","highlightLine","clickHandler","highlightHash","bindEvents","newHash","range","clearHighlight","hashToRange","highlightRange","lineSelector","scrollOptions","offset","current","lineNumber","shiftKey","matches","reverse","firstLineNumber","lastLineNumber","__setLocationHash__","history","pushState","title","dataEl","notesUrl","notesIds","now","diffView","_notes__WEBPACK_IMPORTED_MODULE_0__","initialize","_window$location","protocol","host","pathname","shareBtn","embedBtn","snippetUrlArea","embedAction","innerText","scriptTag","dropzoneInput","$attachButton","$attachingFileMessage","$cancelButton","$retryLink","$uploadProgress","$uploadingErrorContainer","$uploadingErrorMessage","$uploadingProgressContainer","uploadsPath","uploads_path","maxFileSize","max_file_size","formTextarea","handlePaste","pasteText","addFileToForm","updateAttachingMessage","isImage","getFilename","uploadFile","wrap","$mdArea","setupMarkdownPreview","$formDropzone","dropzone","dictDefaultMessage","clickable","paramName","maxFilesize","uploadMultiple","csrf","previewContainer","processing","alert","dragover","dragleave","drop","success","header","processingFileCount","getQueuedFiles","getUploadingFiles","shouldPad","markdown","file","errorMessage","xhr","message","responseText","totaluploadprogress","totalUploadProgress","files","round","sending","removedfile","queuecomplete","child","stopPropagation","dropzone_default","forElement","removeAllFiles","dropzoneInstance","failedFiles","failedFile","status","ERROR","accepted","addFile","pasteEvent","originalEvent","clipboardData","items","image","getAsFile","formattedText","caretStart","selectionStart","caretEnd","selectionEnd","textEnd","beforeSelection","substring","afterSelection","setSelectionRange","scrollHeight","path","getData","closeSpinner","FormData","md","$child","insertToTextArea","messageContainer","attachingMessage","filesCount","autoDiscover","updateText","textArea","tag","blockTag","$textArea","selectedText","textToInsert","selectedSplit","startChar","removedLastNewLine","removedFirstNewLine","currentLineEmpty","lastNewLine","substr","lastIndexOf","before","lineBefore","lineAfter","blockTagText","wrapped","pos","moveCursor","insertMarkdownText","gl_form_GLForm","GLForm","setupForm","clearEventListeners","autoComplete","isNewForm","utils","disableButtonIfEmptyField","setup","addEventListeners","$this","isAutosizeable","setupAutosize","setHeightData","destroyAutosize","setTimeout","outerHeight","dropzone__WEBPACK_IMPORTED_MODULE_2___default","ZenMode","active_backdrop","active_textarea","enter","exit","keyCode","backdrop","mousetrap__WEBPACK_IMPORTED_MODULE_3___default","pause","removeAttr","unpause","$dropzone","zen_area","_line_highlighter__WEBPACK_IMPORTED_MODULE_0__","_blob_viewer__WEBPACK_IMPORTED_MODULE_1__","_init_notes__WEBPACK_IMPORTED_MODULE_3__","_zen_mode__WEBPACK_IMPORTED_MODULE_2__","_snippet_snippet_embed__WEBPACK_IMPORTED_MODULE_4__","Autosave","isLocalStorageAvailable","_lib_utils_accessor__WEBPACK_IMPORTED_MODULE_0__","isLocalStorageAccessSafe","restore","save","localStorage","getItem","setItem","removeItem","Mousetrap","self","_originalStopCallback","stopCallback","enabled","element","combo"],"mappings":"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","file":"pages.snippets.show.7ddf67f3.chunk.js","sourcesContent":["import $ from 'jquery';\nimport 'deckar01-task_list';\nimport axios from './lib/utils/axios_utils';\nimport Flash from './flash';\n\nexport default class TaskList {\n  constructor(options = {}) {\n    this.selector = options.selector;\n    this.dataType = options.dataType;\n    this.fieldName = options.fieldName;\n    this.onSuccess = options.onSuccess || (() => {});\n    this.onError = function showFlash(e) {\n      let errorMessages = '';\n\n      if (e.response.data && typeof e.response.data === 'object') {\n        errorMessages = e.response.data.errors.join(' ');\n      }\n\n      return new Flash(errorMessages || 'Update failed', 'alert');\n    };\n\n    this.init();\n  }\n\n  init() {\n    // Prevent duplicate event bindings\n    this.disable();\n    $(`${this.selector} .js-task-list-container`).taskList('enable');\n    $(document).on('tasklist:changed', `${this.selector} .js-task-list-container`, this.update.bind(this));\n  }\n\n  disable() {\n    $(`${this.selector} .js-task-list-container`).taskList('disable');\n    $(document).off('tasklist:changed', `${this.selector} .js-task-list-container`);\n  }\n\n  update(e) {\n    const $target = $(e.target);\n    const patchData = {};\n    patchData[this.dataType] = {\n      [this.fieldName]: $target.val(),\n    };\n\n    return axios.patch($target.data('updateUrl') || $('form.js-issuable-update').attr('action'), patchData)\n      .then(({ data }) => this.onSuccess(data))\n      .catch(err => this.onError(err));\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"animation-container\",class:{\n    'animation-container-small': _vm.small,\n  }},_vm._l((_vm.lineClasses),function(css,index){return _c('div',{key:index,class:css})}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./skeleton_loading_container.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./skeleton_loading_container.vue?vue&type=script&lang=js\"","<script>\n  export default {\n    props: {\n      small: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      lines: {\n        type: Number,\n        required: false,\n        default: 3,\n      },\n    },\n    computed: {\n      lineClasses() {\n        return new Array(this.lines).fill().map((_, i) => `skeleton-line-${i + 1}`);\n      },\n    },\n  };\n</script>\n\n<template>\n  <div\n    :class=\"{\n      'animation-container-small': small,\n    }\"\n    class=\"animation-container\"\n  >\n    <div\n      v-for=\"(css, index) in lineClasses\"\n      :key=\"index\"\n      :class=\"css\"\n    >\n    </div>\n  </div>\n</template>\n","import { render, staticRenderFns } from \"./skeleton_loading_container.vue?vue&type=template&id=9cc0ad7e\"\nimport script from \"./skeleton_loading_container.vue?vue&type=script&lang=js\"\nexport * from \"./skeleton_loading_container.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable */\n\nconst InputSetter = {\n  init(hook) {\n    this.hook = hook;\n    this.destroyed = false;\n    this.config = hook.config.InputSetter || (this.hook.config.InputSetter = {});\n\n    this.eventWrapper = {};\n\n    this.addEvents();\n  },\n\n  addEvents() {\n    this.eventWrapper.setInputs = this.setInputs.bind(this);\n    this.hook.list.list.addEventListener('click.dl', this.eventWrapper.setInputs);\n  },\n\n  removeEvents() {\n    this.hook.list.list.removeEventListener('click.dl', this.eventWrapper.setInputs);\n  },\n\n  setInputs(e) {\n    if (this.destroyed) return;\n\n    const selectedItem = e.detail.selected;\n\n    if (!Array.isArray(this.config)) this.config = [this.config];\n\n    this.config.forEach(config => this.setInput(config, selectedItem));\n  },\n\n  setInput(config, selectedItem) {\n    const input = config.input || this.hook.trigger;\n    const newValue = selectedItem.getAttribute(config.valueAttribute);\n    const inputAttribute = config.inputAttribute;\n\n    if (input.hasAttribute(inputAttribute)) return input.setAttribute(inputAttribute, newValue);\n    if (input.tagName === 'INPUT') return input.value = newValue;\n    return input.textContent = newValue;\n  },\n\n  destroy() {\n    this.destroyed = true;\n\n    this.removeEvents();\n  },\n};\n\nexport default InputSetter;\n","import $ from 'jquery';\nimport Flash from '../../flash';\nimport { handleLocationHash } from '../../lib/utils/common_utils';\nimport axios from '../../lib/utils/axios_utils';\n\nexport default class BlobViewer {\n  constructor() {\n    BlobViewer.initAuxiliaryViewer();\n    BlobViewer.initRichViewer();\n\n    this.initMainViewers();\n  }\n\n  static initAuxiliaryViewer() {\n    const auxiliaryViewer = document.querySelector('.blob-viewer[data-type=\"auxiliary\"]');\n    if (!auxiliaryViewer) return;\n\n    BlobViewer.loadViewer(auxiliaryViewer);\n  }\n\n  static initRichViewer() {\n    const viewer = document.querySelector('.blob-viewer[data-type=\"rich\"]');\n    if (!viewer || !viewer.dataset.richType) return;\n\n    const initViewer = promise => promise\n      .then(module => module.default(viewer))\n      .catch((error) => {\n        Flash('Error loading file viewer.');\n        throw error;\n      });\n\n    switch (viewer.dataset.richType) {\n      case 'balsamiq':\n        initViewer(import(/* webpackChunkName: 'balsamiq_viewer' */ '../balsamiq_viewer'));\n        break;\n      case 'notebook':\n        initViewer(import(/* webpackChunkName: 'notebook_viewer' */ '../notebook_viewer'));\n        break;\n      case 'pdf':\n        initViewer(import(/* webpackChunkName: 'pdf_viewer' */ '../pdf_viewer'));\n        break;\n      case 'sketch':\n        initViewer(import(/* webpackChunkName: 'sketch_viewer' */ '../sketch_viewer'));\n        break;\n      case 'stl':\n        initViewer(import(/* webpackChunkName: 'stl_viewer' */ '../stl_viewer'));\n        break;\n      default:\n        break;\n    }\n  }\n\n  initMainViewers() {\n    this.$fileHolder = $('.file-holder');\n    if (!this.$fileHolder.length) return;\n\n    this.switcher = document.querySelector('.js-blob-viewer-switcher');\n    this.switcherBtns = document.querySelectorAll('.js-blob-viewer-switch-btn');\n    this.copySourceBtn = document.querySelector('.js-copy-blob-source-btn');\n\n    this.simpleViewer = this.$fileHolder[0].querySelector('.blob-viewer[data-type=\"simple\"]');\n    this.richViewer = this.$fileHolder[0].querySelector('.blob-viewer[data-type=\"rich\"]');\n\n    this.initBindings();\n\n    this.switchToInitialViewer();\n  }\n\n  switchToInitialViewer() {\n    const initialViewer = this.$fileHolder[0].querySelector('.blob-viewer:not(.hidden)');\n    let initialViewerName = initialViewer.getAttribute('data-type');\n\n    if (this.switcher && window.location.hash.indexOf('#L') === 0) {\n      initialViewerName = 'simple';\n    }\n\n    this.switchToViewer(initialViewerName);\n  }\n\n  initBindings() {\n    if (this.switcherBtns.length) {\n      Array.from(this.switcherBtns)\n        .forEach((el) => {\n          el.addEventListener('click', this.switchViewHandler.bind(this));\n        });\n    }\n\n    if (this.copySourceBtn) {\n      this.copySourceBtn.addEventListener('click', () => {\n        if (this.copySourceBtn.classList.contains('disabled')) return this.copySourceBtn.blur();\n\n        return this.switchToViewer('simple');\n      });\n    }\n  }\n\n  switchViewHandler(e) {\n    const target = e.currentTarget;\n\n    e.preventDefault();\n\n    this.switchToViewer(target.getAttribute('data-viewer'));\n  }\n\n  toggleCopyButtonState() {\n    if (!this.copySourceBtn) return;\n\n    if (this.simpleViewer.getAttribute('data-loaded')) {\n      this.copySourceBtn.setAttribute('title', 'Copy source to clipboard');\n      this.copySourceBtn.classList.remove('disabled');\n    } else if (this.activeViewer === this.simpleViewer) {\n      this.copySourceBtn.setAttribute('title', 'Wait for the source to load to copy it to the clipboard');\n      this.copySourceBtn.classList.add('disabled');\n    } else {\n      this.copySourceBtn.setAttribute('title', 'Switch to the source to copy it to the clipboard');\n      this.copySourceBtn.classList.add('disabled');\n    }\n\n    $(this.copySourceBtn).tooltip('_fixTitle');\n  }\n\n  switchToViewer(name) {\n    const newViewer = this.$fileHolder[0].querySelector(`.blob-viewer[data-type='${name}']`);\n    if (this.activeViewer === newViewer) return;\n\n    const oldButton = document.querySelector('.js-blob-viewer-switch-btn.active');\n    const newButton = document.querySelector(`.js-blob-viewer-switch-btn[data-viewer='${name}']`);\n    const oldViewer = this.$fileHolder[0].querySelector(`.blob-viewer:not([data-type='${name}'])`);\n\n    if (oldButton) {\n      oldButton.classList.remove('active');\n    }\n\n    if (newButton) {\n      newButton.classList.add('active');\n      newButton.blur();\n    }\n\n    if (oldViewer) {\n      oldViewer.classList.add('hidden');\n    }\n\n    newViewer.classList.remove('hidden');\n\n    this.activeViewer = newViewer;\n\n    this.toggleCopyButtonState();\n\n    BlobViewer.loadViewer(newViewer)\n    .then((viewer) => {\n      $(viewer).renderGFM();\n\n      this.$fileHolder.trigger('highlight:line');\n      handleLocationHash();\n\n      this.toggleCopyButtonState();\n    })\n    .catch(() => new Flash('Error loading viewer'));\n  }\n\n  static loadViewer(viewerParam) {\n    const viewer = viewerParam;\n    const url = viewer.getAttribute('data-url');\n\n    if (!url || viewer.getAttribute('data-loaded') || viewer.getAttribute('data-loading')) {\n      return Promise.resolve(viewer);\n    }\n\n    viewer.setAttribute('data-loading', 'true');\n\n    return axios.get(url)\n      .then(({ data }) => {\n        viewer.innerHTML = data.html;\n        viewer.setAttribute('data-loaded', 'true');\n\n        return viewer;\n      });\n  }\n}\n","import DropLab from './droplab/drop_lab';\nimport ISetter from './droplab/plugins/input_setter';\n\n// Todo: Remove this when fixing issue in input_setter plugin\nconst InputSetter = Object.assign({}, ISetter);\n\nclass CommentTypeToggle {\n  constructor(opts = {}) {\n    this.dropdownTrigger = opts.dropdownTrigger;\n    this.dropdownList = opts.dropdownList;\n    this.noteTypeInput = opts.noteTypeInput;\n    this.submitButton = opts.submitButton;\n    this.closeButton = opts.closeButton;\n    this.reopenButton = opts.reopenButton;\n  }\n\n  initDroplab() {\n    this.droplab = new DropLab();\n\n    const config = this.setConfig();\n\n    this.droplab.init(this.dropdownTrigger, this.dropdownList, [InputSetter], config);\n  }\n\n  setConfig() {\n    const config = {\n      InputSetter: [{\n        input: this.noteTypeInput,\n        valueAttribute: 'data-value',\n      },\n      {\n        input: this.submitButton,\n        valueAttribute: 'data-submit-text',\n      }],\n    };\n\n    if (this.closeButton) {\n      config.InputSetter.push({\n        input: this.closeButton,\n        valueAttribute: 'data-close-text',\n      }, {\n        input: this.closeButton,\n        valueAttribute: 'data-close-text',\n        inputAttribute: 'data-alternative-text',\n      });\n    }\n\n    if (this.reopenButton) {\n      config.InputSetter.push({\n        input: this.reopenButton,\n        valueAttribute: 'data-reopen-text',\n      }, {\n        input: this.reopenButton,\n        valueAttribute: 'data-reopen-text',\n        inputAttribute: 'data-alternative-text',\n      });\n    }\n\n    return config;\n  }\n}\n\nexport default CommentTypeToggle;\n","/* eslint-disable no-restricted-properties, func-names, no-var, wrap-iife, camelcase,\nno-unused-expressions, max-len, one-var, one-var-declaration-per-line, default-case,\nprefer-template, consistent-return, no-alert, no-return-assign,\nno-param-reassign, prefer-arrow-callback, no-else-return, vars-on-top,\nno-unused-vars, no-shadow, no-useless-escape, class-methods-use-this */\n\n/* global ResolveService */\n/* global mrRefreshWidgetUrl */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport Cookies from 'js-cookie';\nimport Autosize from 'autosize';\nimport 'vendor/jquery.caret'; // required by jquery.atwho\nimport 'vendor/jquery.atwho';\nimport AjaxCache from '~/lib/utils/ajax_cache';\nimport Vue from 'vue';\nimport syntaxHighlight from '~/syntax_highlight';\nimport SkeletonLoadingContainer from '~/vue_shared/components/skeleton_loading_container.vue';\nimport axios from './lib/utils/axios_utils';\nimport { getLocationHash } from './lib/utils/url_utility';\nimport Flash from './flash';\nimport { defaultAutocompleteConfig } from './gfm_auto_complete';\nimport CommentTypeToggle from './comment_type_toggle';\nimport GLForm from './gl_form';\nimport loadAwardsHandler from './awards_handler';\nimport Autosave from './autosave';\nimport TaskList from './task_list';\nimport {\n  isInViewport,\n  getPagePath,\n  scrollToElement,\n  isMetaKey,\n  isInMRPage,\n} from './lib/utils/common_utils';\nimport imageDiffHelper from './image_diff/helpers/index';\nimport { localTimeAgo } from './lib/utils/datetime_utility';\n\nwindow.autosize = Autosize;\n\nfunction normalizeNewlines(str) {\n  return str.replace(/\\r\\n/g, '\\n');\n}\n\nconst MAX_VISIBLE_COMMIT_LIST_COUNT = 3;\nconst REGEX_QUICK_ACTIONS = /^\\/\\w+.*$/gm;\n\nexport default class Notes {\n  static initialize(notes_url, note_ids, last_fetched_at, view, enableGFM) {\n    if (!this.instance) {\n      this.instance = new Notes(notes_url, note_ids, last_fetched_at, view, enableGFM);\n    }\n  }\n\n  static getInstance() {\n    return this.instance;\n  }\n\n  constructor(notes_url, note_ids, last_fetched_at, view, enableGFM = defaultAutocompleteConfig) {\n    this.updateTargetButtons = this.updateTargetButtons.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.visibilityChange = this.visibilityChange.bind(this);\n    this.cancelDiscussionForm = this.cancelDiscussionForm.bind(this);\n    this.onAddDiffNote = this.onAddDiffNote.bind(this);\n    this.onAddImageDiffNote = this.onAddImageDiffNote.bind(this);\n    this.setupDiscussionNoteForm = this.setupDiscussionNoteForm.bind(this);\n    this.onReplyToDiscussionNote = this.onReplyToDiscussionNote.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n    this.addDiscussionNote = this.addDiscussionNote.bind(this);\n    this.addNoteError = this.addNoteError.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.resetMainTargetForm = this.resetMainTargetForm.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.keydownNoteText = this.keydownNoteText.bind(this);\n    this.toggleCommitList = this.toggleCommitList.bind(this);\n    this.postComment = this.postComment.bind(this);\n    this.clearFlashWrapper = this.clearFlash.bind(this);\n    this.onHashChange = this.onHashChange.bind(this);\n\n    this.notes_url = notes_url;\n    this.note_ids = note_ids;\n    this.enableGFM = enableGFM;\n    // Used to keep track of updated notes while people are editing things\n    this.updatedNotesTrackingMap = {};\n    this.last_fetched_at = last_fetched_at;\n    this.noteable_url = document.URL;\n    this.notesCountBadge ||\n      (this.notesCountBadge = $('.issuable-details').find('.notes-tab .badge'));\n    this.basePollingInterval = 15000;\n    this.maxPollingSteps = 4;\n\n    this.$wrapperEl = isInMRPage() ? $(document).find('.diffs') : $(document);\n    this.cleanBinding();\n    this.addBinding();\n    this.setPollingInterval();\n    this.setupMainTargetNoteForm(enableGFM);\n    this.taskList = new TaskList({\n      dataType: 'note',\n      fieldName: 'note',\n      selector: '.notes',\n    });\n    this.collapseLongCommitList();\n    this.setViewType(view);\n\n    // We are in the Merge Requests page so we need another edit form for Changes tab\n    if (getPagePath(1) === 'merge_requests') {\n      $('.note-edit-form')\n        .clone()\n        .addClass('mr-note-edit-form')\n        .insertAfter('.note-edit-form');\n    }\n\n    const hash = getLocationHash();\n    const $anchor = hash && document.getElementById(hash);\n\n    if ($anchor) {\n      this.loadLazyDiff({ currentTarget: $anchor });\n    }\n  }\n\n  setViewType(view) {\n    this.view = Cookies.get('diff_view') || view;\n  }\n\n  addBinding() {\n    // Edit note link\n    this.$wrapperEl.on('click', '.js-note-edit', this.showEditForm.bind(this));\n    this.$wrapperEl.on('click', '.note-edit-cancel', this.cancelEdit);\n    // Reopen and close actions for Issue/MR combined with note form submit\n    this.$wrapperEl.on('click', '.js-comment-submit-button', this.postComment);\n    this.$wrapperEl.on('click', '.js-comment-save-button', this.updateComment);\n    this.$wrapperEl.on('keyup input', '.js-note-text', this.updateTargetButtons);\n    // resolve a discussion\n    this.$wrapperEl.on('click', '.js-comment-resolve-button', this.postComment);\n    // remove a note (in general)\n    this.$wrapperEl.on('click', '.js-note-delete', this.removeNote);\n    // delete note attachment\n    this.$wrapperEl.on('click', '.js-note-attachment-delete', this.removeAttachment);\n    // reset main target form when clicking discard\n    this.$wrapperEl.on('click', '.js-note-discard', this.resetMainTargetForm);\n    // update the file name when an attachment is selected\n    this.$wrapperEl.on('change', '.js-note-attachment-input', this.updateFormAttachment);\n    // reply to diff/discussion notes\n    this.$wrapperEl.on('click', '.js-discussion-reply-button', this.onReplyToDiscussionNote);\n    // add diff note\n    this.$wrapperEl.on('click', '.js-add-diff-note-button', this.onAddDiffNote);\n    // add diff note for images\n    this.$wrapperEl.on('click', '.js-add-image-diff-note-button', this.onAddImageDiffNote);\n    // hide diff note form\n    this.$wrapperEl.on('click', '.js-close-discussion-note-form', this.cancelDiscussionForm);\n    // toggle commit list\n    this.$wrapperEl.on('click', '.system-note-commit-list-toggler', this.toggleCommitList);\n\n    this.$wrapperEl.on('click', '.js-toggle-lazy-diff', this.loadLazyDiff);\n    this.$wrapperEl.on('click', '.js-toggle-lazy-diff-retry-button', this.onClickRetryLazyLoad.bind(this));\n\n    // fetch notes when tab becomes visible\n    this.$wrapperEl.on('visibilitychange', this.visibilityChange);\n    // when issue status changes, we need to refresh data\n    this.$wrapperEl.on('issuable:change', this.refresh);\n    // ajax:events that happen on Form when actions like Reopen, Close are performed on Issues and MRs.\n    this.$wrapperEl.on('ajax:success', '.js-main-target-form', this.addNote);\n    this.$wrapperEl.on('ajax:success', '.js-discussion-note-form', this.addDiscussionNote);\n    this.$wrapperEl.on('ajax:success', '.js-main-target-form', this.resetMainTargetForm);\n    this.$wrapperEl.on(\n      'ajax:complete',\n      '.js-main-target-form',\n      this.reenableTargetFormSubmitButton,\n    );\n    // when a key is clicked on the notes\n    this.$wrapperEl.on('keydown', '.js-note-text', this.keydownNoteText);\n    // When the URL fragment/hash has changed, `#note_xxx`\n    $(window).on('hashchange', this.onHashChange);\n  }\n\n  cleanBinding() {\n    this.$wrapperEl.off('click', '.js-note-edit');\n    this.$wrapperEl.off('click', '.note-edit-cancel');\n    this.$wrapperEl.off('click', '.js-note-delete');\n    this.$wrapperEl.off('click', '.js-note-attachment-delete');\n    this.$wrapperEl.off('click', '.js-discussion-reply-button');\n    this.$wrapperEl.off('click', '.js-add-diff-note-button');\n    this.$wrapperEl.off('click', '.js-add-image-diff-note-button');\n    this.$wrapperEl.off('visibilitychange');\n    this.$wrapperEl.off('keyup input', '.js-note-text');\n    this.$wrapperEl.off('click', '.js-note-target-reopen');\n    this.$wrapperEl.off('click', '.js-note-target-close');\n    this.$wrapperEl.off('click', '.js-note-discard');\n    this.$wrapperEl.off('keydown', '.js-note-text');\n    this.$wrapperEl.off('click', '.js-comment-resolve-button');\n    this.$wrapperEl.off('click', '.system-note-commit-list-toggler');\n    this.$wrapperEl.off('click', '.js-toggle-lazy-diff');\n    this.$wrapperEl.off('click', '.js-toggle-lazy-diff-retry-button');\n    this.$wrapperEl.off('ajax:success', '.js-main-target-form');\n    this.$wrapperEl.off('ajax:success', '.js-discussion-note-form');\n    this.$wrapperEl.off('ajax:complete', '.js-main-target-form');\n    $(window).off('hashchange', this.onHashChange);\n  }\n\n  static initCommentTypeToggle(form) {\n    const dropdownTrigger = form.querySelector('.js-comment-type-dropdown .dropdown-toggle');\n    const dropdownList = form.querySelector('.js-comment-type-dropdown .dropdown-menu');\n    const noteTypeInput = form.querySelector('#note_type');\n    const submitButton = form.querySelector('.js-comment-type-dropdown .js-comment-submit-button');\n    const closeButton = form.querySelector('.js-note-target-close');\n    const reopenButton = form.querySelector('.js-note-target-reopen');\n\n    const commentTypeToggle = new CommentTypeToggle({\n      dropdownTrigger,\n      dropdownList,\n      noteTypeInput,\n      submitButton,\n      closeButton,\n      reopenButton,\n    });\n\n    commentTypeToggle.initDroplab();\n  }\n\n  keydownNoteText(e) {\n    var $textarea,\n      discussionNoteForm,\n      editNote,\n      myLastNote,\n      myLastNoteEditBtn,\n      newText,\n      originalText;\n    if (isMetaKey(e)) {\n      return;\n    }\n\n    $textarea = $(e.target);\n    // Edit previous note when UP arrow is hit\n    switch (e.which) {\n      case 38:\n        if ($textarea.val() !== '') {\n          return;\n        }\n        myLastNote = $(\n          `li.note[data-author-id='${gon.current_user_id}'][data-editable]:last`,\n          $textarea.closest('.note, .notes_holder, #notes'),\n        );\n        if (myLastNote.length) {\n          myLastNoteEditBtn = myLastNote.find('.js-note-edit');\n          return myLastNoteEditBtn.trigger('click', [true, myLastNote]);\n        }\n        break;\n      // Cancel creating diff note or editing any note when ESCAPE is hit\n      case 27:\n        discussionNoteForm = $textarea.closest('.js-discussion-note-form');\n        if (discussionNoteForm.length) {\n          if ($textarea.val() !== '') {\n            if (\n              !window.confirm('Are you sure you want to cancel creating this comment?')\n            ) {\n              return;\n            }\n          }\n          this.removeDiscussionNoteForm(discussionNoteForm);\n          return;\n        }\n        editNote = $textarea.closest('.note');\n        if (editNote.length) {\n          originalText = $textarea.closest('form').data('originalNote');\n          newText = $textarea.val();\n          if (originalText !== newText) {\n            if (\n              !window.confirm('Are you sure you want to cancel editing this comment?')\n            ) {\n              return;\n            }\n          }\n          return this.removeNoteEditForm(editNote);\n        }\n    }\n  }\n\n  initRefresh() {\n    if (Notes.interval) {\n      clearInterval(Notes.interval);\n    }\n    return (Notes.interval = setInterval(\n      (function(_this) {\n        return function() {\n          return _this.refresh();\n        };\n      })(this),\n      this.pollingInterval,\n    ));\n  }\n\n  refresh() {\n    if (!document.hidden) {\n      return this.getContent();\n    }\n  }\n\n  getContent() {\n    if (this.refreshing) {\n      return;\n    }\n\n    this.refreshing = true;\n\n    axios\n      .get(`${this.notes_url}?html=true`, {\n        headers: {\n          'X-Last-Fetched-At': this.last_fetched_at,\n        },\n      })\n      .then(({ data }) => {\n        const { notes } = data;\n        this.last_fetched_at = data.last_fetched_at;\n        this.setPollingInterval(data.notes.length);\n        $.each(notes, (i, note) => this.renderNote(note));\n\n        this.refreshing = false;\n      })\n      .catch(() => {\n        this.refreshing = false;\n      });\n  }\n\n  /**\n   * Increase @pollingInterval up to 120 seconds on every function call,\n   * if `shouldReset` has a truthy value, 'null' or 'undefined' the variable\n   * will reset to @basePollingInterval.\n   *\n   * Note: this function is used to gradually increase the polling interval\n   * if there aren't new notes coming from the server\n   */\n  setPollingInterval(shouldReset) {\n    var nthInterval;\n    if (shouldReset == null) {\n      shouldReset = true;\n    }\n    nthInterval = this.basePollingInterval * Math.pow(2, this.maxPollingSteps - 1);\n    if (shouldReset) {\n      this.pollingInterval = this.basePollingInterval;\n    } else if (this.pollingInterval < nthInterval) {\n      this.pollingInterval *= 2;\n    }\n    return this.initRefresh();\n  }\n\n  handleQuickActions(noteEntity) {\n    var votesBlock;\n    if (noteEntity.commands_changes) {\n      if ('merge' in noteEntity.commands_changes) {\n        Notes.checkMergeRequestStatus();\n      }\n\n      if ('emoji_award' in noteEntity.commands_changes) {\n        votesBlock = $('.js-awards-block').eq(0);\n\n        loadAwardsHandler()\n          .then(awardsHandler => {\n            awardsHandler.addAwardToEmojiBar(votesBlock, noteEntity.commands_changes.emoji_award);\n            awardsHandler.scrollToAwards();\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }\n  }\n\n  setupNewNote($note) {\n    // Update datetime format on the recent note\n    localTimeAgo($note.find('.js-timeago'), false);\n\n    this.collapseLongCommitList();\n    this.taskList.init();\n\n    // This stops the note highlight, #note_xxx`, from being removed after real time update\n    // The `:target` selector does not re-evaluate after we replace element in the DOM\n    Notes.updateNoteTargetSelector($note);\n    this.$noteToCleanHighlight = $note;\n  }\n\n  onHashChange() {\n    if (this.$noteToCleanHighlight) {\n      Notes.updateNoteTargetSelector(this.$noteToCleanHighlight);\n    }\n\n    this.$noteToCleanHighlight = null;\n  }\n\n  static updateNoteTargetSelector($note) {\n    const hash = getLocationHash();\n    // Needs to be an explicit true/false for the jQuery `toggleClass(force)`\n    const addTargetClass = Boolean(hash && $note.filter(`#${hash}`).length > 0);\n    $note.toggleClass('target', addTargetClass);\n  }\n\n  /**\n   * Render note in main comments area.\n   *\n   * Note: for rendering inline notes use renderDiscussionNote\n   */\n  renderNote(noteEntity, $form, $notesList = $('.main-notes-list')) {\n    if (noteEntity.discussion_html) {\n      return this.renderDiscussionNote(noteEntity, $form);\n    }\n\n    if (!noteEntity.valid) {\n      if (noteEntity.errors && noteEntity.errors.commands_only) {\n        if (noteEntity.commands_changes && Object.keys(noteEntity.commands_changes).length > 0) {\n          $notesList.find('.system-note.being-posted').remove();\n        }\n        this.addFlash(noteEntity.errors.commands_only, 'notice', this.parentTimeline.get(0));\n        this.refresh();\n      }\n      return;\n    }\n\n    const $note = $notesList.find(`#note_${noteEntity.id}`);\n    if (Notes.isNewNote(noteEntity, this.note_ids)) {\n      if (isInMRPage()) {\n        return;\n      }\n\n      this.note_ids.push(noteEntity.id);\n\n      if ($notesList.length) {\n        $notesList.find('.system-note.being-posted').remove();\n      }\n      const $newNote = Notes.animateAppendNote(noteEntity.html, $notesList);\n\n      this.setupNewNote($newNote);\n      this.refresh();\n      return this.updateNotesCount(1);\n    } else if (Notes.isUpdatedNote(noteEntity, $note)) {\n      // The server can send the same update multiple times so we need to make sure to only update once per actual update.\n      const isEditing = $note.hasClass('is-editing');\n      const initialContent = normalizeNewlines(\n        $note\n          .find('.original-note-content')\n          .text()\n          .trim(),\n      );\n      const $textarea = $note.find('.js-note-text');\n      const currentContent = $textarea.val();\n      // There can be CRLF vs LF mismatches if we don't sanitize and compare the same way\n      const sanitizedNoteNote = normalizeNewlines(noteEntity.note);\n      const isTextareaUntouched =\n        currentContent === initialContent || currentContent === sanitizedNoteNote;\n\n      if (isEditing && isTextareaUntouched) {\n        $textarea.val(noteEntity.note);\n        this.updatedNotesTrackingMap[noteEntity.id] = noteEntity;\n      } else if (isEditing && !isTextareaUntouched) {\n        this.putConflictEditWarningInPlace(noteEntity, $note);\n        this.updatedNotesTrackingMap[noteEntity.id] = noteEntity;\n      } else {\n        const $updatedNote = Notes.animateUpdateNote(noteEntity.html, $note);\n        this.setupNewNote($updatedNote);\n      }\n    }\n  }\n\n  isParallelView() {\n    return Cookies.get('diff_view') === 'parallel';\n  }\n\n  /**\n   * Render note in discussion area. To render inline notes use renderDiscussionNote.\n   */\n  renderDiscussionNote(noteEntity, $form) {\n    var discussionContainer, form, row, lineType, diffAvatarContainer;\n\n    if (!Notes.isNewNote(noteEntity, this.note_ids)) {\n      return;\n    }\n    this.note_ids.push(noteEntity.id);\n\n    form = $form || $(`.js-discussion-note-form[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n    row =\n      form.length || !noteEntity.discussion_line_code\n        ? form.closest('tr')\n        : $(`#${noteEntity.discussion_line_code}`);\n\n    if (noteEntity.on_image) {\n      row = form;\n    }\n\n    lineType = this.isParallelView() ? form.find('#line_type').val() : 'old';\n    diffAvatarContainer = row\n      .prevAll('.line_holder')\n      .first()\n      .find('.js-avatar-container.' + lineType + '_line');\n    // is this the first note of discussion?\n    discussionContainer = $(`.notes[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n    if (!discussionContainer.length) {\n      discussionContainer = form.closest('.discussion').find('.notes');\n    }\n    if (discussionContainer.length === 0) {\n      if (noteEntity.diff_discussion_html) {\n        var $discussion = $(noteEntity.diff_discussion_html).renderGFM();\n\n        if (!this.isParallelView() || row.hasClass('js-temp-notes-holder') || noteEntity.on_image) {\n          // insert the note and the reply button after the temp row\n          row.after($discussion);\n        } else {\n          // Merge new discussion HTML in\n          var $notes = $discussion.find(`.notes[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n          var contentContainerClass =\n            '.' +\n            $notes\n              .closest('.notes_content')\n              .attr('class')\n              .split(' ')\n              .join('.');\n\n          row\n            .find(contentContainerClass + ' .content')\n            .append($notes.closest('.content').children());\n        }\n      } else {\n        Notes.animateAppendNote(noteEntity.discussion_html, $('.main-notes-list'));\n      }\n    } else {\n      // append new note to all matching discussions\n      Notes.animateAppendNote(noteEntity.html, discussionContainer);\n    }\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined' && noteEntity.discussion_resolvable) {\n      gl.diffNotesCompileComponents();\n\n      this.renderDiscussionAvatar(diffAvatarContainer, noteEntity);\n    }\n\n    localTimeAgo($('.js-timeago'), false);\n    Notes.checkMergeRequestStatus();\n    return this.updateNotesCount(1);\n  }\n\n  getLineHolder(changesDiscussionContainer) {\n    return $(changesDiscussionContainer)\n      .closest('.notes_holder')\n      .prevAll('.line_holder')\n      .first()\n      .get(0);\n  }\n\n  renderDiscussionAvatar(diffAvatarContainer, noteEntity) {\n    var avatarHolder = diffAvatarContainer.find('.diff-comment-avatar-holders');\n\n    if (!avatarHolder.length) {\n      avatarHolder = document.createElement('diff-note-avatars');\n      avatarHolder.setAttribute('discussion-id', noteEntity.discussion_id);\n\n      diffAvatarContainer.append(avatarHolder);\n\n      gl.diffNotesCompileComponents();\n    }\n  }\n\n  /**\n   * Called in response the main target form has been successfully submitted.\n   *\n   * Removes any errors.\n   * Resets text and preview.\n   * Resets buttons.\n   */\n  resetMainTargetForm(e) {\n    var form;\n    form = $('.js-main-target-form');\n    // remove validation errors\n    form.find('.js-errors').remove();\n    // reset text and preview\n    form.find('.js-md-write-button').click();\n    form\n      .find('.js-note-text')\n      .val('')\n      .trigger('input');\n    form\n      .find('.js-note-text')\n      .data('autosave')\n      .reset();\n\n    var event = document.createEvent('Event');\n    event.initEvent('autosize:update', true, false);\n    form.find('.js-autosize')[0].dispatchEvent(event);\n\n    this.updateTargetButtons(e);\n  }\n\n  reenableTargetFormSubmitButton() {\n    var form;\n    form = $('.js-main-target-form');\n    return form.find('.js-note-text').trigger('input');\n  }\n\n  /**\n   * Shows the main form and does some setup on it.\n   *\n   * Sets some hidden fields in the form.\n   */\n  setupMainTargetNoteForm(enableGFM) {\n    var form;\n    // find the form\n    form = $('.js-new-note-form');\n    // Set a global clone of the form for later cloning\n    this.formClone = form.clone();\n    // show the form\n    this.setupNoteForm(form, enableGFM);\n    // fix classes\n    form.removeClass('js-new-note-form');\n    form.addClass('js-main-target-form');\n    form.find('#note_line_code').remove();\n    form.find('#note_position').remove();\n    form.find('#note_type').val('');\n    form.find('#note_project_id').remove();\n    form.find('#in_reply_to_discussion_id').remove();\n    form\n      .find('.js-comment-resolve-button')\n      .closest('comment-and-resolve-btn')\n      .remove();\n    this.parentTimeline = form.parents('.timeline');\n\n    if (form.length) {\n      Notes.initCommentTypeToggle(form.get(0));\n    }\n  }\n\n  /**\n   * General note form setup.\n   *\n   * deactivates the submit button when text is empty\n   * hides the preview button when text is empty\n   * setup GFM auto complete\n   * show the form\n   */\n  setupNoteForm(form, enableGFM = defaultAutocompleteConfig) {\n    var textarea, key;\n    this.glForm = new GLForm(form, enableGFM);\n    textarea = form.find('.js-note-text');\n    key = [\n      'Note',\n      form.find('#note_noteable_type').val(),\n      form.find('#note_noteable_id').val(),\n      form.find('#note_commit_id').val(),\n      form.find('#note_type').val(),\n      form.find('#note_project_id').val(),\n      form.find('#in_reply_to_discussion_id').val(),\n\n      // LegacyDiffNote\n      form.find('#note_line_code').val(),\n\n      // DiffNote\n      form.find('#note_position').val(),\n    ];\n    return new Autosave(textarea, key);\n  }\n\n  /**\n   * Called in response to the new note form being submitted\n   *\n   * Adds new note to list.\n   */\n  addNote($form, note) {\n    return this.renderNote(note);\n  }\n\n  addNoteError($form) {\n    let formParentTimeline;\n    if ($form.hasClass('js-main-target-form')) {\n      formParentTimeline = $form.parents('.timeline');\n    } else if ($form.hasClass('js-discussion-note-form')) {\n      formParentTimeline = $form.closest('.discussion-notes').find('.notes');\n    }\n    return this.addFlash(\n      'Your comment could not be submitted! Please check your network connection and try again.',\n      'alert',\n      formParentTimeline.get(0),\n    );\n  }\n\n  updateNoteError($parentTimeline) {\n    // eslint-disable-next-line no-new\n    new Flash(\n      'Your comment could not be updated! Please check your network connection and try again.',\n    );\n  }\n\n  /**\n   * Called in response to the new note form being submitted\n   *\n   * Adds new note to list.\n   */\n  addDiscussionNote($form, note, isNewDiffComment) {\n    if ($form.attr('data-resolve-all') != null) {\n      var projectPath = $form.data('projectPath');\n      var discussionId = $form.data('discussionId');\n      var mergeRequestId = $form.data('noteableIid');\n\n      if (ResolveService != null) {\n        ResolveService.toggleResolveForDiscussion(mergeRequestId, discussionId);\n      }\n    }\n\n    this.renderNote(note, $form);\n    // cleanup after successfully creating a diff/discussion note\n    if (isNewDiffComment) {\n      this.removeDiscussionNoteForm($form);\n    }\n  }\n\n  /**\n   * Called in response to the edit note form being submitted\n   *\n   * Updates the current note field.\n   */\n  updateNote(noteEntity, $targetNote) {\n    var $noteEntityEl, $note_li;\n    // Convert returned HTML to a jQuery object so we can modify it further\n    $noteEntityEl = $(noteEntity.html);\n    this.revertNoteEditForm($targetNote);\n    $noteEntityEl.renderGFM();\n    // Find the note's `li` element by ID and replace it with the updated HTML\n    $note_li = $('.note-row-' + noteEntity.id);\n\n    $note_li.replaceWith($noteEntityEl);\n    this.setupNewNote($noteEntityEl);\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n      gl.diffNotesCompileComponents();\n    }\n  }\n\n  checkContentToAllowEditing($el) {\n    var initialContent = $el\n      .find('.original-note-content')\n      .text()\n      .trim();\n    var currentContent = $el.find('.js-note-text').val();\n    var isAllowed = true;\n\n    if (currentContent === initialContent) {\n      this.removeNoteEditForm($el);\n    } else {\n      var $buttons = $el.find('.note-form-actions');\n      var isWidgetVisible = isInViewport($el.get(0));\n\n      if (!isWidgetVisible) {\n        scrollToElement($el);\n      }\n\n      $el.find('.js-finish-edit-warning').show();\n      isAllowed = false;\n    }\n\n    return isAllowed;\n  }\n\n  /**\n   * Called in response to clicking the edit note link\n   *\n   * Replaces the note text with the note edit form\n   * Adds a data attribute to the form with the original content of the note for cancellations\n   */\n  showEditForm(e, scrollTo, myLastNote) {\n    e.preventDefault();\n\n    var $target = $(e.target);\n    var $editForm = $(this.getEditFormSelector($target));\n    var $note = $target.closest('.note');\n    var $currentlyEditing = $('.note.is-editing:visible');\n\n    if ($currentlyEditing.length) {\n      var isEditAllowed = this.checkContentToAllowEditing($currentlyEditing);\n\n      if (!isEditAllowed) {\n        return;\n      }\n    }\n\n    $note.find('.js-note-attachment-delete').show();\n    $editForm.addClass('current-note-edit-form');\n    $note.addClass('is-editing');\n    this.putEditFormInPlace($target);\n  }\n\n  /**\n   * Called in response to clicking the edit note link\n   *\n   * Hides edit form and restores the original note text to the editor textarea.\n   */\n  cancelEdit(e) {\n    e.preventDefault();\n    const $target = $(e.target);\n    const $note = $target.closest('.note');\n    const noteId = $note.attr('data-note-id');\n\n    this.revertNoteEditForm($target);\n\n    if (this.updatedNotesTrackingMap[noteId]) {\n      const $newNote = $(this.updatedNotesTrackingMap[noteId].html);\n      $note.replaceWith($newNote);\n      this.setupNewNote($newNote);\n      // Now that we have taken care of the update, clear it out\n      delete this.updatedNotesTrackingMap[noteId];\n    } else {\n      $note.find('.js-finish-edit-warning').hide();\n      this.removeNoteEditForm($note);\n    }\n  }\n\n  revertNoteEditForm($target) {\n    $target = $target || $('.note.is-editing:visible');\n    var selector = this.getEditFormSelector($target);\n    var $editForm = $(selector);\n\n    $editForm.insertBefore('.diffs');\n    $editForm.find('.js-comment-save-button').enable();\n    $editForm.find('.js-finish-edit-warning').hide();\n  }\n\n  getEditFormSelector($el) {\n    var selector = '.note-edit-form:not(.mr-note-edit-form)';\n\n    if ($el.parents('#diffs').length) {\n      selector = '.note-edit-form.mr-note-edit-form';\n    }\n\n    return selector;\n  }\n\n  removeNoteEditForm($note) {\n    var form = $note.find('.diffs .current-note-edit-form');\n\n    $note.removeClass('is-editing');\n    form.removeClass('current-note-edit-form');\n    form.find('.js-finish-edit-warning').hide();\n    // Replace markdown textarea text with original note text.\n    return form.find('.js-note-text').val(form.find('form.edit-note').data('originalNote'));\n  }\n\n  /**\n   * Called in response to deleting a note of any kind.\n   *\n   * Removes the actual note from view.\n   * Removes the whole discussion if the last note is being removed.\n   */\n  removeNote(e) {\n    var noteElId, noteId, dataNoteId, $note, lineHolder;\n    $note = $(e.currentTarget).closest('.note');\n    noteElId = $note.attr('id');\n    noteId = $note.attr('data-note-id');\n    lineHolder = $(e.currentTarget)\n      .closest('.notes[data-discussion-id]')\n      .closest('.notes_holder')\n      .prev('.line_holder');\n    $(`.note[id=\"${noteElId}\"]`).each(\n      (function(_this) {\n        // A same note appears in the \"Discussion\" and in the \"Changes\" tab, we have\n        // to remove all. Using $('.note[id='noteId']') ensure we get all the notes,\n        // where $('#noteId') would return only one.\n        return function(i, el) {\n          var $note, $notes;\n          $note = $(el);\n          $notes = $note.closest('.discussion-notes');\n          const discussionId = $('.notes', $notes).data('discussionId');\n\n          if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n            if (gl.diffNoteApps[noteElId]) {\n              gl.diffNoteApps[noteElId].$destroy();\n            }\n          }\n\n          $note.remove();\n\n          // check if this is the last note for this line\n          if ($notes.find('.note').length === 0) {\n            var notesTr = $notes.closest('tr');\n\n            // \"Discussions\" tab\n            $notes.closest('.timeline-entry').remove();\n\n            $(`.js-diff-avatars-${discussionId}`).trigger('remove.vue');\n\n            // The notes tr can contain multiple lists of notes, like on the parallel diff\n            // notesTr does not exist for image diffs\n            if (notesTr.find('.discussion-notes').length > 1 || notesTr.length === 0) {\n              const $diffFile = $notes.closest('.diff-file');\n              if ($diffFile.length > 0) {\n                const removeBadgeEvent = new CustomEvent('removeBadge.imageDiff', {\n                  detail: {\n                    // badgeNumber's start with 1 and index starts with 0\n                    badgeNumber: $notes.index() + 1,\n                  },\n                });\n\n                $diffFile[0].dispatchEvent(removeBadgeEvent);\n              }\n\n              $notes.remove();\n            } else if (notesTr.length > 0) {\n              notesTr.remove();\n            }\n          }\n        };\n      })(this),\n    );\n\n    Notes.checkMergeRequestStatus();\n    return this.updateNotesCount(-1);\n  }\n\n  /**\n   * Called in response to clicking the delete attachment link\n   *\n   * Removes the attachment wrapper view, including image tag if it exists\n   * Resets the note editing form\n   */\n  removeAttachment() {\n    const $note = $(this).closest('.note');\n    $note.find('.note-attachment').remove();\n    $note.find('.note-body > .note-text').show();\n    $note.find('.note-header').show();\n    return $note.find('.diffs .current-note-edit-form').remove();\n  }\n\n  /**\n   * Called when clicking on the \"reply\" button for a diff line.\n   *\n   * Shows the note form below the notes.\n   */\n  onReplyToDiscussionNote(e) {\n    this.replyToDiscussionNote(e.target);\n  }\n\n  replyToDiscussionNote(target) {\n    var form, replyLink;\n    form = this.cleanForm(this.formClone.clone());\n    replyLink = $(target).closest('.js-discussion-reply-button');\n    // insert the form after the button\n    replyLink\n      .closest('.discussion-reply-holder')\n      .hide()\n      .after(form);\n    // show the form\n    return this.setupDiscussionNoteForm(replyLink, form);\n  }\n\n  /**\n   * Shows the diff or discussion form and does some setup on it.\n   *\n   * Sets some hidden fields in the form.\n   *\n   * Note: dataHolder must have the \"discussionId\" and \"lineCode\" data attributes set.\n   */\n  setupDiscussionNoteForm(dataHolder, form) {\n    // setup note target\n    let diffFileData = dataHolder.closest('.text-file');\n\n    if (diffFileData.length === 0) {\n      diffFileData = dataHolder.closest('.image');\n    }\n\n    var discussionID = dataHolder.data('discussionId');\n\n    if (discussionID) {\n      form.attr('data-discussion-id', discussionID);\n      form.find('#in_reply_to_discussion_id').val(discussionID);\n    }\n\n    form.find('#note_project_id').val(dataHolder.data('discussionProjectId'));\n\n    form.attr('data-line-code', dataHolder.data('lineCode'));\n    form.find('#line_type').val(dataHolder.data('lineType'));\n\n    form.find('#note_noteable_type').val(diffFileData.data('noteableType'));\n    form.find('#note_noteable_id').val(diffFileData.data('noteableId'));\n    form.find('#note_commit_id').val(diffFileData.data('commitId'));\n\n    form.find('#note_type').val(dataHolder.data('noteType'));\n\n    // LegacyDiffNote\n    form.find('#note_line_code').val(dataHolder.data('lineCode'));\n\n    // DiffNote\n    form.find('#note_position').val(dataHolder.attr('data-position'));\n\n    form\n      .find('.js-note-discard')\n      .show()\n      .removeClass('js-note-discard')\n      .addClass('js-close-discussion-note-form')\n      .text(form.find('.js-close-discussion-note-form').data('cancelText'));\n    form.find('.js-note-target-close').remove();\n    form.find('.js-note-new-discussion').remove();\n    this.setupNoteForm(form);\n\n    form.removeClass('js-main-target-form').addClass('discussion-form js-discussion-note-form');\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n      var $commentBtn = form.find('comment-and-resolve-btn');\n      $commentBtn.attr(':discussion-id', `'${discussionID}'`);\n\n      gl.diffNotesCompileComponents();\n    }\n\n    form.find('.js-note-text').focus();\n    form.find('.js-comment-resolve-button').attr('data-discussion-id', discussionID);\n  }\n\n  /**\n   * Called when clicking on the \"add a comment\" button on the side of a diff line.\n   *\n   * Inserts a temporary row for the form below the line.\n   * Sets up the form and shows it.\n   */\n  onAddDiffNote(e) {\n    e.preventDefault();\n    const link = e.currentTarget || e.target;\n    const $link = $(link);\n    const showReplyInput = !$link.hasClass('js-diff-comment-avatar');\n    this.toggleDiffNote({\n      target: $link,\n      lineType: link.dataset.lineType,\n      showReplyInput,\n    });\n  }\n\n  onAddImageDiffNote(e) {\n    const $link = $(e.currentTarget || e.target);\n    const $diffFile = $link.closest('.diff-file');\n\n    const clickEvent = new CustomEvent('click.imageDiff', {\n      detail: e,\n    });\n\n    $diffFile[0].dispatchEvent(clickEvent);\n\n    // Setup comment form\n    let newForm;\n    const $noteContainer = $link.closest('.diff-viewer').find('.note-container');\n    const $form = $noteContainer.find('> .discussion-form');\n\n    if ($form.length === 0) {\n      newForm = this.cleanForm(this.formClone.clone());\n      newForm.appendTo($noteContainer);\n    } else {\n      newForm = $form;\n    }\n\n    this.setupDiscussionNoteForm($link, newForm);\n  }\n\n  toggleDiffNote({ target, lineType, forceShow, showReplyInput = false }) {\n    var $link,\n      addForm,\n      hasNotes,\n      newForm,\n      noteForm,\n      replyButton,\n      row,\n      rowCssToAdd,\n      targetContent,\n      isDiffCommentAvatar;\n    $link = $(target);\n    row = $link.closest('tr');\n    const nextRow = row.next();\n    let targetRow = row;\n    if (nextRow.is('.notes_holder')) {\n      targetRow = nextRow;\n    }\n\n    hasNotes = nextRow.is('.notes_holder');\n    addForm = false;\n    let lineTypeSelector = '';\n    rowCssToAdd =\n      '<tr class=\"notes_holder js-temp-notes-holder\"><td class=\"notes_line\" colspan=\"2\"></td><td class=\"notes_content\"><div class=\"content\"></div></td></tr>';\n    // In parallel view, look inside the correct left/right pane\n    if (this.isParallelView()) {\n      lineTypeSelector = `.${lineType}`;\n      rowCssToAdd =\n        '<tr class=\"notes_holder js-temp-notes-holder\"><td class=\"notes_line old\"></td><td class=\"notes_content parallel old\"><div class=\"content\"></div></td><td class=\"notes_line new\"></td><td class=\"notes_content parallel new\"><div class=\"content\"></div></td></tr>';\n    }\n    const notesContentSelector = `.notes_content${lineTypeSelector} .content`;\n    let notesContent = targetRow.find(notesContentSelector);\n\n    if (hasNotes && showReplyInput) {\n      targetRow.show();\n      notesContent = targetRow.find(notesContentSelector);\n      if (notesContent.length) {\n        notesContent.show();\n        replyButton = notesContent.find('.js-discussion-reply-button:visible');\n        if (replyButton.length) {\n          this.replyToDiscussionNote(replyButton[0]);\n        } else {\n          // In parallel view, the form may not be present in one of the panes\n          noteForm = notesContent.find('.js-discussion-note-form');\n          if (noteForm.length === 0) {\n            addForm = true;\n          }\n        }\n      }\n    } else if (showReplyInput) {\n      // add a notes row and insert the form\n      row.after(rowCssToAdd);\n      targetRow = row.next();\n      notesContent = targetRow.find(notesContentSelector);\n      addForm = true;\n    } else {\n      const isCurrentlyShown = targetRow.find('.content:not(:empty)').is(':visible');\n      const isForced = forceShow === true || forceShow === false;\n      const showNow = forceShow === true || (!isCurrentlyShown && !isForced);\n\n      targetRow.toggleClass('hide', !showNow);\n      notesContent.toggleClass('hide', !showNow);\n    }\n\n    if (addForm) {\n      newForm = this.cleanForm(this.formClone.clone());\n      newForm.appendTo(notesContent);\n      // show the form\n      return this.setupDiscussionNoteForm($link, newForm);\n    }\n  }\n\n  /**\n   * Called in response to \"cancel\" on a diff note form.\n   *\n   * Shows the reply button again.\n   * Removes the form and if necessary it's temporary row.\n   */\n  removeDiscussionNoteForm(form) {\n    var glForm, row;\n    row = form.closest('tr');\n    glForm = form.data('glForm');\n    glForm.destroy();\n    form\n      .find('.js-note-text')\n      .data('autosave')\n      .reset();\n    // show the reply button (will only work for replies)\n    form.prev('.discussion-reply-holder').show();\n    if (row.is('.js-temp-notes-holder')) {\n      // remove temporary row for diff lines\n      return row.remove();\n    } else {\n      // only remove the form\n      return form.remove();\n    }\n  }\n\n  cancelDiscussionForm(e) {\n    e.preventDefault();\n    const $form = $(e.target).closest('.js-discussion-note-form');\n    const $discussionNote = $(e.target).closest('.discussion-notes');\n\n    if ($discussionNote.length === 0) {\n      // Only send blur event when the discussion form\n      // is not part of a discussion note\n      const $diffFile = $form.closest('.diff-file');\n\n      if ($diffFile.length > 0) {\n        const blurEvent = new CustomEvent('blur.imageDiff', {\n          detail: e,\n        });\n\n        $diffFile[0].dispatchEvent(blurEvent);\n      }\n    }\n\n    return this.removeDiscussionNoteForm($form);\n  }\n\n  /**\n   * Called after an attachment file has been selected.\n   *\n   * Updates the file name for the selected attachment.\n   */\n  updateFormAttachment() {\n    var filename, form;\n    form = $(this).closest('form');\n    // get only the basename\n    filename = $(this)\n      .val()\n      .replace(/^.*[\\\\\\/]/, '');\n    return form.find('.js-attachment-filename').text(filename);\n  }\n\n  /**\n   * Called when the tab visibility changes\n   */\n  visibilityChange() {\n    return this.refresh();\n  }\n\n  updateTargetButtons(e) {\n    var closebtn, closetext, discardbtn, form, reopenbtn, reopentext, textarea;\n    textarea = $(e.target);\n    form = textarea.parents('form');\n    reopenbtn = form.find('.js-note-target-reopen');\n    closebtn = form.find('.js-note-target-close');\n    discardbtn = form.find('.js-note-discard');\n\n    if (textarea.val().trim().length > 0) {\n      reopentext = reopenbtn.attr('data-alternative-text');\n      closetext = closebtn.attr('data-alternative-text');\n      if (reopenbtn.text() !== reopentext) {\n        reopenbtn.text(reopentext);\n      }\n      if (closebtn.text() !== closetext) {\n        closebtn.text(closetext);\n      }\n      if (reopenbtn.is(':not(.btn-comment-and-reopen)')) {\n        reopenbtn.addClass('btn-comment-and-reopen');\n      }\n      if (closebtn.is(':not(.btn-comment-and-close)')) {\n        closebtn.addClass('btn-comment-and-close');\n      }\n      if (discardbtn.is(':hidden')) {\n        return discardbtn.show();\n      }\n    } else {\n      reopentext = reopenbtn.data('originalText');\n      closetext = closebtn.data('originalText');\n      if (reopenbtn.text() !== reopentext) {\n        reopenbtn.text(reopentext);\n      }\n      if (closebtn.text() !== closetext) {\n        closebtn.text(closetext);\n      }\n      if (reopenbtn.is('.btn-comment-and-reopen')) {\n        reopenbtn.removeClass('btn-comment-and-reopen');\n      }\n      if (closebtn.is('.btn-comment-and-close')) {\n        closebtn.removeClass('btn-comment-and-close');\n      }\n      if (discardbtn.is(':visible')) {\n        return discardbtn.hide();\n      }\n    }\n  }\n\n  putEditFormInPlace($el) {\n    var $editForm = $(this.getEditFormSelector($el));\n    var $note = $el.closest('.note');\n\n    $editForm.insertAfter($note.find('.note-text'));\n\n    var $originalContentEl = $note.find('.original-note-content');\n    var originalContent = $originalContentEl.text().trim();\n    var postUrl = $originalContentEl.data('postUrl');\n    var targetId = $originalContentEl.data('targetId');\n    var targetType = $originalContentEl.data('targetType');\n    var markdownVersion = $originalContentEl.data('markdownVersion');\n\n    this.glForm = new GLForm($editForm.find('form'), this.enableGFM);\n\n    $editForm\n      .find('form')\n      .attr('action', `${postUrl}?html=true`)\n      .attr('data-remote', 'true')\n      .attr('data-markdown-version', markdownVersion);\n    $editForm.find('.js-form-target-id').val(targetId);\n    $editForm.find('.js-form-target-type').val(targetType);\n    $editForm\n      .find('.js-note-text')\n      .focus()\n      .val(originalContent);\n    $editForm.find('.js-md-write-button').trigger('click');\n    $editForm.find('.referenced-users').hide();\n  }\n\n  putConflictEditWarningInPlace(noteEntity, $note) {\n    if ($note.find('.js-conflict-edit-warning').length === 0) {\n      const $alert = $(`<div class=\"js-conflict-edit-warning alert alert-danger\">\n        This comment has changed since you started editing, please review the\n        <a href=\"#note_${noteEntity.id}\" target=\"_blank\" rel=\"noopener noreferrer\">\n          updated comment\n        </a>\n        to ensure information is not lost\n      </div>`);\n      $alert.insertAfter($note.find('.note-text'));\n    }\n  }\n\n  updateNotesCount(updateCount) {\n    return this.notesCountBadge.text(parseInt(this.notesCountBadge.text(), 10) + updateCount);\n  }\n\n  static renderPlaceholderComponent($container) {\n    const el = $container.find('.js-code-placeholder').get(0);\n    // eslint-disable-next-line no-new\n    new Vue({\n      el,\n      components: {\n        SkeletonLoadingContainer,\n      },\n      render(createElement) {\n        return createElement('skeleton-loading-container');\n      },\n    });\n  }\n\n  static renderDiffContent($container, data) {\n    const { discussion_html } = data;\n    const lines = $(discussion_html).find('.line_holder');\n    lines.addClass('fade-in');\n    $container.find('.diff-content > table > tbody').prepend(lines);\n    const fileHolder = $container.find('.file-holder');\n    $container.find('.line-holder-placeholder').remove();\n    syntaxHighlight(fileHolder);\n  }\n\n  onClickRetryLazyLoad(e) {\n    const $retryButton = $(e.currentTarget);\n\n    $retryButton.prop('disabled', true);\n\n    return this.loadLazyDiff(e)\n    .then(() => {\n      $retryButton.prop('disabled', false);\n    });\n  }\n\n  loadLazyDiff(e) {\n    const $container = $(e.currentTarget).closest('.js-toggle-container');\n    Notes.renderPlaceholderComponent($container);\n\n    $container.find('.js-toggle-lazy-diff').removeClass('js-toggle-lazy-diff');\n\n    const $tableEl = $container.find('tbody');\n    if ($tableEl.length === 0) return;\n\n    const fileHolder = $container.find('.file-holder');\n    const url = fileHolder.data('linesPath');\n\n    const $errorContainer = $container.find('.js-error-lazy-load-diff');\n    const $successContainer = $container.find('.js-success-lazy-load');\n\n    /**\n     * We only fetch resolved discussions.\n     * Unresolved discussions don't have an endpoint being provided.\n     */\n    if (url) {\n      return axios\n      .get(url)\n      .then(({ data }) => {\n        // Reset state in case last request returned error\n        $successContainer.removeClass('hidden');\n        $errorContainer.addClass('hidden');\n\n        Notes.renderDiffContent($container, data);\n      })\n      .catch(() => {\n        $successContainer.addClass('hidden');\n        $errorContainer.removeClass('hidden');\n      });\n    }\n    return Promise.resolve();\n  }\n\n  toggleCommitList(e) {\n    const $element = $(e.currentTarget);\n    const $closestSystemCommitList = $element.siblings('.system-note-commit-list');\n\n    $element\n      .find('.fa')\n      .toggleClass('fa-angle-down')\n      .toggleClass('fa-angle-up');\n    $closestSystemCommitList.toggleClass('hide-shade');\n  }\n\n  /**\n   * Scans system notes with `ul` elements in system note body\n   * then collapse long commit list pushed by user to make it less\n   * intrusive.\n   */\n  collapseLongCommitList() {\n    const systemNotes = $('#notes-list')\n      .find('li.system-note')\n      .has('ul');\n\n    $.each(systemNotes, function(index, systemNote) {\n      const $systemNote = $(systemNote);\n      const headerMessage = $systemNote\n        .find('.note-text')\n        .find('p:first')\n        .text()\n        .replace(':', '');\n\n      $systemNote.find('.note-header .system-note-message').html(headerMessage);\n\n      if ($systemNote.find('li').length > MAX_VISIBLE_COMMIT_LIST_COUNT) {\n        $systemNote.find('.note-text').addClass('system-note-commit-list');\n        $systemNote.find('.system-note-commit-list-toggler').show();\n      } else {\n        $systemNote.find('.note-text').addClass('system-note-commit-list hide-shade');\n      }\n    });\n  }\n\n  addFlash(...flashParams) {\n    this.flashContainer = new Flash(...flashParams);\n  }\n\n  clearFlash() {\n    if (this.flashContainer) {\n      this.flashContainer.style.display = 'none';\n      this.flashContainer = null;\n    }\n  }\n\n  cleanForm($form) {\n    // Remove JS classes that are not needed here\n    $form.find('.js-comment-type-dropdown').removeClass('btn-group');\n\n    // Remove dropdown\n    $form.find('.dropdown-menu').remove();\n\n    return $form;\n  }\n\n  /**\n   * Check if note does not exists on page\n   */\n  static isNewNote(noteEntity, noteIds) {\n    return $.inArray(noteEntity.id, noteIds) === -1;\n  }\n\n  /**\n   * Check if $note already contains the `noteEntity` content\n   */\n  static isUpdatedNote(noteEntity, $note) {\n    // There can be CRLF vs LF mismatches if we don't sanitize and compare the same way\n    const sanitizedNoteEntityText = normalizeNewlines(noteEntity.note.trim());\n    const currentNoteText = normalizeNewlines(\n      $note\n        .find('.original-note-content')\n        .first()\n        .text()\n        .trim(),\n    );\n    return sanitizedNoteEntityText !== currentNoteText;\n  }\n\n  static checkMergeRequestStatus() {\n    if (getPagePath(1) === 'merge_requests' && gl.mrWidget) {\n      gl.mrWidget.checkStatus();\n    }\n  }\n\n  static animateAppendNote(noteHtml, $notesList) {\n    const $note = $(noteHtml);\n\n    $note.addClass('fade-in-full').renderGFM();\n    $notesList.append($note);\n    return $note;\n  }\n\n  static animateUpdateNote(noteHtml, $note) {\n    const $updatedNote = $(noteHtml);\n\n    $updatedNote.addClass('fade-in').renderGFM();\n    $note.replaceWith($updatedNote);\n    return $updatedNote;\n  }\n\n  /**\n   * Get data from Form attributes to use for saving/submitting comment.\n   */\n  getFormData($form) {\n    const content = $form.find('.js-note-text').val();\n    return {\n      formData: $form.serialize(),\n      formContent: _.escape(content),\n      formAction: $form.attr('action'),\n      formContentOriginal: content,\n    };\n  }\n\n  /**\n   * Identify if comment has any quick actions\n   */\n  hasQuickActions(formContent) {\n    return REGEX_QUICK_ACTIONS.test(formContent);\n  }\n\n  /**\n   * Remove quick actions and leave comment with pure message\n   */\n  stripQuickActions(formContent) {\n    return formContent.replace(REGEX_QUICK_ACTIONS, '').trim();\n  }\n\n  /**\n   * Gets appropriate description from quick actions found in provided `formContent`\n   */\n  getQuickActionDescription(formContent, availableQuickActions = []) {\n    let tempFormContent;\n\n    // Identify executed quick actions from `formContent`\n    const executedCommands = availableQuickActions.filter((command, index) => {\n      const commandRegex = new RegExp(`/${command.name}`);\n      return commandRegex.test(formContent);\n    });\n\n    if (executedCommands && executedCommands.length) {\n      if (executedCommands.length > 1) {\n        tempFormContent = 'Applying multiple commands';\n      } else {\n        const commandDescription = executedCommands[0].description.toLowerCase();\n        tempFormContent = `Applying command to ${commandDescription}`;\n      }\n    } else {\n      tempFormContent = 'Applying command';\n    }\n\n    return tempFormContent;\n  }\n\n  /**\n   * Create placeholder note DOM element populated with comment body\n   * that we will show while comment is being posted.\n   * Once comment is _actually_ posted on server, we will have final element\n   * in response that we will show in place of this temporary element.\n   */\n  createPlaceholderNote({\n    formContent,\n    uniqueId,\n    isDiscussionNote,\n    currentUsername,\n    currentUserFullname,\n    currentUserAvatar,\n  }) {\n    const discussionClass = isDiscussionNote ? 'discussion' : '';\n    const $tempNote = $(\n      `<li id=\"${uniqueId}\" class=\"note being-posted fade-in-half timeline-entry\">\n         <div class=\"timeline-entry-inner\">\n            <div class=\"timeline-icon\">\n               <a href=\"/${_.escape(currentUsername)}\">\n                 <img class=\"avatar s40\" src=\"${currentUserAvatar}\" />\n               </a>\n            </div>\n            <div class=\"timeline-content ${discussionClass}\">\n               <div class=\"note-header\">\n                  <div class=\"note-header-info\">\n                     <a href=\"/${_.escape(currentUsername)}\">\n                       <span class=\"d-none d-sm-inline-block\">${_.escape(\n                         currentUsername,\n                       )}</span>\n                       <span class=\"note-headline-light\">${_.escape(\n                         currentUsername,\n                       )}</span>\n                     </a>\n                  </div>\n               </div>\n               <div class=\"note-body\">\n                 <div class=\"note-text\">\n                   <p>${formContent}</p>\n                 </div>\n               </div>\n            </div>\n         </div>\n      </li>`,\n    );\n\n    $tempNote.find('.d-none.d-sm-inline-block').text(_.escape(currentUserFullname));\n    $tempNote\n      .find('.note-headline-light')\n      .text(`@${_.escape(currentUsername)}`);\n\n    return $tempNote;\n  }\n\n  /**\n   * Create Placeholder System Note DOM element populated with quick action description\n   */\n  createPlaceholderSystemNote({ formContent, uniqueId }) {\n    const $tempNote = $(\n      `<li id=\"${uniqueId}\" class=\"note system-note timeline-entry being-posted fade-in-half\">\n         <div class=\"timeline-entry-inner\">\n           <div class=\"timeline-content\">\n             <i>${formContent}</i>\n           </div>\n         </div>\n       </li>`,\n    );\n\n    return $tempNote;\n  }\n\n  /**\n   * This method does following tasks step-by-step whenever a new comment\n   * is submitted by user (both main thread comments as well as discussion comments).\n   *\n   * 1) Get Form metadata\n   * 2) Identify comment type; a) Main thread b) Discussion thread c) Discussion resolve\n   * 3) Build temporary placeholder element (using `createPlaceholderNote`)\n   * 4) Show placeholder note on UI\n   * 5) Perform network request to submit the note using `axios.post`\n   *    a) If request is successfully completed\n   *        1. Remove placeholder element\n   *        2. Show submitted Note element\n   *        3. Perform post-submit errands\n   *           a. Mark discussion as resolved if comment submission was for resolve.\n   *           b. Reset comment form to original state.\n   *    b) If request failed\n   *        1. Remove placeholder element\n   *        2. Show error Flash message about failure\n   */\n  postComment(e) {\n    e.preventDefault();\n\n    // Get Form metadata\n    const $submitBtn = $(e.target);\n    $submitBtn.prop('disabled', true);\n    let $form = $submitBtn.parents('form');\n    const $closeBtn = $form.find('.js-note-target-close');\n    const isDiscussionNote =\n      $submitBtn\n        .parent()\n        .find('li.droplab-item-selected')\n        .attr('id') === 'discussion';\n    const isMainForm = $form.hasClass('js-main-target-form');\n    const isDiscussionForm = $form.hasClass('js-discussion-note-form');\n    const isDiscussionResolve = $submitBtn.hasClass('js-comment-resolve-button');\n    const { formData, formContent, formAction, formContentOriginal } = this.getFormData($form);\n    let noteUniqueId;\n    let systemNoteUniqueId;\n    let hasQuickActions = false;\n    let $notesContainer;\n    let tempFormContent;\n\n    // Get reference to notes container based on type of comment\n    if (isDiscussionForm) {\n      $notesContainer = $form.parent('.discussion-notes').find('.notes');\n    } else if (isMainForm) {\n      $notesContainer = $('ul.main-notes-list');\n    }\n\n    // If comment is to resolve discussion, disable submit buttons while\n    // comment posting is finished.\n    if (isDiscussionResolve) {\n      $form.find('.js-comment-submit-button').disable();\n    }\n\n    tempFormContent = formContent;\n    if (this.hasQuickActions(formContent)) {\n      tempFormContent = this.stripQuickActions(formContent);\n      hasQuickActions = true;\n    }\n\n    // Show placeholder note\n    if (tempFormContent) {\n      noteUniqueId = _.uniqueId('tempNote_');\n      $notesContainer.append(\n        this.createPlaceholderNote({\n          formContent: tempFormContent,\n          uniqueId: noteUniqueId,\n          isDiscussionNote,\n          currentUsername: gon.current_username,\n          currentUserFullname: gon.current_user_fullname,\n          currentUserAvatar: gon.current_user_avatar_url,\n        }),\n      );\n    }\n\n    // Show placeholder system note\n    if (hasQuickActions) {\n      systemNoteUniqueId = _.uniqueId('tempSystemNote_');\n      $notesContainer.append(\n        this.createPlaceholderSystemNote({\n          formContent: this.getQuickActionDescription(\n            formContent,\n            AjaxCache.get(gl.GfmAutoComplete.dataSources.commands),\n          ),\n          uniqueId: systemNoteUniqueId,\n        }),\n      );\n    }\n\n    // Clear the form textarea\n    if ($notesContainer.length) {\n      if (isMainForm) {\n        this.resetMainTargetForm(e);\n      } else if (isDiscussionForm) {\n        this.removeDiscussionNoteForm($form);\n      }\n    }\n\n    $closeBtn.text($closeBtn.data('originalText'));\n\n    // Make request to submit comment on server\n    return axios\n      .post(`${formAction}?html=true`, formData)\n      .then(res => {\n        const note = res.data;\n\n        $submitBtn.prop('disabled', false);\n        // Submission successful! remove placeholder\n        $notesContainer.find(`#${noteUniqueId}`).remove();\n\n        const $diffFile = $form.closest('.diff-file');\n        if ($diffFile.length > 0) {\n          const blurEvent = new CustomEvent('blur.imageDiff', {\n            detail: e,\n          });\n\n          $diffFile[0].dispatchEvent(blurEvent);\n        }\n\n        // Reset cached commands list when command is applied\n        if (hasQuickActions) {\n          $form.find('textarea.js-note-text').trigger('clear-commands-cache.atwho');\n        }\n\n        // Clear previous form errors\n        this.clearFlashWrapper();\n\n        // Check if this was discussion comment\n        if (isDiscussionForm) {\n          // Remove flash-container\n          $notesContainer.find('.flash-container').remove();\n\n          // If comment intends to resolve discussion, do the same.\n          if (isDiscussionResolve) {\n            $form\n              .attr('data-discussion-id', $submitBtn.data('discussionId'))\n              .attr('data-resolve-all', 'true')\n              .attr('data-project-path', $submitBtn.data('projectPath'));\n          }\n\n          // Show final note element on UI\n          const isNewDiffComment = $notesContainer.length === 0;\n          this.addDiscussionNote($form, note, isNewDiffComment);\n\n          if (isNewDiffComment) {\n            // Add image badge, avatar badge and toggle discussion badge for new image diffs\n            const notePosition = $form.find('#note_position').val();\n            if ($diffFile.length > 0 && notePosition.length > 0) {\n              const { x, y, width, height } = JSON.parse(notePosition);\n              const addBadgeEvent = new CustomEvent('addBadge.imageDiff', {\n                detail: {\n                  x,\n                  y,\n                  width,\n                  height,\n                  noteId: `note_${note.id}`,\n                  discussionId: note.discussion_id,\n                },\n              });\n\n              $diffFile[0].dispatchEvent(addBadgeEvent);\n            }\n          }\n\n          // append flash-container to the Notes list\n          if ($notesContainer.length) {\n            $notesContainer.append('<div class=\"flash-container\" style=\"display: none;\"></div>');\n          }\n        } else if (isMainForm) {\n          // Check if this was main thread comment\n          // Show final note element on UI and perform form and action buttons cleanup\n          this.addNote($form, note);\n          this.reenableTargetFormSubmitButton(e);\n        }\n\n        if (note.commands_changes) {\n          this.handleQuickActions(note);\n        }\n\n        $form.trigger('ajax:success', [note]);\n      })\n      .catch(() => {\n        // Submission failed, remove placeholder note and show Flash error message\n        $notesContainer.find(`#${noteUniqueId}`).remove();\n        $submitBtn.prop('disabled', false);\n        const blurEvent = new CustomEvent('blur.imageDiff', {\n          detail: e,\n        });\n\n        const closestDiffFile = $form.closest('.diff-file');\n\n        if (closestDiffFile.length) {\n          closestDiffFile[0].dispatchEvent(blurEvent);\n        }\n\n        if (hasQuickActions) {\n          $notesContainer.find(`#${systemNoteUniqueId}`).remove();\n        }\n\n        // Show form again on UI on failure\n        if (isDiscussionForm && $notesContainer.length) {\n          const replyButton = $notesContainer.parent().find('.js-discussion-reply-button');\n          this.replyToDiscussionNote(replyButton[0]);\n          $form = $notesContainer.parent().find('form');\n        }\n\n        $form.find('.js-note-text').val(formContentOriginal);\n        this.reenableTargetFormSubmitButton(e);\n        this.addNoteError($form);\n      });\n  }\n\n  /**\n   * This method does following tasks step-by-step whenever an existing comment\n   * is updated by user (both main thread comments as well as discussion comments).\n   *\n   * 1) Get Form metadata\n   * 2) Update note element with new content\n   * 3) Perform network request to submit the updated note using `axios.post`\n   *    a) If request is successfully completed\n   *        1. Show submitted Note element\n   *    b) If request failed\n   *        1. Revert Note element to original content\n   *        2. Show error Flash message about failure\n   */\n  updateComment(e) {\n    e.preventDefault();\n\n    // Get Form metadata\n    const $submitBtn = $(e.target);\n    const $form = $submitBtn.parents('form');\n    const $closeBtn = $form.find('.js-note-target-close');\n    const $editingNote = $form.parents('.note.is-editing');\n    const $noteBody = $editingNote.find('.js-task-list-container');\n    const $noteBodyText = $noteBody.find('.note-text');\n    const { formData, formContent, formAction } = this.getFormData($form);\n    const $diffFile = $form.closest('.diff-file');\n    const $notesContainer = $form.closest('.notes');\n\n    // Cache original comment content\n    const cachedNoteBodyText = $noteBodyText.html();\n\n    // Show updated comment content temporarily\n    $noteBodyText.html(formContent);\n    $editingNote.removeClass('is-editing fade-in-full').addClass('being-posted fade-in-half');\n    $editingNote\n      .find('.note-headline-meta a')\n      .html(\n        '<i class=\"fa fa-spinner fa-spin\" aria-label=\"Comment is being updated\" aria-hidden=\"true\"></i>',\n      );\n\n    // Make request to update comment on server\n    axios\n      .post(`${formAction}?html=true`, formData)\n      .then(({ data }) => {\n        // Submission successful! render final note element\n        this.updateNote(data, $editingNote);\n      })\n      .catch(() => {\n        // Submission failed, revert back to original note\n        $noteBodyText.html(_.escape(cachedNoteBodyText));\n        $editingNote.removeClass('being-posted fade-in');\n        $editingNote.find('.fa.fa-spinner').remove();\n\n        // Show Flash message about failure\n        this.updateNoteError();\n      });\n\n    return $closeBtn.text($closeBtn.data('originalText'));\n  }\n}\n\nwindow.Notes = Notes;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TaskList\"] = factory();\n\telse\n\t\troot[\"TaskList\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar NodeArray, TaskList, closest, createEvent,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nNodeArray = function(nodeList) {\n  return Array.prototype.slice.apply(nodeList);\n};\n\nclosest = function(el, className) {\n  while (el && !el.classList.contains(className)) {\n    el = el.parentNode;\n  }\n  return el;\n};\n\ncreateEvent = function(eventName, detail) {\n  var event;\n  if (typeof Event === 'function') {\n    event = new Event(eventName, {\n      bubbles: true,\n      cancelable: true\n    });\n    event.detail = detail;\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventName, true, true, detail);\n  }\n  return event;\n};\n\nTaskList = (function() {\n  function TaskList(el1) {\n    this.el = el1;\n    this.container = closest(this.el, 'js-task-list-container');\n    this.field = this.container.querySelector('.js-task-list-field');\n    this.container.addEventListener('change', (function(_this) {\n      return function(event) {\n        if (event.target.classList.contains('task-list-item-checkbox')) {\n          return _this.updateTaskList(event.target);\n        }\n      };\n    })(this));\n    this.enable();\n  }\n\n  TaskList.prototype.enable = function() {\n    var event;\n    if (this.container.querySelectorAll('.js-task-list-field').length > 0) {\n      NodeArray(this.container.querySelectorAll('.task-list-item')).forEach(function(item) {\n        return item.classList.add('enabled');\n      });\n      NodeArray(this.container.querySelectorAll('.task-list-item-checkbox')).forEach(function(checkbox) {\n        return checkbox.disabled = false;\n      });\n      this.container.classList.add('is-task-list-enabled');\n      event = createEvent('tasklist:enabled');\n      return this.container.dispatchEvent(event);\n    }\n  };\n\n  TaskList.prototype.disable = function() {\n    var event;\n    NodeArray(this.container.querySelectorAll('.task-list-item')).forEach(function(item) {\n      return item.classList.remove('enabled');\n    });\n    NodeArray(this.container.querySelectorAll('.task-list-item-checkbox')).forEach(function(checkbox) {\n      return checkbox.disabled = true;\n    });\n    this.container.classList.remove('is-task-list-enabled');\n    event = createEvent('tasklist:disabled');\n    return this.container.dispatchEvent(event);\n  };\n\n  TaskList.prototype.updateTaskList = function(item) {\n    var changeEvent, changedEvent, checkboxes, index;\n    checkboxes = this.container.querySelectorAll('.task-list-item-checkbox');\n    index = 1 + NodeArray(checkboxes).indexOf(item);\n    changeEvent = createEvent('tasklist:change', {\n      index: index,\n      checked: item.checked\n    });\n    this.field.dispatchEvent(changeEvent);\n    if (!changeEvent.defaultPrevented) {\n      this.field.value = TaskList.updateSource(this.field.value, index, item.checked);\n      changeEvent = createEvent('change');\n      this.field.dispatchEvent(changeEvent);\n      changedEvent = createEvent('tasklist:changed', {\n        index: index,\n        checked: item.checked\n      });\n      return this.field.dispatchEvent(changedEvent);\n    }\n  };\n\n  TaskList.incomplete = \"[ ]\";\n\n  TaskList.complete = \"[x]\";\n\n  TaskList.escapePattern = function(str) {\n    return str.replace(/([\\[\\]])/g, \"\\\\$1\").replace(/\\s/, \"\\\\s\").replace(\"x\", \"[xX]\");\n  };\n\n  TaskList.incompletePattern = RegExp(\"\" + (TaskList.escapePattern(TaskList.incomplete)));\n\n  TaskList.completePattern = RegExp(\"\" + (TaskList.escapePattern(TaskList.complete)));\n\n  TaskList.itemPattern = RegExp(\"^(?:\\\\s*(?:>\\\\s*)*(?:[-+*]|(?:\\\\d+\\\\.)))\\\\s*(\" + (TaskList.escapePattern(TaskList.complete)) + \"|\" + (TaskList.escapePattern(TaskList.incomplete)) + \")\\\\s+(?!\\\\(.*?\\\\))(?=(?:\\\\[.*?\\\\]\\\\s*(?:\\\\[.*?\\\\]|\\\\(.*?\\\\))\\\\s*)*(?:[^\\\\[]|$))\");\n\n  TaskList.startFencesPattern = /^`{3}.*$/;\n\n  TaskList.endFencesPattern = /^`{3}$/;\n\n  TaskList.itemsInParasPattern = RegExp(\"^(\" + (TaskList.escapePattern(TaskList.complete)) + \"|\" + (TaskList.escapePattern(TaskList.incomplete)) + \").+$\", \"g\");\n\n  TaskList.updateSource = function(source, itemIndex, checked) {\n    var clean, inCodeBlock, index, line, result;\n    clean = source.replace(/\\r/g, '').replace(this.itemsInParasPattern, '').split(\"\\n\");\n    index = 0;\n    inCodeBlock = false;\n    result = (function() {\n      var i, len, ref, results;\n      ref = source.split(\"\\n\");\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        line = ref[i];\n        if (inCodeBlock) {\n          if (line.match(this.endFencesPattern)) {\n            inCodeBlock = false;\n          }\n        } else if (line.match(this.startFencesPattern)) {\n          inCodeBlock = true;\n        } else if (indexOf.call(clean, line) >= 0 && line.match(this.itemPattern)) {\n          index += 1;\n          if (index === itemIndex) {\n            line = checked ? line.replace(this.incompletePattern, this.complete) : line.replace(this.completePattern, this.incomplete);\n          }\n        }\n        results.push(line);\n      }\n      return results;\n    }).call(this);\n    return result.join(\"\\n\");\n  };\n\n  return TaskList;\n\n})();\n\nif (typeof jQuery !== 'undefined') {\n  jQuery.fn.taskList = function(method) {\n    return this.each(function(index, el) {\n      var taskList;\n      taskList = jQuery(el).data('task-list');\n      if (!taskList) {\n        taskList = new TaskList(el);\n        jQuery(el).data('task-list', taskList);\n        if (!method || method === 'enable') {\n          return;\n        }\n      }\n      return taskList[method || 'enable']();\n    });\n  };\n}\n\nmodule.exports = TaskList;\n\n\n/***/ })\n/******/ ]);\n});","/* eslint-disable func-names, no-var, no-underscore-dangle, no-param-reassign, prefer-template, quotes, comma-dangle, consistent-return, one-var, one-var-declaration-per-line, no-else-return, max-len */\n\nimport $ from 'jquery';\n\n// LineHighlighter\n//\n// Handles single- and multi-line selection and highlight for blob views.\n//\n//\n// ### Example Markup\n//\n//   <div id=\"blob-content-holder\">\n//     <div class=\"file-content\">\n//       <div class=\"line-numbers\">\n//         <a href=\"#L1\" id=\"L1\" data-line-number=\"1\">1</a>\n//         <a href=\"#L2\" id=\"L2\" data-line-number=\"2\">2</a>\n//         <a href=\"#L3\" id=\"L3\" data-line-number=\"3\">3</a>\n//         <a href=\"#L4\" id=\"L4\" data-line-number=\"4\">4</a>\n//         <a href=\"#L5\" id=\"L5\" data-line-number=\"5\">5</a>\n//       </div>\n//       <pre class=\"code highlight\">\n//         <code>\n//           <span id=\"LC1\" class=\"line\">...</span>\n//           <span id=\"LC2\" class=\"line\">...</span>\n//           <span id=\"LC3\" class=\"line\">...</span>\n//           <span id=\"LC4\" class=\"line\">...</span>\n//           <span id=\"LC5\" class=\"line\">...</span>\n//         </code>\n//       </pre>\n//     </div>\n//   </div>\n//\n\nconst LineHighlighter = function(options = {}) {\n  options.highlightLineClass = options.highlightLineClass || 'hll';\n  options.fileHolderSelector = options.fileHolderSelector || '.file-holder';\n  options.scrollFileHolder = options.scrollFileHolder || false;\n  options.hash = options.hash || window.location.hash;\n\n  this.options = options;\n  this._hash = options.hash;\n  this.highlightLineClass = options.highlightLineClass;\n  this.setHash = this.setHash.bind(this);\n  this.highlightLine = this.highlightLine.bind(this);\n  this.clickHandler = this.clickHandler.bind(this);\n  this.highlightHash = this.highlightHash.bind(this);\n\n  this.bindEvents();\n  this.highlightHash();\n};\n\nLineHighlighter.prototype.bindEvents = function() {\n  const $fileHolder = $(this.options.fileHolderSelector);\n\n  $fileHolder.on('click', 'a[data-line-number]', this.clickHandler);\n  $fileHolder.on('highlight:line', this.highlightHash);\n};\n\nLineHighlighter.prototype.highlightHash = function(newHash) {\n  let range;\n  if (newHash && typeof newHash === 'string') this._hash = newHash;\n\n  this.clearHighlight();\n\n  if (this._hash !== '') {\n    range = this.hashToRange(this._hash);\n    if (range[0]) {\n      this.highlightRange(range);\n      const lineSelector = `#L${range[0]}`;\n      const scrollOptions = {\n        // Scroll to the first highlighted line on initial load\n        // Offset -50 for the sticky top bar, and another -100 for some context\n        offset: -150\n      };\n      if (this.options.scrollFileHolder) {\n        $(this.options.fileHolderSelector).scrollTo(lineSelector, scrollOptions);\n      } else {\n        $.scrollTo(lineSelector, scrollOptions);\n      }\n    }\n  }\n};\n\nLineHighlighter.prototype.clickHandler = function(event) {\n  var current, lineNumber, range;\n  event.preventDefault();\n  this.clearHighlight();\n  lineNumber = $(event.target).closest('a').data('lineNumber');\n  current = this.hashToRange(this._hash);\n  if (!(current[0] && event.shiftKey)) {\n    // If there's no current selection, or there is but Shift wasn't held,\n    // treat this like a single-line selection.\n    this.setHash(lineNumber);\n    return this.highlightLine(lineNumber);\n  } else if (event.shiftKey) {\n    if (lineNumber < current[0]) {\n      range = [lineNumber, current[0]];\n    } else {\n      range = [current[0], lineNumber];\n    }\n    this.setHash(range[0], range[1]);\n    return this.highlightRange(range);\n  }\n};\n\nLineHighlighter.prototype.clearHighlight = function() {\n  return $(\".\" + this.highlightLineClass).removeClass(this.highlightLineClass);\n};\n\n// Convert a URL hash String into line numbers\n//\n// hash - Hash String\n//\n// Examples:\n//\n//   hashToRange('#L5')    # => [5, null]\n//   hashToRange('#L5-15') # => [5, 15]\n//   hashToRange('#foo')   # => [null, null]\n//\n// Returns an Array\nLineHighlighter.prototype.hashToRange = function(hash) {\n  var first, last, matches;\n  // ?L(\\d+)(?:-(\\d+))?$/)\n  matches = hash.match(/^#?L(\\d+)(?:-(\\d+))?$/);\n  if (matches && matches.length) {\n    first = parseInt(matches[1], 10);\n    last = matches[2] ? parseInt(matches[2], 10) : null;\n    return [first, last];\n  } else {\n    return [null, null];\n  }\n};\n\n// Highlight a single line\n//\n// lineNumber - Line number to highlight\nLineHighlighter.prototype.highlightLine = function(lineNumber) {\n  return $(\"#LC\" + lineNumber).addClass(this.highlightLineClass);\n};\n\n// Highlight all lines within a range\n//\n// range - Array containing the starting and ending line numbers\nLineHighlighter.prototype.highlightRange = function(range) {\n  if (range[1]) {\n    const results = [];\n    const ref = range[0] <= range[1] ? range : range.reverse();\n\n    for (let lineNumber = range[0]; lineNumber <= ref[1]; lineNumber += 1) {\n      results.push(this.highlightLine(lineNumber));\n    }\n\n    return results;\n  } else {\n    return this.highlightLine(range[0]);\n  }\n};\n\n// Set the URL hash string\nLineHighlighter.prototype.setHash = function(firstLineNumber, lastLineNumber) {\n  var hash;\n  if (lastLineNumber) {\n    hash = \"#L\" + firstLineNumber + \"-\" + lastLineNumber;\n  } else {\n    hash = \"#L\" + firstLineNumber;\n  }\n  this._hash = hash;\n  return this.__setLocationHash__(hash);\n};\n\n// Make the actual hash change in the browser\n//\n// This method is stubbed in tests.\nLineHighlighter.prototype.__setLocationHash__ = function(value) {\n  return window.history.pushState({\n    url: value\n  // We're using pushState instead of assigning location.hash directly to\n  // prevent the page from scrolling on the hashchange event\n  }, document.title, value);\n};\n\nexport default LineHighlighter;\n","import Notes from './notes';\n\nexport default () => {\n  const dataEl = document.querySelector('.js-notes-data');\n  const {\n    notesUrl,\n    notesIds,\n    now,\n    diffView,\n    enableGFM,\n  } = JSON.parse(dataEl.innerHTML);\n\n  // Create a singleton so that we don't need to assign\n  // into the window object, we can just access the current isntance with Notes.instance\n  Notes.initialize(notesUrl, notesIds, now, diffView, enableGFM);\n};\n","export default () => {\n  const { protocol, host, pathname } = window.location;\n  const shareBtn = document.querySelector('.js-share-btn');\n  const embedBtn = document.querySelector('.js-embed-btn');\n  const snippetUrlArea = document.querySelector('.js-snippet-url-area');\n  const embedAction = document.querySelector('.js-embed-action');\n  const url = `${protocol}//${host + pathname}`;\n\n  shareBtn.addEventListener('click', () => {\n    shareBtn.classList.add('is-active');\n    embedBtn.classList.remove('is-active');\n    snippetUrlArea.value = url;\n    embedAction.innerText = 'Share';\n  });\n\n  embedBtn.addEventListener('click', () => {\n    embedBtn.classList.add('is-active');\n    shareBtn.classList.remove('is-active');\n    const scriptTag = `<script src=\"${url}.js\"></script>`;\n    snippetUrlArea.value = scriptTag;\n    embedAction.innerText = 'Embed';\n  });\n};\n","import $ from 'jquery';\nimport Dropzone from 'dropzone';\nimport _ from 'underscore';\nimport './preview_markdown';\nimport csrf from './lib/utils/csrf';\nimport axios from './lib/utils/axios_utils';\n\nDropzone.autoDiscover = false;\n\nexport default function dropzoneInput(form) {\n  const divHover = '<div class=\"div-dropzone-hover\"></div>';\n  const iconPaperclip = '<i class=\"fa fa-paperclip div-dropzone-icon\"></i>';\n  const $attachButton = form.find('.button-attach-file');\n  const $attachingFileMessage = form.find('.attaching-file-message');\n  const $cancelButton = form.find('.button-cancel-uploading-files');\n  const $retryLink = form.find('.retry-uploading-link');\n  const $uploadProgress = form.find('.uploading-progress');\n  const $uploadingErrorContainer = form.find('.uploading-error-container');\n  const $uploadingErrorMessage = form.find('.uploading-error-message');\n  const $uploadingProgressContainer = form.find('.uploading-progress-container');\n  const uploadsPath = window.uploads_path || null;\n  const maxFileSize = gon.max_file_size || 10;\n  const formTextarea = form.find('.js-gfm-input');\n  let handlePaste;\n  let pasteText;\n  let addFileToForm;\n  let updateAttachingMessage;\n  let isImage;\n  let getFilename;\n  let uploadFile;\n\n  formTextarea.wrap('<div class=\"div-dropzone\"></div>');\n  formTextarea.on('paste', event => handlePaste(event));\n\n  // Add dropzone area to the form.\n  const $mdArea = formTextarea.closest('.md-area');\n  form.setupMarkdownPreview();\n  const $formDropzone = form.find('.div-dropzone');\n  $formDropzone.parent().addClass('div-dropzone-wrapper');\n  $formDropzone.append(divHover);\n  $formDropzone.find('.div-dropzone-hover').append(iconPaperclip);\n\n  if (!uploadsPath) {\n    $formDropzone.addClass('js-invalid-dropzone');\n    return;\n  }\n\n  const dropzone = $formDropzone.dropzone({\n    url: uploadsPath,\n    dictDefaultMessage: '',\n    clickable: true,\n    paramName: 'file',\n    maxFilesize: maxFileSize,\n    uploadMultiple: false,\n    headers: csrf.headers,\n    previewContainer: false,\n    processing: () => $('.div-dropzone-alert').alert('close'),\n    dragover: () => {\n      $mdArea.addClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0.7);\n    },\n    dragleave: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n    },\n    drop: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n      formTextarea.focus();\n    },\n    success(header, response) {\n      const processingFileCount = this.getQueuedFiles().length + this.getUploadingFiles().length;\n      const shouldPad = processingFileCount >= 1;\n\n      pasteText(response.link.markdown, shouldPad);\n      // Show 'Attach a file' link only when all files have been uploaded.\n      if (!processingFileCount) $attachButton.removeClass('hide');\n      addFileToForm(response.link.url);\n    },\n    error: (file, errorMessage = 'Attaching the file failed.', xhr) => {\n      // If 'error' event is fired by dropzone, the second parameter is error message.\n      // If the 'errorMessage' parameter is empty, the default error message is set.\n      // If the 'error' event is fired by backend (xhr) error response, the third parameter is\n      // xhr object (xhr.responseText is error message).\n      // On error we hide the 'Attach' and 'Cancel' buttons\n      // and show an error.\n\n      // If there's xhr error message, let's show it instead of dropzone's one.\n      const message = xhr ? xhr.responseText : errorMessage;\n\n      $uploadingErrorContainer.removeClass('hide');\n      $uploadingErrorMessage.html(message);\n      $attachButton.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n    totaluploadprogress(totalUploadProgress) {\n      updateAttachingMessage(this.files, $attachingFileMessage);\n      $uploadProgress.text(`${Math.round(totalUploadProgress)}%`);\n    },\n    sending: () => {\n      // DOM elements already exist.\n      // Instead of dynamically generating them,\n      // we just either hide or show them.\n      $attachButton.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n      $uploadingProgressContainer.removeClass('hide');\n      $cancelButton.removeClass('hide');\n    },\n    removedfile: () => {\n      $attachButton.removeClass('hide');\n      $cancelButton.addClass('hide');\n      $uploadingProgressContainer.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n    },\n    queuecomplete: () => {\n      $('.dz-preview').remove();\n      $('.markdown-area').trigger('input');\n\n      $uploadingProgressContainer.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n  });\n\n  const child = $(dropzone[0]).children('textarea');\n\n  // removeAllFiles(true) stops uploading files (if any)\n  // and remove them from dropzone files queue.\n  $cancelButton.on('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dropzone.forElement($formDropzone.get(0)).removeAllFiles(true);\n  });\n\n  // If 'error' event is fired, we store a failed files,\n  // clear dropzone files queue, change status of failed files to undefined,\n  // and add that files to the dropzone files queue again.\n  // addFile() adds file to dropzone files queue and upload it.\n  $retryLink.on('click', (e) => {\n    const dropzoneInstance = Dropzone.forElement(e.target.closest('.js-main-target-form').querySelector('.div-dropzone'));\n    const failedFiles = dropzoneInstance.files;\n\n    e.preventDefault();\n\n    // 'true' parameter of removeAllFiles() cancels\n    // uploading of files that are being uploaded at the moment.\n    dropzoneInstance.removeAllFiles(true);\n\n    failedFiles.map((failedFile) => {\n      const file = failedFile;\n\n      if (file.status === Dropzone.ERROR) {\n        file.status = undefined;\n        file.accepted = undefined;\n      }\n\n      return dropzoneInstance.addFile(file);\n    });\n  });\n  // eslint-disable-next-line consistent-return\n  handlePaste = (event) => {\n    const pasteEvent = event.originalEvent;\n    if (pasteEvent.clipboardData && pasteEvent.clipboardData.items) {\n      const image = isImage(pasteEvent);\n      if (image) {\n        event.preventDefault();\n        const filename = getFilename(pasteEvent) || 'image.png';\n        const text = `{{${filename}}}`;\n        pasteText(text);\n        return uploadFile(image.getAsFile(), filename);\n      }\n    }\n  };\n\n  isImage = (data) => {\n    let i = 0;\n    while (i < data.clipboardData.items.length) {\n      const item = data.clipboardData.items[i];\n      if (item.type.indexOf('image') !== -1) {\n        return item;\n      }\n      i += 1;\n    }\n    return false;\n  };\n\n  pasteText = (text, shouldPad) => {\n    let formattedText = text;\n    if (shouldPad) {\n      formattedText += '\\n\\n';\n    }\n    const textarea = child.get(0);\n    const caretStart = textarea.selectionStart;\n    const caretEnd = textarea.selectionEnd;\n    const textEnd = $(child).val().length;\n    const beforeSelection = $(child).val().substring(0, caretStart);\n    const afterSelection = $(child).val().substring(caretEnd, textEnd);\n    $(child).val(beforeSelection + formattedText + afterSelection);\n    textarea.setSelectionRange(caretStart + formattedText.length, caretEnd + formattedText.length);\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    formTextarea.get(0).dispatchEvent(new Event('input'));\n    return formTextarea.trigger('input');\n  };\n\n  addFileToForm = (path) => {\n    $(form).append(`<input type=\"hidden\" name=\"files[]\" value=\"${_.escape(path)}\">`);\n  };\n\n  getFilename = (e) => {\n    let value;\n    if (window.clipboardData && window.clipboardData.getData) {\n      value = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      value = e.clipboardData.getData('text/plain');\n    }\n    value = value.split('\\r');\n    return value[0];\n  };\n\n  const showSpinner = () => $uploadingProgressContainer.removeClass('hide');\n\n  const closeSpinner = () => $uploadingProgressContainer.addClass('hide');\n\n  const showError = (message) => {\n    $uploadingErrorContainer.removeClass('hide');\n    $uploadingErrorMessage.html(message);\n  };\n\n  const closeAlertMessage = () => form.find('.div-dropzone-alert').alert('close');\n\n  const insertToTextArea = (filename, url) => {\n    const $child = $(child);\n    $child.val((index, val) => val.replace(`{{${filename}}}`, url));\n\n    $child.trigger('change');\n  };\n\n  uploadFile = (item, filename) => {\n    const formData = new FormData();\n    formData.append('file', item, filename);\n\n    showSpinner();\n    closeAlertMessage();\n\n    axios.post(uploadsPath, formData)\n      .then(({ data }) => {\n        const md = data.link.markdown;\n\n        insertToTextArea(filename, md);\n        closeSpinner();\n      })\n      .catch((e) => {\n        showError(e.response.data.message);\n        closeSpinner();\n      });\n  };\n\n  updateAttachingMessage = (files, messageContainer) => {\n    let attachingMessage;\n    const filesCount = files.filter(file => file.status === 'uploading' || file.status === 'queued').length;\n\n    // Dinamycally change uploading files text depending on files number in\n    // dropzone files queue.\n    if (filesCount > 1) {\n      attachingMessage = `Attaching ${filesCount} files -`;\n    } else {\n      attachingMessage = 'Attaching a file -';\n    }\n\n    messageContainer.text(attachingMessage);\n  };\n\n  form.find('.markdown-selector').click(function onMarkdownClick(e) {\n    e.preventDefault();\n    $(this).closest('.gfm-form').find('.div-dropzone').click();\n    formTextarea.focus();\n  });\n}\n","/* eslint-disable func-names, no-var, no-param-reassign, quotes, one-var, one-var-declaration-per-line, operator-assignment, no-else-return, prefer-template, prefer-arrow-callback, max-len, consistent-return, no-unused-vars, max-len */\nimport $ from 'jquery';\nimport { insertText } from '~/lib/utils/common_utils';\n\nfunction selectedText(text, textarea) {\n  return text.substring(textarea.selectionStart, textarea.selectionEnd);\n}\n\nfunction lineBefore(text, textarea) {\n  var split;\n  split = text.substring(0, textarea.selectionStart).trim().split('\\n');\n  return split[split.length - 1];\n}\n\nfunction lineAfter(text, textarea) {\n  return text.substring(textarea.selectionEnd).trim().split('\\n')[0];\n}\n\nfunction blockTagText(text, textArea, blockTag, selected) {\n  const before = lineBefore(text, textArea);\n  const after = lineAfter(text, textArea);\n  if (before === blockTag && after === blockTag) {\n    // To remove the block tag we have to select the line before & after\n    if (blockTag != null) {\n      textArea.selectionStart = textArea.selectionStart - (blockTag.length + 1);\n      textArea.selectionEnd = textArea.selectionEnd + (blockTag.length + 1);\n    }\n    return selected;\n  } else {\n    return blockTag + \"\\n\" + selected + \"\\n\" + blockTag;\n  }\n}\n\nfunction moveCursor(textArea, tag, wrapped, removedLastNewLine) {\n  var pos;\n  if (!textArea.setSelectionRange) {\n    return;\n  }\n  if (textArea.selectionStart === textArea.selectionEnd) {\n    if (wrapped) {\n      pos = textArea.selectionStart - tag.length;\n    } else {\n      pos = textArea.selectionStart;\n    }\n\n    if (removedLastNewLine) {\n      pos -= 1;\n    }\n\n    return textArea.setSelectionRange(pos, pos);\n  }\n}\n\nexport function insertMarkdownText(textArea, text, tag, blockTag, selected, wrap) {\n  var textToInsert, inserted, selectedSplit, startChar, removedLastNewLine, removedFirstNewLine, currentLineEmpty, lastNewLine;\n  removedLastNewLine = false;\n  removedFirstNewLine = false;\n  currentLineEmpty = false;\n\n  // Remove the first newline\n  if (selected.indexOf('\\n') === 0) {\n    removedFirstNewLine = true;\n    selected = selected.replace(/\\n+/, '');\n  }\n\n  // Remove the last newline\n  if (textArea.selectionEnd - textArea.selectionStart > selected.replace(/\\n$/, '').length) {\n    removedLastNewLine = true;\n    selected = selected.replace(/\\n$/, '');\n  }\n\n  selectedSplit = selected.split('\\n');\n\n  if (!wrap) {\n    lastNewLine = textArea.value.substr(0, textArea.selectionStart).lastIndexOf('\\n');\n\n    // Check whether the current line is empty or consists only of spaces(=handle as empty)\n    if (/^\\s*$/.test(textArea.value.substring(lastNewLine, textArea.selectionStart))) {\n      currentLineEmpty = true;\n    }\n  }\n\n  startChar = !wrap && !currentLineEmpty && textArea.selectionStart > 0 ? '\\n' : '';\n\n  if (selectedSplit.length > 1 && (!wrap || (blockTag != null && blockTag !== ''))) {\n    if (blockTag != null && blockTag !== '') {\n      textToInsert = blockTagText(text, textArea, blockTag, selected);\n    } else {\n      textToInsert = selectedSplit.map(function(val) {\n        if (val.indexOf(tag) === 0) {\n          return \"\" + (val.replace(tag, ''));\n        } else {\n          return \"\" + tag + val;\n        }\n      }).join('\\n');\n    }\n  } else {\n    textToInsert = \"\" + startChar + tag + selected + (wrap ? tag : ' ');\n  }\n\n  if (removedFirstNewLine) {\n    textToInsert = '\\n' + textToInsert;\n  }\n\n  if (removedLastNewLine) {\n    textToInsert += '\\n';\n  }\n\n  insertText(textArea, textToInsert);\n  return moveCursor(textArea, tag, wrap, removedLastNewLine);\n}\n\nfunction updateText(textArea, tag, blockTag, wrap) {\n  var $textArea, selected, text;\n  $textArea = $(textArea);\n  textArea = $textArea.get(0);\n  text = $textArea.val();\n  selected = selectedText(text, textArea);\n  $textArea.focus();\n  return insertMarkdownText(textArea, text, tag, blockTag, selected, wrap);\n}\n\nfunction replaceRange(s, start, end, substitute) {\n  return s.substring(0, start) + substitute + s.substring(end);\n}\n\nexport function addMarkdownListeners(form) {\n  return $('.js-md', form).off('click').on('click', function() {\n    const $this = $(this);\n    return updateText($this.closest('.md-area').find('textarea'), $this.data('mdTag'), $this.data('mdBlock'), !$this.data('mdPrepend'));\n  });\n}\n\nexport function removeMarkdownListeners(form) {\n  return $('.js-md', form).off('click');\n}\n","import $ from 'jquery';\nimport autosize from 'autosize';\nimport GfmAutoComplete, * as GFMConfig from './gfm_auto_complete';\nimport dropzoneInput from './dropzone_input';\nimport { addMarkdownListeners, removeMarkdownListeners } from './lib/utils/text_markdown';\n\nexport default class GLForm {\n  constructor(form, enableGFM = {}) {\n    this.form = form;\n    this.textarea = this.form.find('textarea.js-gfm-input');\n    this.enableGFM = Object.assign({}, GFMConfig.defaultAutocompleteConfig, enableGFM);\n    // Disable autocomplete for keywords which do not have dataSources available\n    const dataSources = (gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources) || {};\n    Object.keys(this.enableGFM).forEach(item => {\n      if (item !== 'emojis') {\n        this.enableGFM[item] = !!dataSources[item];\n      }\n    });\n    // Before we start, we should clean up any previous data for this form\n    this.destroy();\n    // Setup the form\n    this.setupForm();\n    this.form.data('glForm', this);\n  }\n\n  destroy() {\n    // Clean form listeners\n    this.clearEventListeners();\n    if (this.autoComplete) {\n      this.autoComplete.destroy();\n    }\n    this.form.data('glForm', null);\n  }\n\n  setupForm() {\n    const isNewForm = this.form.is(':not(.gfm-form)');\n    this.form.removeClass('js-new-note-form');\n    if (isNewForm) {\n      this.form.find('.div-dropzone').remove();\n      this.form.addClass('gfm-form');\n      // remove notify commit author checkbox for non-commit notes\n      gl.utils.disableButtonIfEmptyField(this.form.find('.js-note-text'), this.form.find('.js-comment-button, .js-note-new-discussion'));\n      this.autoComplete = new GfmAutoComplete(gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources);\n      this.autoComplete.setup(this.form.find('.js-gfm-input'), this.enableGFM);\n      dropzoneInput(this.form);\n      autosize(this.textarea);\n    }\n    // form and textarea event listeners\n    this.addEventListeners();\n    addMarkdownListeners(this.form);\n    // hide discard button\n    this.form.find('.js-note-discard').hide();\n    this.form.show();\n    if (this.isAutosizeable) this.setupAutosize();\n  }\n\n  setupAutosize() {\n    this.textarea.off('autosize:resized')\n      .on('autosize:resized', this.setHeightData.bind(this));\n\n    this.textarea.off('mouseup.autosize')\n      .on('mouseup.autosize', this.destroyAutosize.bind(this));\n\n    setTimeout(() => {\n      autosize(this.textarea);\n      this.textarea.css('resize', 'vertical');\n    }, 0);\n  }\n\n  setHeightData() {\n    this.textarea.data('height', this.textarea.outerHeight());\n  }\n\n  destroyAutosize() {\n    const outerHeight = this.textarea.outerHeight();\n\n    if (this.textarea.data('height') === outerHeight) return;\n\n    autosize.destroy(this.textarea);\n\n    this.textarea.data('height', outerHeight);\n    this.textarea.outerHeight(outerHeight);\n    this.textarea.css('max-height', window.outerHeight);\n  }\n\n  clearEventListeners() {\n    this.textarea.off('focus');\n    this.textarea.off('blur');\n    removeMarkdownListeners(this.form);\n  }\n\n  addEventListeners() {\n    this.textarea.on('focus', function focusTextArea() {\n      $(this).closest('.md-area').addClass('is-focused');\n    });\n    this.textarea.on('blur', function blurTextArea() {\n      $(this).closest('.md-area').removeClass('is-focused');\n    });\n  }\n}\n","/* eslint-disable func-names, wrap-iife, prefer-arrow-callback, no-unused-vars, consistent-return, camelcase, comma-dangle, max-len, class-methods-use-this */\n\n// Zen Mode (full screen) textarea\n//\n/*= provides zen_mode:enter */\n/*= provides zen_mode:leave */\n\nimport $ from 'jquery';\nimport 'vendor/jquery.scrollTo';\nimport Dropzone from 'dropzone';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/pause/mousetrap-pause';\n\nDropzone.autoDiscover = false;\n\n//\n// ### Events\n//\n// `zen_mode:enter`\n//\n// Fired when the \"Edit in fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-enter\n//\n// `zen_mode:leave`\n//\n// Fired when the \"Leave Fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-leave\n//\n\nexport default class ZenMode {\n  constructor() {\n    this.active_backdrop = null;\n    this.active_textarea = null;\n    $(document).on('click', '.js-zen-enter', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:enter');\n    });\n    $(document).on('click', '.js-zen-leave', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:leave');\n    });\n    $(document).on('zen_mode:enter', (function(_this) {\n      return function(e) {\n        return _this.enter($(e.target).closest('.md-area').find('.zen-backdrop'));\n      };\n    })(this));\n    $(document).on('zen_mode:leave', (function(_this) {\n      return function(e) {\n        return _this.exit();\n      };\n    })(this));\n    $(document).on('keydown', function(e) {\n      // Esc\n      if (e.keyCode === 27) {\n        e.preventDefault();\n        return $(document).trigger('zen_mode:leave');\n      }\n    });\n  }\n\n  enter(backdrop) {\n    Mousetrap.pause();\n    this.active_backdrop = $(backdrop);\n    this.active_backdrop.addClass('fullscreen');\n    this.active_textarea = this.active_backdrop.find('textarea');\n    // Prevent a user-resized textarea from persisting to fullscreen\n    this.active_textarea.removeAttr('style');\n    this.active_textarea.focus();\n  }\n\n  exit() {\n    if (this.active_textarea) {\n      Mousetrap.unpause();\n      this.active_textarea.closest('.zen-backdrop').removeClass('fullscreen');\n      this.scrollTo(this.active_textarea);\n      this.active_textarea = null;\n      this.active_backdrop = null;\n\n      const $dropzone = $('.div-dropzone');\n      if ($dropzone && !$dropzone.hasClass('js-invalid-dropzone')) {\n        Dropzone.forElement('.div-dropzone').enable();\n      }\n    }\n  }\n\n  scrollTo(zen_area) {\n    return $.scrollTo(zen_area, 0, {\n      offset: -150\n    });\n  }\n}\n","import LineHighlighter from '~/line_highlighter';\nimport BlobViewer from '~/blob/viewer';\nimport ZenMode from '~/zen_mode';\nimport initNotes from '~/init_notes';\nimport snippetEmbed from '~/snippet/snippet_embed';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new LineHighlighter(); // eslint-disable-line no-new\n  new BlobViewer(); // eslint-disable-line no-new\n  initNotes();\n  new ZenMode(); // eslint-disable-line no-new\n  snippetEmbed();\n});\n","/* eslint-disable no-param-reassign, prefer-template, no-void, consistent-return */\n\nimport AccessorUtilities from './lib/utils/accessor';\n\nexport default class Autosave {\n  constructor(field, key) {\n    this.field = field;\n\n    this.isLocalStorageAvailable = AccessorUtilities.isLocalStorageAccessSafe();\n    if (key.join != null) {\n      key = key.join('/');\n    }\n    this.key = 'autosave/' + key;\n    this.field.data('autosave', this);\n    this.restore();\n    this.field.on('input', () => this.save());\n  }\n\n  restore() {\n    if (!this.isLocalStorageAvailable) return;\n    if (!this.field.length) return;\n\n    const text = window.localStorage.getItem(this.key);\n\n    if ((text != null ? text.length : void 0) > 0) {\n      this.field.val(text);\n    }\n\n    this.field.trigger('input');\n    // v-model does not update with jQuery trigger\n    // https://github.com/vuejs/vue/issues/2804#issuecomment-216968137\n    const event = new Event('change', { bubbles: true, cancelable: false });\n    const field = this.field.get(0);\n    if (field) {\n      field.dispatchEvent(event);\n    }\n  }\n\n  save() {\n    if (!this.field.length) return;\n\n    const text = this.field.val();\n\n    if (this.isLocalStorageAvailable && (text != null ? text.length : void 0) > 0) {\n      return window.localStorage.setItem(this.key, text);\n    }\n\n    return this.reset();\n  }\n\n  reset() {\n    if (!this.isLocalStorageAvailable) return;\n\n    return window.localStorage.removeItem(this.key);\n  }\n\n  dispose() {\n    this.field.off('input');\n  }\n}\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n */\n/* global Mousetrap:true */\nMousetrap = (function(Mousetrap) {\n    var self = Mousetrap,\n        _originalStopCallback = self.stopCallback,\n        enabled = true;\n\n    self.stopCallback = function(e, element, combo) {\n        if (!enabled) {\n            return true;\n        }\n\n        return _originalStopCallback(e, element, combo);\n    };\n\n    self.pause = function() {\n        enabled = false;\n    };\n\n    self.unpause = function() {\n        enabled = true;\n    };\n\n    return self;\n}) (Mousetrap);\n"],"sourceRoot":""}